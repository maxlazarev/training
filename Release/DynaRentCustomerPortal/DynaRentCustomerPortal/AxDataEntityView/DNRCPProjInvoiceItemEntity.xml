<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRCPProjInvoiceItemEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class DNRCPProjInvoiceItemEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>productNameComputedColumnDefinition</Name>
				<Source><![CDATA[
    public static str productNameComputedColumnDefinition()
    {
        return SysComputedColumn::if(
            SysComputedColumn::notEqualExpression(SysComputedColumn::comparisonField(tableStr(DNRCPProjInvoiceItemEntity), dataEntityDataSourceStr(DNRCPProjInvoiceItemEntity, EcoResProductTranslation), fieldStr(EcoResProductTranslation, Name)),
            SysComputedColumn::comparisonLiteral('')),
            SysComputedColumn::returnField(tableStr(DNRCPProjInvoiceItemEntity), dataEntityDataSourceStr(DNRCPProjInvoiceItemEntity, EcoResProductTranslation), fieldStr(EcoResProductTranslation, Name)),
            SysComputedColumn::returnField(tableStr(DNRCPProjInvoiceItemEntity), dataEntityDataSourceStr(DNRCPProjInvoiceItemEntity, EcoResProductTranslationMaster), fieldStr(EcoResProductTranslation, Name)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>postLoad</Name>
				<Source><![CDATA[
    public void postLoad()
    {
        super();

        AmountMST       amount;
        ProjInvoiceItem projInvoiceItem = ProjInvoiceItem::findRecId(this.RecordId);

        MarkupTrans markupTrans;

        while select CurrencyCode, TransDate, sum(CalculatedAmount) from markupTrans
                group by CurrencyCode, TransDate
                where markupTrans.TransTableId == projInvoiceItem.TableId
                && markupTrans.CalculatedAmount > 0
                && markupTrans.TransRecId == projInvoiceItem.RecId
                && !markupTrans.IsDeleted
                && markupTrans.Voucher
        {
            CurrencyExchangeHelper currencyExchangeHelper = CurrencyExchangeHelper::newExchangeDate(Ledger::current(), markupTrans.TransDate);
            amount += currencyExchangeHelper.calculateTransactionToAccounting(markupTrans.CurrencyCode, markupTrans.CalculatedAmount, true);
        }

        this.LineAmount = amount;

        if (appl.ttsLevel() > 0 && RORParameters::find().DNRCPAsyncUpdate)
        {
            DNRCPEntityAsyncCaller::scheduleUpdate('DNRCPProjInvoiceItemEntity' , this);  // since it is not possible to adjust posted invoice we can call DW async even for insert
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCTQuery</Name>
				<Source><![CDATA[
    public static Query defaultCTQuery()
    {
        Query query = new Query();

        QueryBuildDataSource qbds = query.addDataSource(tableNum(ProjInvoiceItem));

        qbds = qbds.addDataSource(tableNum(ProjTable));
        qbds.joinMode(JoinMode::InnerJoin);
        qbds.addLink(fieldNum(ProjInvoiceItem, ProjId), fieldNum(ProjTable, ProjId));


        qbds = qbds.addDataSource(tableNum(CustTable));
        qbds.joinMode(JoinMode::InnerJoin);
        qbds.addLink(fieldNum(ProjTable, CustAccount), fieldNum(CustTable, AccountNum));

        return query;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>DNRCustomerPortal</ConfigurationKey>
	<Label>@DNR:PortalProjectInvoiceLinesItems</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<Tags>DNRCPInvoice</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>DNRCPProjInvoiceItemStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<IsReadOnly>Yes</IsReadOnly>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>ProjInvoiceItems</PublicCollectionName>
	<PublicEntityName>ProjInvoiceItem</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CategoryId</Name>
			<DataField>CategoryId</DataField>
			<DataSource>ProjInvoiceItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CurrencyId</Name>
			<DataField>CurrencyId</DataField>
			<DataSource>ProjInvoiceItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemId</Name>
			<DataField>ItemId</DataField>
			<DataSource>ProjInvoiceItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PriceUnit</Name>
			<DataField>PriceUnit</DataField>
			<DataSource>ProjInvoiceItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Qty</Name>
			<DataField>Qty</DataField>
			<DataSource>ProjInvoiceItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesUnit</Name>
			<DataField>SalesUnit</DataField>
			<DataSource>ProjInvoiceItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TransDate</Name>
			<DataField>TransDate</DataField>
			<DataSource>ProjInvoiceItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjInvoiceId</Name>
			<DataField>ProjInvoiceId</DataField>
			<DataSource>ProjInvoiceItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RecordId</Name>
			<DataField>RecId</DataField>
			<DataSource>ProjInvoiceItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ProductName</Name>
			<ComputedFieldMethod>productNameComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>EcoResProductName</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesId</Name>
			<DataField>SalesId</DataField>
			<DataSource>ProjInvoiceItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldReal">
			<Name>LineAmount</Name>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OrderingCustomerProspectId</Name>
			<DataField>DNRCPOrderingCustomerProspectId</DataField>
			<DataSource>DNRCPCustTableSubRelTableView</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DNRCPCustAccount</Name>
			<DataField>DNRCPCustAccount</DataField>
			<DataSource>DNRCPCustTableSubRelTableView</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LedgerVoucher</Name>
			<DataField>LedgerVoucher</DataField>
			<DataSource>ProjInvoiceJour</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjId</Name>
			<DataField>ProjId</DataField>
			<DataSource>ProjInvoiceItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceDate</Name>
			<DataField>InvoiceDate</DataField>
			<DataSource>ProjInvoiceItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InventTransId</Name>
			<DataField>InventTransId</DataField>
			<DataSource>ProjInvoiceItem</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ProjInvoiceId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>RecordId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>InvoiceDate</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>LedgerVoucher</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>ProjInvoiceItem</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>ProjInvoiceItem</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventDim</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>InventDim</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>InventDistinctProduct</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>InventDistinctProduct</Table>
								<DataSources>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>EcoResDistinctProduct</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>EcoResDistinctProduct</Table>
										<DataSources>
											<AxQuerySimpleEmbeddedDataSource>
												<Name>EcoResProductSystemLanguage</Name>
												<DynamicFields>Yes</DynamicFields>
												<Table>EcoResProductSystemLanguage</Table>
												<DataSources />
												<DerivedDataSources />
												<Fields />
												<Ranges />
												<JoinMode>OuterJoin</JoinMode>
												<Relations>
													<AxQuerySimpleDataSourceRelation>
														<Name>QueryDataSourceRelation1</Name>
														<Field>RecId</Field>
														<JoinDataSource>EcoResDistinctProduct</JoinDataSource>
														<RelatedField>Product</RelatedField>
													</AxQuerySimpleDataSourceRelation>
												</Relations>
											</AxQuerySimpleEmbeddedDataSource>
											<AxQuerySimpleEmbeddedDataSource>
												<Name>EcoResProductTranslation</Name>
												<DynamicFields>Yes</DynamicFields>
												<Table>EcoResProductTranslation</Table>
												<DataSources />
												<DerivedDataSources />
												<Fields />
												<Ranges />
												<JoinMode>OuterJoin</JoinMode>
												<Relations>
													<AxQuerySimpleDataSourceRelation>
														<Name>QueryDataSourceRelation1</Name>
														<Field>RecId</Field>
														<JoinDataSource>EcoResDistinctProduct</JoinDataSource>
														<RelatedField>Product</RelatedField>
													</AxQuerySimpleDataSourceRelation>
													<AxQuerySimpleDataSourceRelation>
														<Name>QueryDataSourceRelation2</Name>
														<Field>SystemLanguageId</Field>
														<JoinDataSource>EcoResProductSystemLanguage</JoinDataSource>
														<RelatedField>LanguageId</RelatedField>
													</AxQuerySimpleDataSourceRelation>
												</Relations>
											</AxQuerySimpleEmbeddedDataSource>
											<AxQuerySimpleEmbeddedDataSource>
												<Name>InventTable</Name>
												<DynamicFields>Yes</DynamicFields>
												<Table>InventTable</Table>
												<DataSources>
													<AxQuerySimpleEmbeddedDataSource>
														<Name>EcoResProductMaster</Name>
														<DynamicFields>Yes</DynamicFields>
														<Table>EcoResProductMaster</Table>
														<DataSources />
														<DerivedDataSources />
														<Fields />
														<Ranges />
														<JoinMode>OuterJoin</JoinMode>
														<Relations>
															<AxQuerySimpleDataSourceRelation>
																<Name>QueryDataSourceRelation1</Name>
																<Field>Product</Field>
																<JoinDataSource>InventTable</JoinDataSource>
																<RelatedField>RecId</RelatedField>
															</AxQuerySimpleDataSourceRelation>
														</Relations>
													</AxQuerySimpleEmbeddedDataSource>
													<AxQuerySimpleEmbeddedDataSource>
														<Name>EcoResProductTranslationMaster</Name>
														<DynamicFields>Yes</DynamicFields>
														<Table>EcoResProductTranslation</Table>
														<DataSources />
														<DerivedDataSources />
														<Fields />
														<Ranges />
														<JoinMode>OuterJoin</JoinMode>
														<Relations>
															<AxQuerySimpleDataSourceRelation>
																<Name>QueryDataSourceRelation1</Name>
																<Field>RecId</Field>
																<JoinDataSource>EcoResProductMaster</JoinDataSource>
																<RelatedField>Product</RelatedField>
															</AxQuerySimpleDataSourceRelation>
															<AxQuerySimpleDataSourceRelation>
																<Name>QueryDataSourceRelation2</Name>
																<Field>SystemLanguageId</Field>
																<JoinDataSource>EcoResProductSystemLanguage</JoinDataSource>
																<RelatedField>LanguageId</RelatedField>
															</AxQuerySimpleDataSourceRelation>
														</Relations>
													</AxQuerySimpleEmbeddedDataSource>
												</DataSources>
												<DerivedDataSources />
												<Fields />
												<Ranges />
												<JoinMode>OuterJoin</JoinMode>
												<Relations>
													<AxQuerySimpleDataSourceRelation>
														<Name>QueryDataSourceRelation1</Name>
														<Field>ItemId</Field>
														<JoinDataSource>InventDistinctProduct</JoinDataSource>
														<RelatedField>ItemId</RelatedField>
													</AxQuerySimpleDataSourceRelation>
												</Relations>
											</AxQuerySimpleEmbeddedDataSource>
										</DataSources>
										<DerivedDataSources>
											<AxQuerySimpleDerivedDataSource>
												<Name>EcoResDistinctProduct_EcoResDistinctProductVariant</Name>
												<DynamicFields>Yes</DynamicFields>
												<Table>EcoResDistinctProductVariant</Table>
												<DataSources />
												<DerivedDataSources />
												<Fields />
												<Ranges />
											</AxQuerySimpleDerivedDataSource>
										</DerivedDataSources>
										<Fields />
										<Ranges />
										<JoinMode>OuterJoin</JoinMode>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<Field>Product</Field>
												<JoinDataSource>InventDistinctProduct</JoinDataSource>
												<RelatedField>RecId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
								</DataSources>
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>ItemId</Field>
										<JoinDataSource>ProjInvoiceItem</JoinDataSource>
										<RelatedField>ItemId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation2</Name>
										<Field>configId</Field>
										<JoinDataSource>InventDim</JoinDataSource>
										<RelatedField>configId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation3</Name>
										<Field>InventColorId</Field>
										<JoinDataSource>InventDim</JoinDataSource>
										<RelatedField>InventColorId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation4</Name>
										<Field>InventSizeId</Field>
										<JoinDataSource>InventDim</JoinDataSource>
										<RelatedField>InventSizeId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation5</Name>
										<Field>InventStyleId</Field>
										<JoinDataSource>InventDim</JoinDataSource>
										<RelatedField>InventStyleId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation_InventVersionId</Name>
										<Field>InventVersionId</Field>
										<JoinDataSource>InventDim</JoinDataSource>
										<RelatedField>InventVersionId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>InventDimId</Field>
								<JoinDataSource>ProjInvoiceItem</JoinDataSource>
								<RelatedField>inventDimId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ProjTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>ProjTable</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>DNRCPCustTableSubRelTableView</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>DNRCPCustTableSubRelTableView</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>CustAccount</Field>
										<JoinDataSource>ProjTable</JoinDataSource>
										<RelatedField>DNRCPCustAccount</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>ProjId</Field>
								<JoinDataSource>ProjInvoiceItem</JoinDataSource>
								<RelatedField>ProjId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ProjInvoiceJour</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>ProjInvoiceJour</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>InvoiceDate</Field>
								<JoinDataSource>ProjInvoiceItem</JoinDataSource>
								<RelatedField>InvoiceDate</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<Field>ProjInvoiceId</Field>
								<JoinDataSource>ProjInvoiceItem</JoinDataSource>
								<RelatedField>ProjInvoiceId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>