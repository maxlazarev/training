<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>DNRCPContactAccess</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class DNRCPContactAccess extends FormRun
{
    DirPartyTable dirPartyTableInit;
    SysTableLookup sysTableLookup;
    DataAreaId  dataAreaCaller;
    DialogField field;

}
]]></Source>
			</Method>
			<Method>
				<Name>insertCustomer</Name>
				<Source><![CDATA[
    /// <summary>
    /// inserts customer based on parameter
    /// </summary>
    public void insertCustomer(DataAreaId _dataAreaId, SmmBusRelAccount _smmBusRelAccount)
    {
        DNRCPContactAccess contactAccess;

        changecompany(_dataAreaId)
        {
            ttsbegin;
            contactAccess.ContactPersonPartyId = dirPartyTableInit.PartyNumber;
            contactAccess.smmBusRelAccount = _smmBusRelAccount;
            contactAccess.AccountCompanyName = _dataAreaId;
            contactAccess.ContactCompanyName =  dataAreaCaller;
            contactAccess.insert();
            ttscommit;
        }

        DNRCPContactAccess_ds.research(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// form init method
    /// </summary>
    public void init()
    {
        super();

        if (this.args() && this.args().record())
        {
            dirPartyTableInit = this.args().record();
            dataAreaCaller = this.args().parm();
            RefreshData.visible(false);

        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>DNRCPContactAccess</Name>
				<Methods>
					<Method>
						<Name>displayAccountNum</Name>
						<Source><![CDATA[
        /// <summary>
        /// display method to retrive customer from prospect
        /// </summary>
        public display AccountNum displayAccountNum(DNRCPContactAccess _contactAccess)
        {
            smmBusRelTable smmBusRelTable;
            CustTable      custTable;

            select crosscompany smmBusRelTable
                where smmBusRelTable.BusRelAccount == _contactAccess.SmmBusRelAccount
                &&    smmBusRelTable.DataAreaId    == _contactAccess.AccountCompanyName
                    join AccountNum from custTable
                    where custTable.Party == smmBusRelTable.Party;

            return custTable.AccountNum;
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayAccountAlias</Name>
						<Source><![CDATA[
        /// <summary>
        /// display method to retrive customer from prospect
        /// </summary>
        public display AccountNum displayAccountAlias(DNRCPContactAccess _contactAccess)
        {
            smmBusRelTable smmBusRelTable;
            DirPartyTable  dirPartyTable;

            select crosscompany smmBusRelTable
                where smmBusRelTable.BusRelAccount == _contactAccess.smmBusRelAccount
                &&    smmBusRelTable.DataAreaId    == _contactAccess.AccountCompanyName
                    join NameAlias from dirPartyTable
                    where dirPartyTable.RecId == smmBusRelTable.Party;

            return dirPartyTable.NameAlias;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>AddCustAccount</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>lookupCustomer</Name>
						<Source><![CDATA[
        public void lookupCustomer(FormStringControl _buttonControl)
        {
            sysTableLookup = SysTableLookup::newParameters(tableNum(smmBusRelTable), _buttonControl);

            Query query = new Query();
            Query.allowCrossCompany(true);

            QueryBuildDataSource qbds = query.addDataSource(tablenum(smmBusRelTable));

            QueryBuildDataSource qbdsCustTable = qbds.addDataSource(tablenum(CustTable));
            qbdsCustTable.relations(true);

            QueryBuildDataSource qbdsDirPartyTable = qbds.addDataSource(tablenum(DirPartyTable));
            qbdsDirPartyTable.relations(true);

            if (field.value())
            {
                str qvalue = strFmt('((%1.%2 like "%7*") || (%3.%4 like "%7*") || (%5.%6 like "%7*"))',
                    qbdsCustTable.name(),
                    fieldStr(CustTable, AccountNum),
                    qbdsDirPartyTable.name(),
                    fieldStr(DirPartyTable, PartyNumber),
                    qbdsDirPartyTable.name(),
                    fieldStr(DirPartyTable, Name),
                    field.value());

                qbds.addRange(fieldNum(CustTable, DataAreaId)).value(qvalue);
            }

            sysTableLookup.addLookupMethod(tableMethodStr(smmBusRelTable, DNRCustAccount));
            sysTableLookup.addLookupMethod(tableMethodStr(smmBusRelTable, DNRDirPartyNumber), true);
            sysTableLookup.addLookupMethod(tableMethodStr(smmBusRelTable, Name));
            sysTableLookup.addLookupfield(fieldnum(smmBusRelTable, BusRelAccount));
            sysTableLookup.addLookupfield(fieldnum(smmBusRelTable, DataAreaId));
            sysTableLookup.parmQuery(query);
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// add customer to the list
        /// </summary>
        public void clicked()
        {
            DirPartyTable   dirPartyTable;
            smmBusRelTable  busRelTable;
            CustTable       custTable;

            Dialog  dialog = new Dialog("@DNR:AddCustomer");
            field = dialog.addField(extendedTypeStr(CustAccount));

            field.control().registerOverrideMethod(
                methodStr(FormStringControl, lookup),
                literalStr(lookupCustomer),
                this);

            if (dialog.run() && dialog.closedOk() && field.value())
            {
                while select crosscompany RecId from dirPartyTable
                    where dirPartyTable.PartyNumber == field.value()
                        join busRelAccount from busRelTable
                        where dirPartyTable.RecId == busRelTable.Party
                            exists join custTable
                            where busRelTable.Party == custTable.Party
                {
                    if (busRelTable.busRelAccount)
                    {
                        element.insertCustomer(busRelTable.DataAreaId, busRelTable.busRelAccount);
                    }
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AddGustGroup</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            Dialog dialog = new Dialog("@DNR:AddCustomerGroup");
            DialogField fieldCustomerGroup = dialog.addField(extendedTypeStr(CustGroupId));

            if (dialog.run() && dialog.closedOk() && fieldCustomerGroup.value())
            {
                CustTable custTable;
                smmBusRelTable smmBusRelTable;
                DNRCPContactAccess contactAccess;

                while select RecId from custTable
                    where custTable.CustGroup == fieldCustomerGroup.value()
                        join  BusRelAccount from smmBusRelTable
                        where smmBusRelTable.Party == custTable.Party
                            notexists join contactAccess
                            where contactAccess.SmmBusRelAccount == smmBusRelTable.BusRelAccount
                               && contactAccess.ContactPersonPartyId == dirPartyTableInit.PartyNumber
                {
                    element.insertCustomer(custTable.DataAreaId, smmBusRelTable.BusRelAccount);
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RefreshData</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// refreshes all customers
        /// </summary>
        public void clicked()
        {
            super();

            DNRCPContactAccess contactAccess;

            while select crosscompany SmmBusRelAccount, AccountCompanyName from contactAccess
                group by SmmBusRelAccount, AccountCompanyName
            {
                DNRCPContactAccess::insertCustomer(contactAccess);
            }
            
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>DNRCPContactAccess</Name>
			<Table>DNRCPContactAccess</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountCompanyName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContactCompanyName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContactPersonPartyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>smmBusRelAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<CrossCompanyAutoQuery>Yes</CrossCompanyAutoQuery>
			<AllowCreate>No</AllowCreate>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@DNR:ContactAccess</Caption>
		<Pattern xmlns="">SimpleList</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<Style xmlns="">SimpleList</Style>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPaneHeader</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneTabControl">
						<Name>FormActionPaneTabControl1</Name>
						<Type>ActionPaneTab</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>ContactGroup</Name>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>AddCustAccount</Name>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@DNR:AddCustomer</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>AddGustGroup</Name>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@DNR:AddCustomerGroup</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>RefreshData</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS67314</Text>
									</AxFormControl>
								</Controls>
								<Caption>Portal</Caption>
							</AxFormControl>
						</Controls>
						<Caption>Setup</Caption>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>NavigationList</Name>
				<Pattern>CustomAndQuickFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>NavigationListQuickFilterControl</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
									<Value>CustTable_Name</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<AllowEdit>No</AllowEdit>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>displayAccountNum</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>displayAccountNum</DataMethod>
						<DataSource>DNRCPContactAccess</DataSource>
						<Label>@SYS24500</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>displayAccountAlias</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>displayAccountAlias</DataMethod>
						<DataSource>DNRCPContactAccess</DataSource>
						<Label>@SYS31438</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>DNRCPContactAccess_DataAreaId</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>DataAreaId</DataField>
						<DataSource>DNRCPContactAccess</DataSource>
					</AxFormControl>
				</Controls>
				<Border>None</Border>
				<DataSource>DNRCPContactAccess</DataSource>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>