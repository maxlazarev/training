<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRCPContactAccess</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class DNRCPContactAccess extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Ignore contact person 
    /// </summary>
    /// <param name = "_fieldIdToCheck"></param>
    /// <returns></returns>
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        if (_fieldIdToCheck == fieldnum(DNRCPContactAccess, ContactPersonPartyId))
        {
            ret = true;
        }
        else
        {
            ret = super(_fieldIdToCheck);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// insert method
    /// </summary>
    public void insert()
    {
        boolean customerNotExists = (select SmmBusRelAccount from DNRCPContactAccess 
            where DNRCPContactAccess.SmmBusRelAccount == this.SmmBusRelAccount).SmmBusRelAccount == "" ? true : false;

        super();

        if (customerNotExists)
        {
            DNRCPContactAccess::insertCustomer(this);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertCustomer</Name>
				<Source><![CDATA[
    public static void insertCustomer(DNRCPContactAccess _contactAccess)
    {
        smmBusRelTable busRelTable;
        CustTable custTable;

        SysOperationServiceController entityAsyncCaller = new SysOperationServiceController(classStr(DNRCPEntityAsyncCaller),
                                                    methodStr(DNRCPEntityAsyncCaller, syncCDSCustomer),
                                                    SysOperationExecutionMode::ReliableAsynchronous);

        select crosscompany busRelTable
                where busRelTable.DataAreaId    == _contactAccess.AccountCompanyName
                &&    busRelTable.BusRelAccount == _contactAccess.SmmBusRelAccount
                    join AccountNum from custTable
                    where custTable.Party == busRelTable.Party;

        DNRCPEntityAsyncCaller entityAsyncCallerContact = entityAsyncCaller.getDataContractObject();
        entityAsyncCallerContact.parmCustAccount(custTable.AccountNum);
        entityAsyncCallerContact.parmDataAreaId(busRelTable.DataAreaId);
        entityAsyncCaller.parmDialogCaption(strFmt('Dual-Write update %1 in %2', custTable.AccountNum, busRelTable.DataAreaId));
        
        entityAsyncCaller.run();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>DNRCustomerPortal</ConfigurationKey>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SmmBusRelAccount</Name>
			<ExtendedDataType>smmBusRelAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContactPersonPartyId</Name>
			<ExtendedDataType>DirPartyNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountCompanyName</Name>
			<ExtendedDataType>DirPartyName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContactCompanyName</Name>
			<ExtendedDataType>DirPartyName</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CustomerContact</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>SmmBusRelAccount</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ContactPersonPartyId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>smmBusRelTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>smmBusRelTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SmmBusRelAccount1</Name>
					<SourceEDT>smmBusRelAccount</SourceEDT>
					<Field>SmmBusRelAccount</Field>
					<RelatedField>BusRelAccount</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>DirPartyTable</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>DirPartyTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ContactPersonPartyId</Name>
					<Field>ContactPersonPartyId</Field>
					<RelatedField>PartyNumber</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>