<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RTPReturnNoteGenerateDialog</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class RTPReturnNoteGenerateDialog extends FormRun
{
    CustTable                   custTable;

    RTPReturnNoteLinesGenerate  returnNoteLinesGenerate;
}
]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    public boolean canClose()
    {
        boolean ret;
    
        ret = super();
    
        if (element.closedOk())
        {
            if (RadioButtonWorkLocation.selection() == RORAllSelect::Select
            &&  !VenueCode.text())
            {
                ret = checkFailed(strFmt("@SYS26332", extendedTypeId2pname(extendedTypeNum(RORVenueCode))));
            }
    
            if (ItemRadioButton.selection() == RORAllSelect::Select
            &&  !ItemId.text())
            {
                ret = checkFailed(strFmt("@SYS26332", extendedTypeId2pname(extendedTypeNum(ItemId))));
            }
    
            if (RadioButtonWarehouse.selection() == RORAllSelect::Select)
            {
                if (!InventSiteId.text())
                {
                    ret = checkFailed(strFmt("@SYS26332", extendedTypeId2pname(extendedTypeNum(InventSiteId))));
                }
    
                if (!InventLocationId.text())
                {
                    ret = checkFailed(strFmt("@SYS26332", extendedTypeId2pname(extendedTypeNum(InventLocationId))));
                }
            }

            if (OffRentRadioButton.selection() == RORAllSelect::Select
            &&  !OffRentDateTime.dateTimeValue())
            {
                ret = checkFailed(strFmt("@SYS26332", extendedTypeId2pname(extendedTypeNum(ROROffRentDateTime))));
            }

            if (ProjectRadioButton.selection() == RORAllSelect::Select
            &&  !ProjectId.text())
            {
                ret = checkFailed(strFmt("@SYS26332", extendedTypeId2pname(extendedTypeNum(ProjId))));
            }

            if(RadioButtonRentalOrder.selection() == RORAllSelect::Select && !RentalOrder.text())
            {
                ret = checkfailed(strFmt("@SYS26332", "@DNR6231"));
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        /*returnNoteLinesGenerate.parmVenueCode(VenueCode.text());
        returnNoteLinesGenerate.parmItemId(ItemId.text());
        returnNoteLinesGenerate.parmInventSiteId(InventSiteId.text());
        returnNoteLinesGenerate.parmInventLocationId(InventLocationId.text());*/
    
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        super();
    
        returnNoteLinesGenerate.parmInventLocationId(InventLocationId.text());
        returnNoteLinesGenerate.parmInventSiteId(InventSiteId.text());
        returnNoteLinesGenerate.parmItemId(ItemId.text());
        returnNoteLinesGenerate.parmGenerateBulkItemLinesPerOrder(GenerateBulkItemLinesPerOrder.value());
        returnNoteLinesGenerate.parmVenueCode(VenueCode.text());
        returnNoteLinesGenerate.parmSalesId(RentalOrder.text());
        returnNoteLinesGenerate.parmProjId(ProjectId.text());
        returnNoteLinesGenerate.parmOffRentDateTime(DateTimeUtil::removeTimeZoneOffset(OffRentDateTime.dateTimeValue(), DateTimeUtil::getUserPreferredTimeZone()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        if (!element.args().caller())
        {
            throw error(error::missingParameter(element));
        }
    
        returnNoteLinesGenerate = element.args().caller().runBase();
    
        if (returnNoteLinesGenerate.parmInventJournalTable().RTPCustAccount)
        {
            custTable = CustTable::find(returnNoteLinesGenerate.parmInventJournalTable().RTPCustAccount);
        }
    
        super();
    
        element.updateDesign(); 
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    public void updateDesign()
    {
        VenueCode.allowEdit(false);
        ItemId.allowEdit(false);
        InventSiteId.allowEdit(false);
        InventLocationId.allowEdit(false);
        RentalOrder.allowEdit(false);
        OffRentDateTime.allowEdit(false);
        ProjectId.allowEdit(false);

        if (returnNoteLinesGenerate.parmOffRentDateTime())
        {
            OffRentRadioButton.selection(RORAllSelect::Select);
            OffRentDateTime.allowEdit(true);
            OffRentDateTime.dateTimeValue(returnNoteLinesGenerate.parmOffRentDateTime());
        }

        if (returnNoteLinesGenerate.parmVenueCode())
        {
            RadioButtonWorkLocation.selection(RORAllSelect::Select);
            VenueCode.allowEdit(true);
            VenueCode.text(returnNoteLinesGenerate.parmVenueCode());
        }
    
        if (returnNoteLinesGenerate.parmItemId())
        {
            ItemRadioButton.selection(RORAllSelect::Select);
            ItemId.allowEdit(true);
            ItemId.text(returnNoteLinesGenerate.parmItemId());
        }
    
        if (returnNoteLinesGenerate.parmInventLocationId()
        ||  returnNoteLinesGenerate.parmInventSiteId())
        {
            RadioButtonWarehouse.selection(RORAllSelect::Select);
            InventSiteId.allowEdit(true);
            InventLocationId.allowEdit(true);
    
            InventSiteId.text(returnNoteLinesGenerate.parmInventSiteId());
            InventLocationId.text(returnNoteLinesGenerate.parmInventLocationId());
        }
    
        if (returnNoteLinesGenerate.parmSalesId())
        {
            RadioButtonRentalOrder.selection(RORAllSelect::Select);
            RentalOrder.allowEdit(true);
        }

        if (returnNoteLinesGenerate.parmProjId())
        {
            ProjectRadioButton.selection(RORAllSelect::Select);
            ProjectId.allowEdit(true);
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>RadioButtonWarehouse</Name>
				<Type>RadioButton</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
        
            if (this.selection() == RORAllSelect::All)
            {
                InventSiteId.text('');
                InventLocationId.text('');
                InventSiteId.allowEdit(false);
                InventLocationId.allowEdit(false);
                InventSiteId.mandatory(false);
                InventLocationId.mandatory(false);
            }
            else
            {
                InventSiteId.allowEdit(true);
                InventLocationId.allowEdit(true);
                InventSiteId.mandatory(true);
                InventLocationId.mandatory(true);
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventSiteId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
        
            InventLocationId.text('');
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;
        
            ret = this.text() ? super() : true;
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventLocationId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Query                   query = new Query();
            QueryBuildDataSource    qbdsInventLocation;
            SysTableLookup          sysTableLookup;
        
            qbdsInventLocation = query.addDataSource(tableNum(InventLocation));
        
            if (InventSiteId.text())
            {
                qbdsInventLocation.addRange(fieldNum(InventLocation, InventSiteId)).value(SysQuery::value(InventSiteId.text()));
            }
        
            sysTableLookup = SysTableLookup::newParameters(tableNum(InventLocation),this);
            sysTableLookup.addLookupfield(fieldNum(InventLocation, InventLocationId));
            sysTableLookup.addLookupfield(fieldNum(InventLocation, Name));
        
            if (!InventSiteId.text())
            {
                sysTableLookup.addLookupfield(fieldNum(InventLocation, InventSiteId));
            }
        
            sysTableLookup.parmQuery(query);
            sysTableLookup.performFormLookup();
        
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
        
            if (InventLocationId.text())
            {
                InventSiteId.text(InventLocation::find(InventLocationId.text()).InventSiteId);
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RadioButtonRentalOrder</Name>
				<Type>RadioButton</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
        
            if (this.selection() == RORAllSelect::All)
            {
                RentalOrder.text('');
                RentalOrder.allowEdit(false);
                RentalOrder.mandatory(false);
            }
            else
            {
                RentalOrder.allowEdit(true);
                RentalOrder.mandatory(true);
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RentalOrder</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Query                   query = new Query();
            QueryBuildDataSource    qbdsInventLocation;
            SysTableLookup          sysTableLookup;
        
            qbdsInventLocation = query.addDataSource(tableNum(SalesTable));
        
            if (custTable)
            {
                qbdsInventLocation.addRange(fieldNum(SalesTable, CustAccount)).value(SysQuery::value(custTable.AccountNum));
            }
        
            qbdsInventLocation.addRange(fieldNum(SalesTable, SalesType)).value(SysQuery::value(SalesType::RORRental));
            qbdsInventLocation.addRange(fieldNum(SalesTable, SalesStatus)).value(SysQuery::valueNot(SalesStatus::Invoiced));
            qbdsInventLocation.addRange(fieldNum(SalesTable, SalesStatus)).value(SysQuery::valueNot(SalesStatus::Canceled));
        
            sysTableLookup = SysTableLookup::newParameters(tableNum(SalesTable),this);
            sysTableLookup.addLookupfield(fieldNum(SalesTable, SalesId));
            sysTableLookup.setLabel("@DNR6231");
            sysTableLookup.addLookupfield(fieldNum(SalesTable, SalesName));
            sysTableLookup.parmQuery(query);
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RadioButtonWorkLocation</Name>
				<Type>RadioButton</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
        
            if (this.selection() == RORAllSelect::All)
            {
                VenueCode.text('');
                VenueCode.allowEdit(false);
                VenueCode.mandatory(false);
            }
            else
            {
                VenueCode.allowEdit(true);
                VenueCode.mandatory(true);
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>VenueCode</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Args    args;
            FormRun formRun;
        
            args = new args();
            args.name(formStr(RORVenueTableLookup));
            args.caller(element);
        
            formRun = ClassFactory::formRunClassOnClient(args);
            this.performFormLookup(formRun);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ItemRadioButton</Name>
				<Type>RadioButton</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
        
            if (this.selection() == RORAllSelect::All)
            {
                ItemId.text('');
                ItemId.allowEdit(false);
                ItemId.mandatory(false);
            }
            else
            {
                ItemId.allowEdit(true);
                ItemId.mandatory(true);
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ItemId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            str                     dateTime;
            Query                   query;
            QueryBuildDataSource    qbdsInventTable, qbdsSalesLine, qbdsInventTransOriginSalesLine /*, qbdsRentalTrans, qbdsRentalType*/;
            SysTableLookup          sysTableLookup;
        
            dateTime = DateTimeUtil::toStr(DateTimeUtil::applyTimeZoneOffset(returnNoteLinesGenerate.parmInventJournalTable().RTPReturnDateTime, DateTimeUtil::getUserPreferredTimeZone()));
        
            query = new Query();
        
            qbdsInventTable = query.addDataSource(tableNum(InventTable));
        
            qbdsSalesLine = qbdsInventTable.addDataSource(tableNum(SalesLine));
            qbdsSalesLine.addSelectionField(fieldNum(SalesLine, TableId));
            qbdsSalesLine.joinMode(JoinMode::ExistsJoin);
            qbdsSalesLine.relations(false);
            qbdsSalesLine.addLink(fieldNum(InventTable, ItemId), fieldNum(SalesLine, ItemId));
        
            qbdsSalesLine.addRange(fieldNum(SalesLine, CustAccount)).value(strFmt('((%1.%2 == "%3") && ((%1.%4 == %5) || (%1.%4 == %6)))',
                                                                           qbdsSalesLine.name(),
                                                                           fieldStr(SalesLine, CustAccount),
                                                                           SysQuery::value(custTable.AccountNum),
                                                                           fieldStr(SalesLine, RORTradeType),
                                                                           enum2int(RORTradeType::Rental),
                                                                           enum2int(RORTradeType::SubRental)));
        
            qbdsInventTransOriginSalesLine = qbdsSalesLine.addDataSource(tableNum(InventTransOriginSalesLine));
            qbdsInventTransOriginSalesLine.addSelectionField(fieldNum(InventTransOriginSalesLine, TableId));
            qbdsInventTransOriginSalesLine.joinMode(JoinMode::InnerJoin);
            qbdsInventTransOriginSalesLine.relations(false);
            qbdsInventTransOriginSalesLine.addLink(fieldNum(SalesLine, DataAreaId), fieldNum(InventTransOriginSalesLine, SalesLineDataAreaId));
            qbdsInventTransOriginSalesLine.addLink(fieldNum(SalesLine, InventTransId), fieldNum(InventTransOriginSalesLine, SalesLineInventTransId));
        
            /*qbdsRentalTrans = qbdsInventTransOriginSalesLine.addDataSource(tableNum(BOBRentalTrans));
            qbdsRentalTrans.addSelectionField(fieldNum(BOBRentalTrans, TableId));
            qbdsRentalTrans.joinMode(JoinMode::InnerJoin);
            qbdsRentalTrans.relations(false);
            qbdsRentalTrans.addLink(fieldNum(InventTransOriginSalesLine, InventTransOrigin), fieldNum(BOBRentalTrans, InventTransOrigin));
        
            qbdsRentalTrans.addRange(fieldNum(BOBRentalTrans, SubStatus)).value(strFmt('((%1.%2 >= %3) && (%1.%2 < %4) && (%1.%5 <= %6) && (%1.%7 >= %8))',
                                                                                qbdsRentalTrans.name(),
                                                                                fieldStr(BOBRentalTrans, SubStatus),
                                                                                enum2int(BOBRentalSubStatus::Delivered),
                                                                                enum2int(BOBRentalSubStatus::Returned),
                                                                                fieldStr(BOBRentalTrans, FromDateTime),
                                                                                dateTime,
                                                                                fieldStr(BOBRentalTrans, ToDateTime),
                                                                                dateTime));*/
        
            /*qbdsRentalType = qbdsRentalTrans.addDataSource(tableNum(BOBRentalType));
            qbdsRentalType.relations(false);
            qbdsRentalType.joinMode(JoinMode::NoExistsJoin);
            qbdsRentalType.addRange(fieldNum(BOBRentalType, RecId)).value(strFmt("(%1 == %2.%3)",
                                                                            fieldStr(BOBRentalType, RentalTypeId),
                                                                            qbdsSalesLine.name(),
                                                                            fieldStr(SalesLine, BOBRentalTypeIdRequested)));
            qbdsRentalType.addRange(fieldNum(BOBRentalType, Classification)).value(SysQuery::value(BOBRentalTypeClassification::Serialized));*/
        
            sysTableLookup = SysTableLookup::newParameters(tableNum(InventTable),this);
            sysTableLookup.addLookupfield(fieldNum(InventTable, ItemId));
            sysTableLookup.addLookupfield(fieldNum(InventTable, NameAlias));
            sysTableLookup.addLookupfield(fieldNum(InventTable, ItemType));
            sysTableLookup.addLookupfield(fieldNum(InventTable, Product));
        
            sysTableLookup.parmQuery(query);
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;
        
            ret = super();
        
            if (ret)
            {
                ret = returnNoteLinesGenerate.validateItem(this.text());
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OffRentRadioButton</Name>
				<Type>RadioButton</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
        
            if (this.selection() == RORAllSelect::All)
            {
                OffRentDateTime.dateTimeValue(DateTimeUtil::minValue());
                OffRentDateTime.allowEdit(false);
                OffRentDateTime.mandatory(false);
            }
            else
            {
                OffRentDateTime.allowEdit(true);
                OffRentDateTime.mandatory(true);
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjectRadioButton</Name>
				<Type>RadioButton</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
    
            ret = super();
    
            if (this.selection() == RORAllSelect::All)
            {
                ProjectId.text('');
                ProjectId.allowEdit(false);
                ProjectId.mandatory(false);
            }
            else
            {
                ProjectId.allowEdit(true);
                ProjectId.mandatory(true);
            }
    
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjectId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Query                   query = new Query();
            QueryBuildDataSource    qbdsProjTable;
            SysTableLookup          sysTableLookup;
    
            qbdsProjTable = query.addDataSource(tableNum(ProjTable));
    
            sysTableLookup = SysTableLookup::newParameters(tableNum(ProjTable),this);
            sysTableLookup.addLookupfield(fieldNum(ProjTable, ProjId));
            sysTableLookup.addLookupfield(fieldNum(ProjTable, Name));
            sysTableLookup.addLookupfield(fieldNum(ProjTable, Type));
            sysTableLookup.addLookupfield(fieldNum(ProjTable, CustAccount));
            sysTableLookup.parmQuery(query);
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Caption xmlns="">@DNR8628</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogStartGrp</Name>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>GroupWarehouse</Name>
						<ElementPosition>1789569705</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormRadioButtonControl">
								<Name>RadioButtonWarehouse</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>RadioButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<EnumType>RORAllSelect</EnumType>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventSiteId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>InventSiteId</ExtendedDataType>
								<LabelPosition>Above</LabelPosition>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventLocationId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>InventLocationId</ExtendedDataType>
								<LabelPosition>Above</LabelPosition>
							</AxFormControl>
						</Controls>
						<Caption>@SYS6437</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>GroupRentalOrder</Name>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormRadioButtonControl">
								<Name>RadioButtonRentalOrder</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>RadioButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<EnumType>RORAllSelect</EnumType>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>RentalOrder</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>SalesId</ExtendedDataType>
								<Label>@DNR6231</Label>
								<LabelPosition>Above</LabelPosition>
							</AxFormControl>
						</Controls>
						<Caption>@DNR10</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>GroupWorkLocation</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormRadioButtonControl">
								<Name>RadioButtonWorkLocation</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>RadioButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<EnumType>RORAllSelect</EnumType>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>VenueCode</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>RORVenueCode</ExtendedDataType>
								<LabelPosition>Above</LabelPosition>
							</AxFormControl>
						</Controls>
						<Caption>@DNR6160</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>GroupItem</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormRadioButtonControl">
								<Name>ItemRadioButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>RadioButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<EnumType>RORAllSelect</EnumType>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ItemId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>ItemId</ExtendedDataType>
								<LabelPosition>Above</LabelPosition>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>GenerateBulkItemLinesPerOrder</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HelpText>@DNR:GenerateBulkItemLinesPerOrderHelp</HelpText>
								<Type>CheckBox</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@DNR:GenerateBulkItemLinesPerOrder</Label>
								<LabelPosition>Above</LabelPosition>
							</AxFormControl>
						</Controls>
						<Caption>@SYS14428</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>GroupOffRent</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormRadioButtonControl">
								<Name>OffRentRadioButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>RadioButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<EnumType>RORAllSelect</EnumType>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateTimeControl">
								<Name>OffRentDateTime</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>DateTime</Type>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>ROROffRentDateTime</ExtendedDataType>
							</AxFormControl>
						</Controls>
						<Caption>@DNR114</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>GroupProject</Name>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormRadioButtonControl">
								<Name>ProjectRadioButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>RadioButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<EnumType>RORAllSelect</EnumType>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ProjectId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>ProjId</ExtendedDataType>
								<LabelPosition>Above</LabelPosition>
							</AxFormControl>
						</Controls>
						<Caption>@SYS4534</Caption>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>