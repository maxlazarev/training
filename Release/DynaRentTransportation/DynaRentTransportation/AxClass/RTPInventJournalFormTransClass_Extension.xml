<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RTPInventJournalFormTransClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(InventJournalFormTrans))]
public final class RTPInventJournalFormTransClass_Extension
{
    private FormButtonControl           ctrlRTPConfirmReturn;
    private FormFunctionButtonControl   ctrlRTPShowWorkOrder;
    private boolean isRentalTransportation;
    private boolean isRentalTransportationChecked;

    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initButtons</Name>
				<Source><![CDATA[
    protected void initButtons()
    {
        next initButtons();

        boolean                     allowPost;
        InventJournalTable          inventJournalTable;
        FormButtonControl           ctrlConfirmReturnLocal;
        FormFunctionButtonControl   ctrlShowWorkOrderLocal;
    
        if (this.RTPIsRentalTransportation())
        {
            inventJournalTable      = InventJournalTable::find(journalTrans.JournalId);
            ctrlConfirmReturnLocal  = this.RTPParmCtrlConfirmReturn();
            ctrlShowWorkOrderLocal  = this.RTPParmCtrlShowWorkOrder();
    
            if (ctrlCheckJournal || ctrlPostJournal)
            {
                allowPost = inventJournalTable
                    && inventJournalTable.RTPIsReturnedAtWarehouse
                    && (!inventJournalTable.RTPWorkOrderId ||
                    WPPWorkOrderLine::getLowestStatus(inventJournalTable.RTPWorkOrderId) >= WPPWorkOrderLineStatus::Completed);
    
            }
    
            if (ctrlCheckJournal)
            {
                ctrlCheckJournal.enabled(allowPost);
            }
    
            if (ctrlPostJournal)
            {
                ctrlPostJournal.enabled(allowPost);
            }
    
            if (ctrlConfirmReturnLocal)
            {
                ctrlConfirmReturnLocal.enabled(!inventJournalTable.RTPWorkOrderId);
            }
    
            if (ctrlShowWorkOrderLocal)
            {
                ctrlShowWorkOrderLocal.enabled(inventJournalTable.RTPWorkOrderId != '');
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>runbaseMainEnd</Name>
				<Source><![CDATA[
    public void runbaseMainEnd(JournalRunbaseCallbackable _runBaseBatch, boolean _fromCatchError)
    {
        next runbaseMainEnd(_runBaseBatch, _fromCatchError);

        if (this.RTPIsRentalTransportation())
        {
            this.journalTrans_DS().research(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>RTPIsRentalTransportation</Name>
				<Source><![CDATA[
    // extension methods

    public boolean RTPIsRentalTransportation()
    {
        if (!isRentalTransportationChecked)
        {
            if (formRun.args().dataset() == tableNum(InventJournalTable)
            &&  formRun.args().record().RecId
                &&  formRun.args().record().getFieldValue(fieldStr(InventJournalTable, JournalType)) == InventJournalType::RTPReturn)
            {
                isRentalTransportation = true;
            }
            isRentalTransportationChecked = true;
        }

        return isRentalTransportation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RTPParmCtrlConfirmReturn</Name>
				<Source><![CDATA[
    public FormButtonControl RTPParmCtrlConfirmReturn(FormButtonControl _ctrlRTPConfirmReturn = ctrlRTPConfirmReturn)
    {
        ctrlRTPConfirmReturn = _ctrlRTPConfirmReturn;
        return ctrlRTPConfirmReturn;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RTPParmCtrlShowWorkOrder</Name>
				<Source><![CDATA[
    public FormFunctionButtonControl RTPParmCtrlShowWorkOrder(FormFunctionButtonControl _ctrlRTPShowWorkOrder = ctrlRTPShowWorkOrder)
    {
        ctrlRTPShowWorkOrder = _ctrlRTPShowWorkOrder;
        return ctrlRTPShowWorkOrder;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>