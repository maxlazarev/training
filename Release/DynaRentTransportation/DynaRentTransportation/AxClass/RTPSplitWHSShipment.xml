<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RTPSplitWHSShipment</Name>
	<SourceCode>
		<Declaration><![CDATA[
class RTPSplitWHSShipment extends RunBase
{
    // Packed
    WHSShipmentId   shipmentId;
    SysQueryRun     queryrun;
    TmpFrmVirtual   tmpFrmVirtualLines;

    #define.CurrentVersion(1)
    #define.Version1(1)
    #localmacro.CurrentList
        shipmentId
    #endmacro

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createWHSShimpent</Name>
				<Source><![CDATA[
    private WHSShipmentTable createWHSShimpent(WHSShipmentTable _shipment, WHSLoadId _loadId)
    {
        WHSShipmentTable shipment;
        NumberSeq   numberSeq;
    
        buf2Buf(_shipment, shipment);
    
        shipment.ShipmentId = shipment.getShipmentId();
        shipment.LoadId = _loadId;
        shipment.insert();
    
        return shipment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        boolean ret;
    
        ret = super();
    
        // shipmentId is handled via the edit method on the form
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmDefault</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the internal variables.
    /// </summary>
    /// <remarks>
    ///    This method is called when a <c>SysLastValue</c> record cannot be found when the code calls the
    ///    <c>SysLastValue.GetLast</c> method. Remember to call the <c>super</c> method.
    /// </remarks>
    public void initParmDefault()
    {
        this.initQuery();
    
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQuery</Name>
				<Source><![CDATA[
    void initQuery()
    {
        Query   query = new Query();
    
        query.addDataSource(tablenum(WHSShipmentTable));
        queryrun = new SysQueryRun(query);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion, #CurrentList, queryrun.pack()];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShipmentId</Name>
				<Source><![CDATA[
    WHSShipmentId parmShipmentId(WHSShipmentId _shipmentId  = shipmentId)
    {
        shipmentId = _shipmentId;
    
        return shipmentId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTmpFrmVirtualLines</Name>
				<Source><![CDATA[
    public TmpFrmVirtual parmTmpFrmVirtualLines(TmpFrmVirtual _tmpFrmVirtualLines = tmpFrmVirtualLines)
    {
        tmpFrmVirtualLines = _tmpFrmVirtualLines;
        return tmpFrmVirtualLines;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryrun</Name>
				<Source><![CDATA[
    QueryRun queryrun()
    {
        return queryrun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runDialog</Name>
				<Source><![CDATA[
    public boolean runDialog()
    {
        FormRun     formRun;
        Args        args;
    
        args = new Args();
        args.name(formStr(RTPSplitWHSShipment));
        args.caller(this);
        //args.record(_buffer);
    
        formRun = classfactory.formRunClass(args);
        formRun.init();
        formRun.run();
        formRun.wait();
        return formRun.closedOk();
    }

]]></Source>
			</Method>
			<Method>
				<Name>runsImpersonated</Name>
				<Source><![CDATA[
    public boolean runsImpersonated()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showQueryValues</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether to add a select button to the dialog box.
    /// </summary>
    /// <returns>
    ///    Always returns true.
    /// </returns>
    /// <remarks>
    ///    If you click this button, it will show the query form. Therefore, the <c>queryRun</c> method has to
    ///    return a valid <c>queryRun</c> .If you change the return value to false the button will no longer
    ///    be added.
    /// </remarks>
    public boolean showQueryValues()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>splitShipment</Name>
				<Source><![CDATA[
    public void splitShipment()
    {
        WHSLoadLine         callerTrans;
        WHSLoadLine         loadLine;
        WHSLoadTable        callerTable;
        WHSLoadTable        loadTable;
        WHSShipmentTable    shipment;
        Qty                 qtyToSplit;
        boolean             firstLine = true;
        boolean             deleteOrig;
        
        ttsbegin;
    
        while select tmpFrmVirtualLines order by RecordNo
        {
            qtyToSplit = tmpFrmVirtualLines.Qty;
            select forupdate callerTrans
            where callerTrans.RecId == tmpFrmVirtualLines.RecordNo;
            
            deleteOrig = (qtyToSplit == callerTrans.qty);
    
            if  (callerTrans && tmpFrmVirtualLines.Qty)
            {
    
                if (firstLine)
                {
                    callerTable = WHSLoadTable::find(callerTrans.LoadId);
                    loadTable.setLoadId();
                    loadTable.LoadDirection     = WHSLoadDirection::Outbound;
                    loadTable.InventLocationId  = callerTable.InventLocationId;
                    loadTable.InventSiteId      = callerTable.InventSiteId;
                    loadTable.insert();
                    
                    shipment = this.createWHSShimpent(WHSShipmentTable::find(callerTrans.shipmentId), loadTable.LoadId);
                    
                    firstLine = false;
                }
    
                loadLine.clear();
                loadLine.initFromSalesLine(SalesLine::findInventTransId(callerTrans.InventTransId));
                loadLine.LoadId = loadTable.LoadId;
                loadLine.Qty = qtyToSplit;
                loadLine.insert();

                callerTrans.Qty -= qtyToSplit;
                callerTrans.update();
    
                if (deleteOrig)
                {
                    callerTrans.delete();
                }
            }
        }
    
        if (!firstLine)
        {
            this.createWPPWorkOrder(shipment);
        }
    
        ttscommit;
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>createWPPWorkOrder</Name>
				<Source><![CDATA[
    public void createWPPWorkOrder(WHSShipmentTable _shipment)
    {
        WPPParameters               parameters = WPPParameters::find();
        WPPWorkOrderSynchronizer    workOrderSynchronizer;
        WPPWorkOrderTemplateId      templateId;
        
        switch (_shipment.RTPDisplaySourceOrderType())
        {
            case enum2str(InventTransType::TransferOrderShip):
                templateId = parameters.RTPWorkOrderTemplateIdTransfer;
                break;

            case enum2str(SalesType::RORRental):
                templateId = parameters.RTPWorkOrderTemplateIdRental;
                break;

            case enum2str(SalesType::Sales):
                templateId = parameters.RTPWorkOrderTemplateIdSales;
                break;
        }

        if (isConfigurationkeyEnabled(configurationKeyNum(RTPTransportModule)) && templateId)
        {
            // create work order
            workOrderSynchronizer = new WPPWorkOrderSynchronizer_RTPTransport(_shipment);
            workOrderSynchronizer.run();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        Version     version = RunBase::getVersion(packedClass);
        container   queryCon;
    
        switch (version)
        {
            case #CurrentVersion:
                [version,#CurrentList,queryCon] = packedClass;
                if (SysQuery::isPackedOk(queryCon))
                    queryrun = new SysQueryRun(queryCon);
                else
                    this.initQuery();
                break;
            default:
                return false;
        }
    
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    client server static RTPSplitWHSShipment construct()
    {
        return new RTPSplitWHSShipment();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    client server static void main(Args _args)
    {
        WHSShipmentTable        shipment;
        RTPSplitWHSShipment     splitWHSShipment = RTPSplitWHSShipment::construct();
    
        shipment = _args.record();
    
        splitWHSShipment.parmShipmentId(shipment.shipmentId);
    
        if (splitWHSShipment.runDialog())
        {
            splitWHSShipment.splitShipment();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>