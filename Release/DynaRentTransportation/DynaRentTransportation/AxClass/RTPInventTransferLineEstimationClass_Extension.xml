<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RTPInventTransferLineEstimationClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(InventTransferLineEstimation))]
public final class RTPInventTransferLineEstimationClass_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateEstimated</Name>
				<Source><![CDATA[
    protected InventUpd_Estimated updateEstimated(InventMovSubType _inventMovSubType)
    {
        InventUpd_Estimated estimated = next updateEstimated(_inventMovSubType);
        
        boolean createCompensatingMovement = (inventTransferLine.RORTradeType == RORTradeType::Rental || inventTransferLine.RORTradeType == RORTradeType::SubRental);
        
        if(createCompensatingMovement)
        {
            InventMovSubType inventMovSubTypeCompensatingMovement;

            if (_inventMovSubType == InventMovSubType::None)
            {
                inventMovSubTypeCompensatingMovement = InventMovSubType::BOBCompensatingTrans;
            }
            else if (_inventMovSubType == InventMovSubType::TransferOrderTo)
            {
                inventMovSubTypeCompensatingMovement = InventMovSubType::BOBCompensatingTransTo;
            }

            // compensating movement
            InventMovement movement = this.instantiateInventMovement(inventMovSubTypeCompensatingMovement);
            movement.inventTransOriginId(estimated.movement().inventTransOriginId());
            InventUpd_Estimated estimatedComp =  InventUpd_Estimated::newInventMovement(movement);
            estimatedComp.BOBParmIsCompensatingTrans(true);
            estimatedComp.updateNow();
        }

        return estimated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>instantiateInventUpd_Estimated</Name>
				<Source><![CDATA[
    protected InventUpd_Estimated instantiateInventUpd_Estimated(InventMovSubType _inventMovSubType)
    {
        InventUpd_Estimated ret = next instantiateInventUpd_Estimated(_inventMovSubType);

        if (inventTransferLine.inventTransferTable().RTPIsRental == NoYes::Yes)
        {
            ret.BOBParmForceInventUpdate(true);
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>