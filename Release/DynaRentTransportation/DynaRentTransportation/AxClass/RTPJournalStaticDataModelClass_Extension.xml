<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RTPJournalStaticDataModelClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(JournalStaticDataModel))]
public final class RTPJournalStaticDataModelClass_Extension
{
    public FieldId tableFieldIdCustAccount;
    public FieldId tableFieldIdLoadMeters;
    public FieldId tableFieldIdReturnDateTime;
    public FieldId tableFieldIdReturnInventLocationId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initializeJournalTableFields</Name>
				<Source><![CDATA[
    protected void initializeJournalTableFields(TableId _journalTableTableId)
    {
        next initializeJournalTableFields(_journalTableTableId);

        if (isConfigurationkeyEnabled(configurationKeyNum(RTPTransportModule)))
        {
            DictTable dictTable = new DictTable(_journalTableTableId);
            int fieldCnt = dictTable.fieldCnt();
                
            for (int i=1; i<=fieldCnt; i++)
            {
                FieldId fieldId = dictTable.fieldCnt2Id(i);
                DictField dictField = dictTable.fieldObject(fieldId);

                if (dictField.typeId() == extendedTypeNum(RTPLoadMeter))
                {
                    tableFieldIdLoadMeters = dictField.id();
                }
                else if (dictField.typeId() == extendedTypeNum(RTPReturnDateTime))
                {
                    tableFieldIdReturnDateTime = dictField.id();
                }
                else if (dictField.typeId() == extendedTypeNum(RTPReturnInventLocationId))
                {
                    tableFieldIdReturnInventLocationId = dictField.id();
                }
                else if (dictField.name() == identifierStr(RTPCustAccount))
                {
                    tableFieldIdCustAccount = dictField.id();
                }

            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>