<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RTPWPPWorkOrderTableListPageInteractionClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(WPPWorkOrderTableListPageInteraction))]
public final class RTPWPPWorkOrderTableListPageInteractionClass_Extension
{
    public boolean isRTPReturn;

    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initializeQuery</Name>
				<Source><![CDATA[
    public void initializeQuery(Query _query)
    {
        QueryBuildDataSource    qbdsProjGroup;
            
        if (this.isTableQuery())
        {
            QueryBuildDataSource qbdsWorkOrderView = _query.dataSourceTable(tableNum(WPPWorkOrderView));

            if (workOrderTableListPage != WPPWorkOrderTableListPage::Main)
            {
                qbdsProjGroup = qbdsWorkOrderView.addDataSource(tableNum(ProjGroup));
                qbdsProjGroup.addLink(fieldNum(WPPWorkOrderView, ProjGroupId), fieldNum(ProjGroup, ProjGroupId));
                qbdsProjGroup.joinMode(JoinMode::ExistsJoin);
            }

            switch (workOrderTableListPage)
            {
                // TODO: check if correct enums are used
                case WPPWorkOrderTableListPage::Transport ://:ETMTransport:
                    qbdsProjGroup.addRange(fieldNum(ProjGroup, WPPWorkOrderType)).value(SysQuery::value(WPPWorkOrderType::Transport));//:ETMExtendedTransport));
                    if (isRTPReturn)
                    {
                        qbdsWorkOrderView.addRange(fieldNum(WPPWorkOrderView, OrderTableId)).value(SysQuery::value(tableNum(InventJournalTable)));
                    }
                    else
                    {
                        qbdsWorkOrderView.addRange(fieldNum(WPPWorkOrderView, OrderTableId)).value(SysQuery::valueNot(tableNum(InventJournalTable)));
                    }
                    break;
    
                default:
                    break;
            }
        }

        next initializeQuery(_query);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setButtonOtherPlaces</Name>
				<Source><![CDATA[
    protected void setButtonOtherPlaces()
    {
        next setButtonOtherPlaces();

        this.listPage().actionPaneControlEnabled(formControlStr(WPPWorkOrderTableListPage, WPPViewDetails_RTP), workOrderTableInteractionHelper.parmButtonShipmentEnabled());
        this.listPage().actionPaneControlEnabled(formControlStr(WPPWorkOrderTableListPage, RTPInventJournalTableReturn), workOrderTableInteractionHelper.parmButtonReturnJournalEnabled());
        this.listPage().actionPaneControlEnabled(formControlStr(WPPWorkOrderTableListPage, RTPTransportRoute), workOrderTableInteractionHelper.parmbButtonTransportRouteEnabled());
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>setListPageType</Name>
				<Source><![CDATA[
    protected void setListPageType(ListPageArgs _listPageArgs)
    {
        // TODO: check if this is correct enum
        if (_listPageArgs
        &&  _listPageArgs.enumTypeParameter() == enumNum(WPPWorkOrderTableListPage)
            &&  _listPageArgs.enumParameter() == WPPWorkOrderTableListPage::Transport)//:ETMTransport)
        {
            isRTPReturn = (_listPageArgs.parameters() == 'Return');
        }
        
        next setListPageType(_listPageArgs);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>