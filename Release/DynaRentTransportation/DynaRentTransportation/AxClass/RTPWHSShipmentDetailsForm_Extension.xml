<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RTPWHSShipmentDetailsForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(WHSShipmentDetails))]
public final class RTPWHSShipmentDetailsForm_Extension
{
    // event handler methods
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>WHSShipmentTable_OnActivated</Name>
				<Source><![CDATA[
    [FormDataSourceEventHandler(formDataSourceStr(WHSShipmentDetails, WHSShipmentTable), FormDataSourceEventType::Activated)]
    public static void WHSShipmentTable_OnActivated(FormDataSource _sender, FormDataSourceEventArgs _e)
    {
        FormRun formRun = _sender.formRun();
        WHSShipmentTable shipment = _sender.cursor();

        if (!shipment.RecId)
        {
            formRun.control(formRun.controlId('RTPWorkOrderTable')).enabled(false);
        }
        else
        {
            if (shipment.RTPDisplayWorkOrderId()
            //&& wmsShipmentTable.pickExpeditionStatus != WMSExpeditionStatus::Activated
            //&& wmsShipmentTable.pickExpeditionStatus != WMSExpeditionStatus::Complete
            && WPPWorkOrderLine::getLowestStatus(shipment.RTPDisplayWorkOrderId()) < WPPWorkOrderLineStatus::Completed
            && !shipment.RTPIsBulkRentalShipment())
            {
                // RTPSplitWMSShipment.enabled(true);
            }
            else
            {
                //  RTPSplitWMSShipment.enabled(false);
            }
            formRun.control(formRun.controlId('RTPWorkOrderTable')).enabled(shipment.RTPDisplayWorkOrderId() != '');
            //AdditionalHeaderNotes.enabled(RTPWorkOrderTable.enabled());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_WHSShipmentTableDS_OnInitialized</Name>
				<Source><![CDATA[
    [FormDataSourceEventHandler(formDataSourceStr(WHSShipmentDetails, WHSShipmentTable), FormDataSourceEventType::Initialized)]
    public static void DNREvent_WHSShipmentTableDS_OnInitialized(FormDataSource _sender, FormDataSourceEventArgs _eventArgs)
    {
        FormRun                 formRun = _sender.formRun();
        QueryBuildDataSource    qbds;

        if (formRun.args().menuItemName() == menuitemDisplayStr(RTPWMSShipment))
        {
            qbds = _sender.query().dataSourceTable(tableNum(WHSShipmentTable)).addDataSource(tableNum(WPPWorkOrderTable));
            qbds.relations(true);
            qbds.joinMode(JoinMode::ExistsJoin);
        }
        else if (formRun.args().menuItemName() == menuitemDisplayStr(RTPShipmentFromOrder))
        {
            Common common = formRun.args().record();
        
            if (common.TableId == tableNum(SalesTable))
            {
                SalesTable salesTable = common as SalesTable;
                qbds = _sender.query().dataSourceTable(tableNum(WHSLoadLine));

                if (qbds)
                {
                    qbds.addRange(fieldNum(WHSLoadLine, inventTransType)).value(SysQuery::value(inventTransType::Sales));
                    qbds.addRange(fieldNum(WHSLoadLine, OrderNum)).value(SysQuery::value(salesTable.SalesId));
                }
            }
            else if (common.TableId == tableNum(InventTransferTable))
            {
                InventTransferTable inventTransferTable = common as InventTransferTable;
                qbds = _sender.query().dataSourceTable(tableNum(WHSLoadLine));

                if (qbds)
                {
                    qbds.addRange(fieldNum(WHSLoadLine, inventTransType)).value(SysQuery::value(inventTransType::TransferOrderShip));
                    qbds.addRange(fieldNum(WHSLoadLine, OrderNum)).value(SysQuery::value(inventTransferTable.TransferId));
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>