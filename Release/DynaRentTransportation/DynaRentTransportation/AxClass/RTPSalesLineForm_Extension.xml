<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RTPSalesLineForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(SalesLine))]
public final class RTPSalesLineForm_Extension
{
    // event handler methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>DNREvent_element_OnInitialized</Name>
				<Source><![CDATA[
    [FormEventHandler(formStr(SalesLine), FormEventType::Initialized)]
    public static void DNREvent_element_OnInitialized(xFormRun _sender, FormEventArgs _eventArgs)
    {
        FormRun             formRun             = _sender as FormRun;
        FormStringControl   SalesLine_SalesId   = formRun.design().controlName(formControlStr(SalesLine, SalesLine_SalesId)) as FormStringControl;

        if ((formRun.args().dataset() == tableNum(RORTmpReturnNoteLine) &&  formRun.args().caller().name() == formStr(RORTmpReturnNoteTable))
        || formRun.args().dataset() == tableNum(InventJournalTable)
        || formRun.args().dataset() == tableNum(InventJournalTrans))
        {
            SalesLine_SalesId.label("@DNR1539");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_SalesLineDS_OnInitialized</Name>
				<Source><![CDATA[
    [FormDataSourceEventHandler(formDataSourceStr(SalesLine, SalesLine), FormDataSourceEventType::Initialized)]
    public static void DNREvent_SalesLineDS_OnInitialized(FormDataSource _sender, FormDataSourceEventArgs _eventArgs)
    {
        FormRun                 formRun                 = _sender.formRun() as FormRun;
        QueryBuildDataSource    queryBuildDataSource    = _sender.query().dataSourceTable(tableNum(SalesLine));
        
        RORTmpReturnNoteLine    returnNoteLine;
        InventJournalTable      inventJournalTable;
        InventJournalTrans      inventJournalTrans;
        RTPInventJournalTransSalesLineReference inventJournalTransSalesLineReference;
        Counter                 conCounter;

        switch (formRun.args().dataset())
        {
            case tableNum(RORTmpReturnNoteLine):
                returnNoteLine = formRun.args().record();

                queryBuildDataSource.clearDynalinks();
        
                for (conCounter = 1; conCounter <= conLen(returnNoteLine.SalesLineRecId); conCounter++)
                {
                    queryBuildDataSource.addRange(fieldNum(SalesLine, RecId)).value(SysQuery::value(conPeek(returnNoteLine.SalesLineRecId, conCounter)));
                }
                break;
        
            case tableNum(InventJournalTable):
                inventJournalTable = formRun.args().record();

                queryBuildDataSource.clearDynalinks();
        
                while select SalesLineRecId from inventJournalTransSalesLineReference
                    exists join inventJournalTrans
                    where inventJournalTrans.JournalId == inventJournalTable.JournalId
                    &&    inventJournalTrans.JournalType == inventJournalTable.JournalType
                    &&    inventJournalTrans.RecId == inventJournalTransSalesLineReference.InventJournalTransRecId
                {
                    queryBuildDataSource.addRange(fieldNum(SalesLine, RecId)).value(SysQuery::value(inventJournalTransSalesLineReference.SalesLineRecId));
                }
                break;

            case tableNum(InventJournalTrans):
                inventJournalTrans = formRun.args().record();
        
                queryBuildDataSource.clearDynalinks();
        
                while select SalesLineRecId from inventJournalTransSalesLineReference
                where inventJournalTransSalesLineReference.InventJournalTransRecId == inventJournalTrans.RecId
                {
                    queryBuildDataSource.addRange(fieldNum(SalesLine, RecId)).value(SysQuery::value(inventJournalTransSalesLineReference.SalesLineRecId));
                }
                
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>