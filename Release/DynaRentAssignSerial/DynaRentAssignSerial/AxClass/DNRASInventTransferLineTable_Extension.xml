<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRASInventTransferLineTable_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(tableStr(InventTransferLine))]
public final class DNRASInventTransferLineTable_Extension
{
    // Extension methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>DNRASMaySplitLine</Name>
				<Source><![CDATA[
    public boolean DNRASMaySplitLine()
    {
        return (this.QtyTransfer > 1 && InventTable::find(this.ItemId).BOBIsSerializedRentalItem());
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNRASEvent_RTPInventTransferLine_validateField_post</Name>
				<Source><![CDATA[
    // Event-handler methods

    [PostHandlerFor(classStr(RTPInventTransferLineTable_Extension), methodStr(RTPInventTransferLineTable_Extension, validateField))]
    public static void DNRASEvent_RTPInventTransferLine_validateField_post(XppPrePostArgs _args)
    {
        if (isConfigurationkeyEnabled(configurationKeyNum(DNRASAssignSerial)))
        {
            InventTransferLine inventTransferLine = _args.getThis();
            FieldId fieldId = _args.getArg('_fieldIdToCheck');
            boolean ret = _args.getReturnValue();
 
            if (!ret
            &&  fieldId == fieldNum(InventTransferLine, QtyTransfer)
            &&  (inventTransferLine.RORTradeType == RORTradeType::Rental || inventTransferLine.RORTradeType == RORTradeType::SubRental)
            &&  inventTransferLine.DNRASMaySplitLine())
            {
                // absorb the @DNR:QtyMayNotBeGreaterThanOne message
                infolog.cut(infologLine());
                ret =  true;
            }

            _args.setReturnValue(ret);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>