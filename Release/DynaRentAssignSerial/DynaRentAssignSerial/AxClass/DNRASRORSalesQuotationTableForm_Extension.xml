<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRASRORSalesQuotationTableForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(RORSalesQuotationTable))]
public final class DNRASRORSalesQuotationTableForm_Extension
{
    // Event-handler methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>DNRASEvent_RORSalesQuotationTable_SalesQuotationLineDS_OnInitialized</Name>
				<Source><![CDATA[
    [FormDataSourceEventHandler(formDataSourceStr(RORSalesQuotationTable, SalesQuotationLine), FormDataSourceEventType::Initialized)]
    public static void DNRASEvent_RORSalesQuotationTable_SalesQuotationLineDS_OnInitialized(FormDataSource _sender, FormDataSourceEventArgs _eventArgs)
    {
        if (isConfigurationkeyEnabled(configurationKeyNum(DNRASAssignSerial)))
        {
            Args args = _sender.formRun().args();
            Object callerObject = args.caller();

            if (callerObject && callerObject.name() == formStr(DNRASSalesPurchOrderSummaryOverview))
            {
                _sender.queryBuildDataSource().addRange(fieldNum(SalesQuotationLine, ItemId)).value(args.parm());
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNRASEvent_RORSalesQuotationTable_InventDimDS_inventSerialId_OnValidated</Name>
				<Source><![CDATA[
    [FormDataFieldEventHandler(formDataFieldStr(RORSalesQuotationTable, InventDim, inventSerialId), FormDataFieldEventType::Validated)]
    public static void DNRASEvent_RORSalesQuotationTable_InventDimDS_inventSerialId_OnValidated(FormDataObject _sender, FormDataFieldEventArgs _eventArgs)
    {
        if (isConfigurationkeyEnabled(configurationKeyNum(DNRASAssignSerial)))
        {
            boolean ret = true;
            FormDataFieldCancelEventArgs args = _eventArgs as FormDataFieldCancelEventArgs;
            SalesQuotationLine salesQuotationLine = _sender.datasource().formRun().dataSource(formDataSourceStr(RORSalesQuotationTable, SalesQuotationLine)).cursor();

            if (!RORRentalLine::DNRASValidateInventSerialIdUpdate(salesQuotationLine))
            {
                ret = checkFailed("@DNR:AssignSerialBlockManualAssignmentRental");
            }

            if (!ret)
            {
                args.cancel(true);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNRASEvent_RORSalesQuotationTable_SalesQuotationLineDS_SalesQty_OnValidated</Name>
				<Source><![CDATA[
    [FormDataFieldEventHandler(formDataFieldStr(RORSalesQuotationTable, SalesQuotationLine, SalesQty), FormDataFieldEventType::Validated)]
    public static void DNRASEvent_RORSalesQuotationTable_SalesQuotationLineDS_SalesQty_OnValidated(FormDataObject _sender, FormDataFieldEventArgs _eventArgs)
    {
        if (isConfigurationkeyEnabled(configurationKeyNum(DNRASAssignSerial)))
        {
            boolean ret = true;
            FormDataFieldCancelEventArgs args = _eventArgs as FormDataFieldCancelEventArgs;
            SalesQuotationLine salesQuotationLine = _sender.datasource().cursor();
   
            if (!RORRentalLine::DNRASValidateRentalQtyUpdate(salesQuotationLine))
            {
                ret = checkFailed("@DNR:AssignSerialBlockRentalQtyChange");
            }

            if (!ret)
            {
                args.cancel(true);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNRASEvent_RORSalesQuotationTable_DNRASSplitRentalLineButtonCTRL_OnClicked</Name>
				<Source><![CDATA[
    [FormControlEventHandler(formControlStr(RORSalesQuotationTable, DNRASSplitRentalLineButton), FormControlEventType::Clicked)]
    public static void DNRASEvent_RORSalesQuotationTable_DNRASSplitRentalLineButtonCTRL_OnClicked(FormControl _sender, FormControlEventArgs _e)
    {
        FormRun formRun = _sender.formRun();
        FormDataSource formDSSalesQuotationLine = formRun.dataSource(formDataSourceStr(RORSalesQuotationTable, SalesQuotationLine));
        SalesQuotationLine salesQuotationLine = formDSSalesQuotationLine.cursor();

        if (salesQuotationLine.RORTradeType != RORTradeType::SalesPurch)
        {
            ttsbegin;

            DNRASSplitEngine splitEngine = DNRASSplitEngine::construct(salesQuotationLine, salesQuotationLine.SalesQty - 1);
            splitEngine.run();

            ttscommit;
        }

        formDSSalesQuotationLine.research(true);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>