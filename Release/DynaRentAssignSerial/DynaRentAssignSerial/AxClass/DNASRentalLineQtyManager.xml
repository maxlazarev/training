<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNASRentalLineQtyManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
abstract public class DNASRentalLineQtyManager
{
    RORRentalLine callerRentalLine;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static DNASRentalLineQtyManager construct(RORRentalLine _callerRentalLine)
    {
        DNASRentalLineQtyManager ret = DNASRentalLineQtyManager::constructNoThrow(_callerRentalLine);

        if (!ret)
        {
            throw error(strFmt("@SYS31187", tableId2name(_callerRentalLine.TableId)));
        }

        ret.parmCallerRentalLine(_callerRentalLine);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructNoThrow</Name>
				<Source><![CDATA[
    public static DNASRentalLineQtyManager constructNoThrow(RORRentalLine _callerRentalLine)
    {
        DNASRentalLineQtyManager ret;

        switch (_callerRentalLine.TableId)
        {
            case tableNum(SalesLine):
                ret = new DNASRentalLineQtyManager_Sales();
                break;

            case tableNum(SalesQuotationLine):
                ret = new DNASRentalLineQtyManager_Quotation();
                break;

            case tableNum(PurchLine):
                ret = new DNASRentalLineQtyManager_Purch();
                break;

            case tableNum(RORRentalEditorLine):
                ret = new DNASRentalLineQtyManager_RentalEditor();
                break;

            default:
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        DNRASUpdateRelatedLinesOnQtyChangeDisposableContext context = DNRASUpdateRelatedLinesOnQtyChangeDisposableContext::current();

        if (!context || context.parmMustValidateParentLineQty())
        {
            this.validateParentLineQty();
        }

        if ((!context || context.parmMustUpdateChildLinesQty()) 
        &&  callerRentalLine.TradeType == RORTradeType::Rental)
        {
            this.updateChildLinesQty();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCallerRentalLine</Name>
				<Source><![CDATA[
    public RORRentalLine parmCallerRentalLine(RORRentalLine _callerRentalLine = callerRentalLine)
    {
        callerRentalLine = _callerRentalLine;
        this.setActiveRentalLine(callerRentalLine);

        return callerRentalLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setActiveRentalLine</Name>
				<Source><![CDATA[
    abstract protected void setActiveRentalLine(RORRentalLine _rentalLine)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateParentLineQty</Name>
				<Source><![CDATA[
    abstract protected void validateParentLineQty()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateChildLinesQty</Name>
				<Source><![CDATA[
    abstract protected void updateChildLinesQty()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>