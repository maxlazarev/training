<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRASWPPWorkOrderSynchronizer_PurchTableClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(WPPWorkOrderSynchronizer_PurchTable))]
public final class DNRASWPPWorkOrderSynchronizer_PurchTableClass_Extension
{
    // Chain-of-Command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildQueryRun_Line</Name>
				<Source><![CDATA[
    protected QueryRun buildQueryRun_Line()
    {
        DNRTmpIdList tmpIdList;
        boolean isAssignSerialEnabled = isConfigurationkeyEnabled(configurationKeyNum(DNRASAssignSerial));

        if (isAssignSerialEnabled)
        {
            PurchLine purchLineLocal;
            InventTable inventTable;
            EcoResProduct ecoResProduct;
            BOBRentalType rentalType;
            RecordInsertList tmpIdListInsertList = new RecordInsertList(tableNum(DNRTmpIdList), false, false, false, false, false, tmpIdList);

            while select RecId from purchLineLocal
            where purchLineLocal.PurchId == purchTable.PurchId
            &&    purchLineLocal.PurchQty > 1
                exists join inventTable
                where inventTable.ItemId == purchLineLocal.ItemId
                    join TableId from ecoResProduct
                    where ecoResProduct.RecId == inventTable.Product
                        join TableId from rentalType
                        where rentalType.RentalTypeId == ecoResProduct.BOBRentalTypeId
                        &&    rentalType.Classification == BOBRentalTypeClassification::Serialized
            {
                tmpIdList.clear();
                tmpIdList.RefRecId = purchLineLocal.RecId;
                tmpIdListInsertList.add(tmpIdList);
            }

            tmpIdListInsertList.insertDatabase();
        }

        QueryRun queryRun = next buildQueryRun_Line();

        if (isAssignSerialEnabled)
        {
            Query query = queryRun.query();

            QueryBuildDataSource qbdsWorkOrderTaskTable = query.dataSourceTable(tableNum(WPPWorkOrderTaskTable));
            QueryBuildDataSource qbdsTmpIdList = qbdsWorkOrderTaskTable.addDataSource(tableNum(DNRTmpIdList));

            qbdsTmpIdList.relations(false);
            qbdsTmpIdList.joinMode(JoinMode::NoExistsJoin);
            qbdsTmpIdList.addRange(fieldNum(DNRTmpIdList, DataAreaId)).value(strFmt('((%1.%2 == %3.%4))',
                                                                                    query.dataSourceTable(tableNum(PurchLine)).name(),
                                                                                    fieldStr(PurchLine, RecId),
                                                                                    query.dataSourceTable(tableNum(DNRTmpIdList)).name(),
                                                                                    fieldStr(DNRTmpIdList, RefRecId)));

            queryRun.query(query);
            queryRun.setRecord(tmpIdList);
        }

        return queryRun;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>