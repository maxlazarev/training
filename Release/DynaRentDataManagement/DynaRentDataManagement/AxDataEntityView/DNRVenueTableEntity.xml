<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRVenueTableEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class DNRVenueTableEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;
    
        switch(_dataSourceCtx.name())
        {
            case (dataEntityDataSourceStr(DNRVenueTableEntity, RORVenueLocation)):
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                ret = true;
                break;

            case (dataEntityDataSourceStr(DNRVenueTableEntity, LogisticsPostalAddressBaseEntity)):
                ret = super(_entityCtx, _dataSourceCtx);
                LogisticsPostalAddressBaseEntity    postalAddress = _dataSourceCtx.getBuffer();
                RORVenueTable                       venueTable    = RORVenueTable::find(this.WorkLocationCode);

                if (venueTable.RecId && postalAddress.LocationRecId)
                {
                    RORVenueLocation  venueLoc = RORVenueLocation::findByVenueLocation(venueTable.RecId, postalAddress.LocationRecId);

                    if (!venueLoc)
                    {
                        venueLoc.clear();
                        venueLoc.initValue();
                        venueLoc.Venue = venueTable.RecId;
                        venueLoc.Location = postalAddress.LocationRecId;
                        venueLoc.IsPostalAddress = NoYes::Yes;
                        venueLoc.IsPrimary = this.IsPrimary;
                        
                        if (venueLoc.validateWrite())
                        {
                            venueLoc.insert();
                            //venueLoc.addEntityLocation(str2con(this.Roles, ';'));

                            if (venueLoc)
                            {
                                this.createLocRoles(venueLoc);

                                DataEntityDataSourceRuntimeContext dataSourceRunTimeContext = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(DNRVenueTableEntity, RORVenueLocation));
                                dataSourceRunTimeContext.setBuffer(venueLoc);
                            }
                        }
                        else
                        {
                            throw error ("Error in venue location record creation");
                        }
                    }
                }
                break;

            default:
                ret = super(_entityCtx, _dataSourceCtx);
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;
    
        ret = true;//super();
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>LocationRoles</Name>
				<Source><![CDATA[
    static private str LocationRoles()
    {
        return "";
        //return RORVenueLocation::concatenatedLocationRolesComputedFieldDefinition(tableStr(RORVenueTable),
        //                                                                          tableStr(LogisticsPostalAddressBaseEntity),
        //                                                                          dataEntityDataSourceStr(DNRVenueTableEntity, RORVenueLocation),
        //                                                                          fieldStr(RORVenueLocation, Venue),
        //                                                                          fieldStr(RORVenueLocation, Location));
    }

]]></Source>
			</Method>
			<Method>
				<Name>createLocRoles</Name>
				<Source><![CDATA[
    public void createLocRoles(RORVenueLocation  _venueLoc)
    {
        container                       _roleIds        = str2con(this.Roles, ';');
        boolean                         _replaceRoles   = true;
        int                             idx, conPos;
        RORVenueLocationRole            venueLocRole;
        LogisticsLocationRoleRecId      roleId;
        Name                            roleIdName;

        ttsbegin;

        if (_venueLoc.Location)
        {
            RORVenueLocationRole    locRole;

            delete_from locRole
            where locRole.VenueLocation == _venueLoc.RecId;

            // Add those that are not yet in the DB.
            for (idx=1; idx <= conLen(_roleIds); idx++)
            {
                roleIdName = conPeek(_roleIds, idx);

                if (roleIdName)
                {
                    roleId = LogisticsLocationRole::findByName(roleIdName).RecId;

                    if (roleId)
                    {
                        venueLocRole.clear();
                        venueLocRole.initValue();
                        venueLocRole.LocationRole = roleId;
                        venueLocRole.VenueLocation = _venueLoc.RecId;
                        venueLocRole.insert();
                    }
                }
            }
        }
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>DNRDeletedObjects_DynaRentDataManagement</ConfigurationKey>
	<DeveloperDocumentation>Imports/exports work locations</DeveloperDocumentation>
	<Label>@DNR6006</Label>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>DNRVenueTableStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>DNRVenueTables</PublicCollectionName>
	<PublicEntityName>DNRVenueTable</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EndDate</Name>
			<DataField>EndDate</DataField>
			<DataSource>RORVenueTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Dimension</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>FINDefaultDimension</DataField>
			<DataSource>RORVenueTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Worker</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>HcmWorkerRecId</DataField>
			<DataSource>RORVenueTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Name</Name>
			<DataField>Name</DataField>
			<DataSource>RORVenueTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesOrigin</Name>
			<DataField>SalesOriginId</DataField>
			<DataSource>RORVenueTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Segment</Name>
			<DataField>Segment</DataField>
			<DataSource>RORVenueTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Significance</Name>
			<DataField>Significance</DataField>
			<DataSource>RORVenueTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Account</Name>
			<DataField>smmBusRelAccount</DataField>
			<DataSource>RORVenueTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>StartDate</Name>
			<DataField>StartDate</DataField>
			<DataSource>RORVenueTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Subsegment</Name>
			<DataField>Subsegment</DataField>
			<DataSource>RORVenueTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Distance</Name>
			<DataField>TransportDistanceQty</DataField>
			<DataSource>RORVenueTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UnitRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>TransportDistanceUnit</DataField>
			<DataSource>RORVenueTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WorkLocationCode</Name>
			<DataField>VenueCode</DataField>
			<DataSource>RORVenueTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WorkLocationGroup</Name>
			<DataField>VenueGroupId</DataField>
			<DataSource>RORVenueTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RentalProject</Name>
			<DataField>WPPIsRentalProject</DataField>
			<DataSource>RORVenueTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectID</Name>
			<DataField>WPPProjId</DataField>
			<DataSource>RORVenueTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PersonnelNumber</Name>
			<Mandatory>No</Mandatory>
			<DataField>PersonnelNumber</DataField>
			<DataSource>HcmWorker</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Address</Name>
			<DataField>Address</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BuildingComplement</Name>
			<DataField>BuildingCompliment</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>City</Name>
			<DataField>City</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CountryRegionId</Name>
			<Mandatory>No</Mandatory>
			<DataField>CountryRegionId</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>County</Name>
			<DataField>County</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsPrimary</Name>
			<DataField>IsPrimary</DataField>
			<DataSource>RORVenueLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PostBox</Name>
			<DataField>PostBox</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>State</Name>
			<DataField>State</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Street</Name>
			<DataField>Street</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>StreetNumber</Name>
			<DataField>StreetNumber</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Effective</Name>
			<Mandatory>No</Mandatory>
			<DataField>ValidFrom</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Expiration</Name>
			<DataField>ValidTo</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ZipCode</Name>
			<DataField>ZipCode</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Unit</Name>
			<Mandatory>No</Mandatory>
			<DataField>Symbol</DataField>
			<DataSource>TransportUnitDistance</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DimensionDisplayValue</Name>
			<DataField>DisplayValue</DataField>
			<DataSource>DimensionDAVS</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DistrictName</Name>
			<DataField>DistrictName</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Description</Name>
			<DataField>Description</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>Roles</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS302566</Label>
			<ExtendedDataType>DMFLocationRole</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>WorkLocationCode</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>DimensionDimensionSet</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>DimensionSetEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>Dimension</Name>
					<Field>Dimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>RORVenueTable</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>RORVenueTable</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HcmWorker</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>HcmWorker</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>HcmWorker</Name>
								<JoinDataSource>RORVenueTable</JoinDataSource>
								<JoinRelationName>HcmWorker</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>TransportUnitDistance</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>UnitOfMeasure</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>TransportUnitDistance</Name>
								<JoinDataSource>RORVenueTable</JoinDataSource>
								<JoinRelationName>UnitOfMeasure</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>DimensionDAVS</Name>
						<AllowAdd>No</AllowAdd>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionSetEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>RecId</Name>
								<Field>RecId</Field>
								<Value>!=0</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>DimensionDAVS</Name>
								<JoinDataSource>RORVenueTable</JoinDataSource>
								<JoinRelationName>DimensionSetEntity</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>RORVenueLocation</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>RORVenueLocation</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>LogisticsPostalAddressBaseEntity</Name>
								<ApplyDateFilter>Yes</ApplyDateFilter>
								<DynamicFields>Yes</DynamicFields>
								<Table>LogisticsPostalAddressBaseEntity</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>Location</Field>
										<JoinDataSource>RORVenueLocation</JoinDataSource>
										<RelatedField>LocationRecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>IsPrimary</Name>
								<Field>IsPrimary</Field>
								<Value>NoYes::Yes</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>RORVenueTable</JoinDataSource>
								<JoinRelationName>RORVenueTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>