<?xml version='1.0' encoding='utf-8'?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRSubRentalOrderLineEntity</Name>
	<SourceCode>
		<Declaration>
public class DNRSubRentalOrderLineEntity extends common
{
}
</Declaration>
		<Methods>
			<Method>
				<Name>findEntityDataSource</Name>
				<Source>
    public Common findEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        Common ret;

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(DNRSubRentalOrderLineEntity, InventDim):
                var purchLine = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(DNRSubRentalOrderLineEntity, PurchLine)).getBuffer();
                ret = purchLine.inventDim();
                break;

            case dataEntityDataSourceStr(DNRSubRentalOrderLineEntity, EcoResCategory_ProcurementCategory):
                EcoResCategoryHierarchyRole hierarchyRole;

                select firstonly CategoryHierarchy from hierarchyRole
                    where hierarchyRole.NamedCategoryHierarchyRole == EcoResCategoryNamedHierarchyRole::Procurement;

                if (hierarchyRole.CategoryHierarchy)
                {
                    ret = EcoResCategory::findByName(this.ProcurementProductCategoryName, hierarchyRole.CategoryHierarchy);
                }

                break;

            case dataEntityDataSourceStr(DNRSubRentalOrderLineEntity, AccountingDistributionTemplate):
                RecId legalEntityRecId = CompanyInfo::findDataArea(this.DataAreaId).RecId;
                ret = AccountingDistributionTemplate::findByNameAndLegalEntity(this.AccountingDistributionTemplateName, legalEntityRecId);
                break;

            case dataEntityDataSourceStr(DNRSubRentalOrderLineEntity, EcoResCategory_IntrastatCommodity):
                if (this.IntrastatCommodityCode)
                {
                    ret = EcoResCategory::findByCode(this.IntrastatCommodityCode, IntrastatParameters::find().CommodityHierarchy);
                }
                break;

            case dataEntityDataSourceStr(DNRSubRentalOrderLineEntity, LogisticsPostalAddressBaseEntity):
                ret = TradeEntitySpecificDeliveryAddress::findLogisticsPostalAddressBaseEntityDataSource();
                break;

            default:
                ret = super(_entityCtx, _dataSourceCtx);
        }

        return ret;
    }

</Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source>
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Update
            || _entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert)
        {
            switch (_dataSourceCtx.name())
            {
                case dataEntityDataSourceStr(DNRSubRentalOrderLineEntity, PurchLine):
                    PurchLine purchLine = _dataSourceCtx.getBuffer();
                    if (this.isFieldSet(fieldNum(DNRSubRentalOrderLineEntity, AccountingDistributionTemplateName)))
                    {
                        RecId legalEntityRecId = CompanyInfo::findDataArea(this.DataAreaId).RecId;
                        purchLine.AccountingDistributionTemplate =  AccountingDistributionTemplate::findByNameAndLegalEntity(this.AccountingDistributionTemplateName, legalEntityRecId).RecId;
                    }

                    purchLine.InventDimId = this.InventInventoryDimensionEntityFieldsMapping::resolveInventDimId();

                    if (this.OrderedCatchWeightQuantity &amp;&amp; !this.OrderedPurchaseQuantity)
                    {
                        this.fieldState(fieldNum(DNRSubRentalOrderLineEntity, OrderedPurchaseQuantity), FieldState::NotSet);
                    }

                    // When SkipCreateAutoCharges is specified, the SkipCreateMarkup field on purchline should be set to the value of the SkipCreateAutoCharges field on the entity
                    if (this.isFieldSet(fieldNum(DNRSubRentalOrderLineEntity, SkipCreateAutoCharges)))
                    {
                        purchLine.SkipCreateMarkup = this.SkipCreateAutoCharges;
                    }
                    else
                    {
                        // When SkipCreateAutoCharges is not specified,keep the original rule
                        if (this.scopeIdentifier())
                        {
                            // Skip creation of markup when doing data migration
                            purchLine.SkipCreateMarkup = NoYes::Yes;
                        }
                    }
                    if (PublicSectorUtils::isBudgetReservationEnabled() &amp;&amp; !this.hasBudgetReservationReferenceFromOtherDocument())
                    {
                        // Allow the budget reservation reference change.
                        purchLine.BudgetReservationLine_PSN = this.findGeneralBudgetReservationLine().RecId;
                    }
                    break;

                case dataEntityDataSourceStr(DNRSubRentalOrderLineEntity, LogisticsPostalAddressBaseEntity):
                    if (_dataSourceCtx.isAnyEntityFieldSet(this))
                    {
                        this.TradeEntitySpecificDeliveryAddress::mapLogisticsPostalAddressBaseEntityDataSourceToEntity(_dataSourceCtx);
                    }

                    break;
            }

            super(_entityCtx, _dataSourceCtx);

            switch (_dataSourceCtx.name())
            {
                case dataEntityDataSourceStr(DNRSubRentalOrderLineEntity, PurchLine):
                    PurchLine purchLine = _dataSourceCtx.getBuffer();
                    purchLine.fieldState(fieldnum(PurchLine, PurchStatus), FieldState::NotSet);
                    break;

                case dataEntityDataSourceStr(DNRSubRentalOrderLineEntity, WHSPurchLine):
                    if (WHSInventEnabled::exist(this.ItemNumber))
                    {
                        _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::Update);
                    }
                    else
                    {
                        if (_dataSourceCtx.isAnyFieldSetToNonDefaultValue(tableNum(DNRSubRentalOrderLineEntity)))
                        {
                            warning("@SCM:PurchPurchaseOrderLineEntityCannotSetWHSInfoForNonWHSItems");
                            this.throwUpdateHasBeenCancelled();
                        }

                        _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                    }
                    break;
            }
        }
        else
        {
            super(_entityCtx, _dataSourceCtx);
        }
    }

</Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source>
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        this.detectStateChangeRelatedConflicts(_entityCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(DNRSubRentalOrderLineEntity, InventDim):
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                break;

            case dataEntityDataSourceStr(DNRSubRentalOrderLineEntity, WHSPurchLine):
                if (WHSInventEnabled::exist(this.ItemNumber))
                {
                    PurchLine purchLine = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(DNRSubRentalOrderLineEntity, PurchLine)).getBuffer();
                    _dataSourceCtx.setBuffer(WHSPurchLine::find(purchLine.InventTransId, true));
                    _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::Update);
                    this.mapEntityToDataSource(_entityCtx, _dataSourceCtx);
                }
                break;

            case dataEntityDataSourceStr(DNRSubRentalOrderLineEntity, PurchLine):
                this.validatePurchLineDatasource(_dataSourceCtx.getBuffer(), _dataSourceCtx);
                break;

            case dataEntityDataSourceStr(PurchaseRequisitionLineEntity, BudgetReservationHeader_PSN),
                dataEntityDataSourceStr(PurchaseRequisitionLineEntity, BudgetReservationLine_PSN):
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                break;
        }

        boolean ret = super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(DNRSubRentalOrderLineEntity, LogisticsPostalAddressBaseEntity):
                this.TradeEntitySpecificDeliveryAddress::postInsertLogisticsPostalAddressBaseEntityDataSource(_dataSourceCtx);
                break;

            case dataEntityDataSourceStr(DNRSubRentalOrderLineEntity, PurchLineForeignTradeCategory):
                if (_dataSourceCtx.getDatabaseOperation() == DataEntityDatabaseOperation::None)
                {
                    this.createPurchLineForeignTradeCategory(_entityCtx);
                }
                break;
        }

        return ret;
    }

</Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source>
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        this.detectStateChangeRelatedConflicts(_entityCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(DNRSubRentalOrderLineEntity, PurchLine):
                PurchLine purchLine = _dataSourceCtx.getBuffer();
                if (purchLine.LineDeliveryType == LineDeliveryType::OrderLineWithMultipleDeliveries)
                {
                    PurchTableForm_DeliverySchedule purchTableForm = new PurchTableForm_DeliverySchedule(purchLine);
                    purchTableForm.deliveryLinesSync(purchLine, false);
                }

                this.validatePurchLineDatasource(purchLine, _dataSourceCtx);
                
                break;

            case dataEntityDataSourceStr(DNRSubRentalOrderLineEntity, InventDim):
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                break;

            case dataEntityDataSourceStr(PurchaseRequisitionLineEntity, BudgetReservationHeader_PSN),
                dataEntityDataSourceStr(PurchaseRequisitionLineEntity, BudgetReservationLine_PSN):
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                break;
        }

        return super(_entityCtx, _dataSourceCtx);
    }

</Source>
			</Method>
			<Method>
				<Name>detectStateChangeRelatedConflicts</Name>
				<Source>
    /// &lt;summary&gt;
    /// If the parent PO is confirmed, and more than one line is being written, with at least 1 line being updated, then when the first line is
    /// saved it will reset the PO to approved which may in turn update other existing lines, leading to an update conflict when saving those.
    /// Update conflicts need to be detected before foreign key propagation is invoked for affected datasources in the generated persister class.
    /// Hence this method should be invoked when the first datasource is written.
    /// &lt;/summary&gt;
    /// &lt;param name = "_entityCtx"&gt;The runtime context from which to get a reference to the datasource buffers.&lt;/param&gt;
    private void detectStateChangeRelatedConflicts(DataEntityRuntimeContext _entityCtx)
    {
        this.detectConflictIfDetectionNotInvoked(_entityCtx, dataEntityDataSourceStr(DNRSubRentalOrderLineEntity, PurchLine));
        this.detectConflictIfDetectionNotInvoked(_entityCtx, dataEntityDataSourceStr(DNRSubRentalOrderLineEntity, PurchLineForeignTradeCategory));
    }

</Source>
			</Method>
			<Method>
				<Name>detectConflictIfDetectionNotInvoked</Name>
				<Source>
    private void detectConflictIfDetectionNotInvoked(DataEntityRuntimeContext _entityCtx, DataSourceName _dataSourceName)
    {
        DataEntityDataSourceRuntimeContext datasourceContext = _entityCtx.getRuntimeContextByName(_dataSourceName);
        
        if (!datasourceContext.conflictDetectionInvoked())
        {
            _entityCtx.detectConflictForDatasource(datasourceContext);
        }
    }

</Source>
			</Method>
			<Method>
				<Name>deleteEntityDataSource</Name>
				<Source>
    public boolean deleteEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        this.detectStateChangeRelatedConflicts(_entityCtx);

        boolean ignoreDataSource = false;

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(DNRSubRentalOrderLineEntity, LogisticsPostalAddressBaseEntity):
                ignoreDataSource = true;
                break;
        }

        return ignoreDataSource ? true : super(_entityCtx, _dataSourceCtx);
    }

</Source>
			</Method>
			<Method>
				<Name>validatePurchLineDatasource</Name>
				<Source>
    private void validatePurchLineDatasource(PurchLine _purchLine, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        // Is editing project of fields allowed:
        if (this.isAnyProjectFieldSet())
        {
            DataEntityDatabaseOperation databaseOperation = _dataSourceCtx.getDatabaseOperation();

            if (databaseOperation == DataEntityDatabaseOperation::Update)
            {
                if (_purchLine.isPackingSlipOrInvoiceUpdated() || _purchLine.isInvoiceMatched())
                {
                    _dataSourceCtx.throwValidateWriteFailed('@SCM:PurchPurchaseOrderLineEntity_ProjectLineProcessedError');
                }
            }

            if (databaseOperation == DataEntityDatabaseOperation::Insert || databaseOperation ==DataEntityDatabaseOperation::Update)
            {
                if (this.isFieldSet(fieldNum(DNRSubRentalOrderLineEntity, ProjectWorkerPersonnelNumber))
                        &amp;&amp; this.ProjectWorkerPersonnelNumber
                        &amp;&amp; _purchLine.isProjItemBased())
                {
                    _dataSourceCtx.throwValidateWriteFailed('@SCM:PurchPurchaseOrderLineEntity_ProjectWorkerError');
                }

                if (_purchLine.isSubcontracted())
                {
                    _dataSourceCtx.throwValidateWriteFailed('@SCM:PurchPurchaseOrderLineEntity_ProjectLineSubcontractedError');
                }
            }
        }
    }

</Source>
			</Method>
			<Method>
				<Name>mapDataSourceToEntity</Name>
				<Source>
    public void mapDataSourceToEntity(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(DNRSubRentalOrderLineEntity, PurchLine))
        {
            PurchLine purchLine = _dataSourceCtx.getBuffer();
            this.mapAccountingDistributionTemplateFromPurchLineToEntity(_entityCtx, purchLine);
            this.InventInventoryDimensionEntityFieldsMapping::initFromInventDim(purchLine.inventDim());
            this.TradeEntitySpecificDeliveryAddress::mapSavedPostalAddressToEntity(_entityCtx,  purchLine.DeliveryPostalAddress);
            this.mapProcurementCategoryFromPurchLineToEntity(_entityCtx, purchLine);
            this.mapBudgetReservationDocumentNumberFromPurchReqLineToEntity(_entityCtx, purchLine);
        }

        super(_entityCtx, _dataSourceCtx);
    }

</Source>
			</Method>
			<Method>
				<Name>mapAccountingDistributionTemplateFromPurchLineToEntity</Name>
				<Source>
    private void mapAccountingDistributionTemplateFromPurchLineToEntity(DataEntityRuntimeContext _entityCtx, PurchLine _purchLine)
    {
        DataEntityDataSourceRuntimeContext distributionTemplateContext = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(DNRSubRentalOrderLineEntity, AccountingDistributionTemplate));
        AccountingDistributionTemplate distributionTemplate = distributionTemplateContext.getBuffer();

        if (distributionTemplate.RecId != _purchLine.AccountingDistributionTemplate)
        {
            this.AccountingDistributionTemplate = _purchLine.AccountingDistributionTemplate;
            this.AccountingDistributionTemplateName = AccountingDistributionTemplate::find(_purchLine.AccountingDistributionTemplate).Name;
        }
    }

</Source>
			</Method>
			<Method>
				<Name>mapProcurementCategoryFromPurchLineToEntity</Name>
				<Source>
    private void mapProcurementCategoryFromPurchLineToEntity(DataEntityRuntimeContext _entityCtx, PurchLine _purchLine)
    {
        DataEntityDataSourceRuntimeContext categoryContext = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(DNRSubRentalOrderLineEntity, EcoResCategory_ProcurementCategory));
        EcoResCategory category = categoryContext.getBuffer();

        if (category.RecId != _purchLine.ProcurementCategory)
        {
            this.ProcurementProductCategoryRecId = _purchLine.ProcurementCategory;
            this.ProcurementProductCategoryName = EcoResCategory::find(_purchLine.ProcurementCategory).Name;
        }
    }

</Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source>
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (!PurchTable::find(this.PurchaseOrderNumber).checkUpdate(true, true, true))
        {
            return false;
        }

        ret = this.validateProcurementCategoryIsConsistentWithItemNumber() &amp;&amp; ret;

        ret = this.validateInventoryDimensions() &amp;&amp; ret;

        ret = this.validateGeneralBudgetReservationLine() &amp;&amp; ret;

        return ret;
    }

</Source>
			</Method>
			<Method>
				<Name>validateGeneralBudgetReservationLine</Name>
				<Source>
    private boolean validateGeneralBudgetReservationLine()
    {
        boolean isValid = true;

        if (PublicSectorUtils::isBudgetReservationEnabled() &amp;&amp; !this.hasBudgetReservationReferenceFromOtherDocument())
        {
            if (this.BudgetReservationDocumentNumber != '' || this.BudgetReservationLineNumber != 0)
            {
                isValid = (this.findGeneralBudgetReservationLine().RecId != 0);
            }
        }

        return isValid;
    }

</Source>
			</Method>
			<Method>
				<Name>findGeneralBudgetReservationLine</Name>
				<Source>
    private BudgetReservationLine_PSN findGeneralBudgetReservationLine()
    {
        BudgetReservationLine_PSN budgetReservationLine;

        if (this.BudgetReservationDocumentNumber != '' || this.BudgetReservationLineNumber != 0)
        {
            BudgetReservationRelievingDocument_PSN relievingType;
            TransDate accountingDate;

            relievingType = BudgetReservationRelievingDocument_PSN::PurchaseOrder;
            accountingDate = this.RequestedDeliveryDate;

            budgetReservationLine = BudgetReservationLine_PSN::getValidatedBudgetReservationLineByTypeDateDocumentAndLineNumber(relievingType,
            this.BudgetReservationDocumentNumber,
            this.BudgetReservationLineNumber,
            accountingDate);

            this.BudgetReservationLineRecId = budgetReservationLine.RecId;
        }
 
        return budgetReservationLine;
    }

</Source>
			</Method>
			<Method>
				<Name>mapBudgetReservationDocumentNumberFromPurchReqLineToEntity</Name>
				<Source>
    private void mapBudgetReservationDocumentNumberFromPurchReqLineToEntity(DataEntityRuntimeContext _entityCtx, PurchLine _purchLine)
    {
        if (PublicSectorUtils::isBudgetReservationEnabled())
        {
            DataEntityDataSourceRuntimeContext budgetReservationContext = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(PurchPurchaseOrderLineEntity, BudgetReservationLine_PSN));
            BudgetReservationLine_PSN budgetReservationLine = budgetReservationContext.getBuffer();

            if (budgetReservationLine.RecId != _purchLine.BudgetReservationLine_PSN)
            {
                this.BudgetReservationLineRecId = _purchLine.BudgetReservationLine_PSN;
                this.BudgetReservationDocumentNumber = BudgetReservationHeader_PSN::find(budgetReservationLine.BudgetReservationHeader_PSN).DocumentNumber;
                this.BudgetReservationLineNumber = budgetReservationLine.LineNumber;
            }
        }
    }

</Source>
			</Method>
			<Method>
				<Name>hasBudgetReservationReferenceFromOtherDocument</Name>
				<Source>
    private boolean hasBudgetReservationReferenceFromOtherDocument()
    {
        boolean hasReferenceFromOtherDocument;

        if (this.PurchaseRequisitionId != '' &amp;&amp; this.BudgetReservationLineRecId != 0)
        {
            hasReferenceFromOtherDocument = true;
        }

        return hasReferenceFromOtherDocument;
    }

</Source>
			</Method>
			<Method>
				<Name>validateProcurementCategoryIsConsistentWithItemNumber</Name>
				<Source>
    private boolean validateProcurementCategoryIsConsistentWithItemNumber()
    {
        if ((this.isFieldSet(fieldNum(DNRSubRentalOrderLineEntity, ItemNumber))
            || this.isFieldSet(fieldNum(DNRSubRentalOrderLineEntity, ProcurementProductCategoryName)))
            &amp;&amp; this.ItemNumber
            &amp;&amp; this.ProcurementProductCategoryName
            &amp;&amp; this.findProcurementCategoryForItem(this.ItemNumber).Name != this.ProcurementProductCategoryName)
        {
            return checkFailed("@SCM:PurchPurchaseOrderLineEntityInconsistentProcurementCategory");
        }

        return true;
    }

</Source>
			</Method>
			<Method>
				<Name>validateInventoryDimensions</Name>
				<Source>
    private boolean validateInventoryDimensions()
    {
        InventDim userSpecifiedDimensions = this.InventInventoryDimensionEntityFieldsMapping::resolveInventDim();
        Set allowEmptyFiels = new Set(Types::Integer);
        allowEmptyFiels.add(-1); // checkDimFieldsValid should allow empty values for all fields since we haven't done defaulting yet.
        return userSpecifiedDimensions.checkDimFieldsValid(this.ItemNumber, userSpecifiedDimensions, true, allowEmptyFiels);
    }

</Source>
			</Method>
			<Method>
				<Name>validateProjectField</Name>
				<Source>
    private boolean validateProjectField(FieldId _fieldIdToCheck)
    {
        boolean ret = true;

        if (this.ProjectId || this.expectProjectIdToBeDefaultedFromHeader())
        {
            switch (_fieldIdToCheck)
            {
                case fieldNum(DNRSubRentalOrderLineEntity, ProjectId):
                    PurchTable purchTable = PurchTable::find(this.PurchaseOrderNumber);
                    if (!purchTable.ProjId
                        || (purchTable.isReceived())
                        || (purchTable.isInvoiced()))
                    {
                        ret = checkFailed('@SCM:PurchPurchaseOrderLineEntity_HeaderNotProject');
                    }
                    break;

                case fieldNum(DNRSubRentalOrderLineEntity, ProjectSalesCurrencyCode):
                    if (ProjInvoiceTable::isSalesCurrencyLocked(ProjTable::find(this.ProjectId).ProjInvoiceProjId))
                    {
                        ret = checkFailed('@SCM:PurchPurchaseOrderLineEntity_ProjectSalesCurrencyLocked');
                    }
                    else if (this.projectMustDefaultCostPriceAsSalesPrice())
                    {
                        ret = checkFailed('@SCM:PurchPurchaseOrderLineEntity_ProjectSalesCurrencyDefaulted');
                    }
                    break;

                case fieldNum(DNRSubRentalOrderLineEntity, ProjectSalesPrice):
                    if (this.projectMustDefaultCostPriceAsSalesPrice())
                    {
                        ret = checkFailed('@SCM:PurchPurchaseOrderLineEntity_ProjectSalePriceCostPriceError');
                    }
                    else if (PurchTable::find(this.PurchaseOrderNumber).isProjectSalesItemReqPO())
                    {
                        ret = checkFailed('@SCM:PurchPurchaseOrderLineEntity_ProjectSalesPriceIntercompanyError');
                    }
                    break;

                case fieldNum(DNRSubRentalOrderLineEntity, IsProjectPayWhenPaid):
                    if (this.IsProjectPayWhenPaid &amp;&amp; this.ProjectLinePropertyId
                        &amp;&amp; !ProjLineProperty::find(this.ProjectLinePropertyId).ToBeInvoiced)
                    {
                        ret = checkFailed('@SCM:PurchPurchaseOrderLineEntity_ProjectPayWhenPaidError');
                    }
                    break;
            }
        }
        else if (this.(_fieldIdToCheck)) // Project field is specified without project being associated
        {
            ret = checkFailed('@SCM:PurchPurchaseOrderLineEntity_ProjectNotAssociated');
        }

        return ret;
    }

</Source>
			</Method>
			<Method>
				<Name>expectProjectIdToBeDefaultedFromHeader</Name>
				<Source>
    private boolean expectProjectIdToBeDefaultedFromHeader()
    {
        if (!this.RecId
            &amp;&amp; !this.isFieldSet(fieldNum(DNRSubRentalOrderLineEntity, ProjectId))
            &amp;&amp; !this.ProjectId)
        {
            if (PurchTable::find(this.PurchaseOrderNumber).ProjId)
            {
                return true;
            }
        }

        return false;
    }

</Source>
			</Method>
			<Method>
				<Name>projectMustDefaultCostPriceAsSalesPrice</Name>
				<Source>
    private boolean projectMustDefaultCostPriceAsSalesPrice()
    {
        return (!this.ItemNumber &amp;&amp; ProjParameters::find().DefaultCostPriceAsSalesPrice);
    }

</Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source>
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret = super(_fieldIdToCheck);

        if (this.projectFieldNums().in(_fieldIdToCheck))
        {
            ret = this.validateProjectField(_fieldIdToCheck) &amp;&amp; ret;
        }

        return ret;
    }

</Source>
			</Method>
			<Method>
				<Name>isAnyProjectFieldSet</Name>
				<Source>
    private boolean isAnyProjectFieldSet()
    {
        SetEnumerator fieldEnumerator = this.projectFieldNums().getEnumerator();

        while (fieldEnumerator.moveNext())
        {
            if (this.isFieldSet(fieldEnumerator.current()))
            {
                return true;
            }
        }

        return false;
    }

</Source>
			</Method>
			<Method>
				<Name>projectFieldNums</Name>
				<Source>
    private Set projectFieldNums()
    {
        Set projectFieldNums = new Set(Types::Integer);

        projectFieldNums.add(fieldNum(DNRSubRentalOrderLineEntity, ProjectId));
        projectFieldNums.add(fieldNum(DNRSubRentalOrderLineEntity, ProjectCategoryId));
        projectFieldNums.add(fieldNum(DNRSubRentalOrderLineEntity, ProjectSalesCurrencyCode));
        projectFieldNums.add(fieldNum(DNRSubRentalOrderLineEntity, ProjectTaxGroupCode));
        projectFieldNums.add(fieldNum(DNRSubRentalOrderLineEntity, ProjectTaxItemGroupCode));
        projectFieldNums.add(fieldNum(DNRSubRentalOrderLineEntity, ProjectSalesUnitSymbol));
        projectFieldNums.add(fieldNum(DNRSubRentalOrderLineEntity, ProjectWorkerPersonnelNumber));
        projectFieldNums.add(fieldNum(DNRSubRentalOrderLineEntity, ProjectLinePropertyId));
        projectFieldNums.add(fieldNum(DNRSubRentalOrderLineEntity, ProjectSalesPrice));
        projectFieldNums.add(fieldNum(DNRSubRentalOrderLineEntity, IsProjectPayWhenPaid));
        projectFieldNums.add(fieldNum(DNRSubRentalOrderLineEntity, ProjectActivityNumber));

        return projectFieldNums;
    }

</Source>
			</Method>
			<Method>
				<Name>findProcurementCategoryForItem</Name>
				<Source>
    private EcoResCategory findProcurementCategoryForItem(ItemId _itemId)
    {
        var productCategory = EcoResProductCategory::findByItemIdCategoryHierarchyRole(_itemId, EcoResCategoryNamedHierarchyRole::Procurement);
        return EcoResCategory::find(productCategory.Category);
    }

</Source>
			</Method>
			<Method>
				<Name>throwUpdateHasBeenCancelled</Name>
				<Source>
    private void throwUpdateHasBeenCancelled()
    {
        throw error("@SYS18447");
    }

</Source>
			</Method>
			<Method>
				<Name>deliveryAddressPartyRecId</Name>
				<Source>
    // This method implements the interface defined by &lt;c&gt;TradeEntitySpecificDeliveryAddress&lt;/c&gt;
    public RecId deliveryAddressPartyRecId()
    {
        return CompanyInfo::find().RecId;
    }

</Source>
			</Method>
			<Method>
				<Name>isDeliveryAddressOrderSpecificComputedColumnDefinition</Name>
				<Source>
    private static str isDeliveryAddressOrderSpecificComputedColumnDefinition()
    {
        // The &lt;c&gt;IsDeliveryAddressOrderSpecific&lt;/c&gt; field is only designed for import scenarios
        // so we will always return 'No' for export scnearios to save performance.
        return SysComputedColumn::returnLiteral(NoYes::No);
    }

</Source>
			</Method>
			<Method>
				<Name>skipCreateAutoChargesComputedColumnDefinition</Name>
				<Source>
    /// &lt;summary&gt;
    /// The &lt;c&gt;SkipCreateAutoCharges&lt;/c&gt; field is only designed for import scenarios
    /// so we will always return 'Yes' for export scenarios to save performance.
    /// &lt;/summary&gt;
    /// &lt;returns&gt;Yes&lt;/returns&gt;
    private static str skipCreateAutoChargesComputedColumnDefinition()
    {
        return SysComputedColumn::returnLiteral(NoYes::Yes);
    }

</Source>
			</Method>
			<Method>
				<Name>defaultCTQuery</Name>
				<Source>
    /// &lt;summary&gt;
    /// Returns the default change tracking query.
    /// &lt;/summary&gt;
    /// &lt;returns&gt;The default change tracking query.&lt;/returns&gt;
    public static Query defaultCTQuery()
    {
        Query purchLineQuery = new Query();

        var purchLineDS = purchLineQuery.addDataSource(tableNum(PurchLine));
        purchLineDS.addRange(fieldNum(PurchLine, IsDeleted)).value(queryValue(NoYes::No));
        purchLineDS.addRange(fieldNum(PurchLine, PurchaseType)).value(queryValue(PurchaseType::Purch));

        var accountingDistributionTemplateDS = purchLineDS.addDataSource(tableNum(AccountingDistributionTemplate));
        accountingDistributionTemplateDS.addLink(fieldNum(PurchLine, AccountingDistributionTemplate), fieldNum(AccountingDistributionTemplate, RecId));
        accountingDistributionTemplateDS.joinMode(JoinMode::OuterJoin);
        accountingDistributionTemplateDS.fetchMode(QueryFetchMode::One2One);

        var tax1099FieldsDS = purchLineDS.addDataSource(tableNum(Tax1099Fields));
        tax1099FieldsDS.relations(true);
        tax1099FieldsDS.joinMode(JoinMode::OuterJoin);
        tax1099FieldsDS.fetchMode(QueryFetchMode::One2One);

        var ecoResCategory_IntrastatCommodityDS = purchLineDS.addDataSource(tableNum(EcoResCategory));
        ecoResCategory_IntrastatCommodityDS.addLink(fieldNum(PurchLine, IntrastatCommodity), fieldNum(EcoResCategory, RecId));
        ecoResCategory_IntrastatCommodityDS.joinMode(JoinMode::OuterJoin);
        ecoResCategory_IntrastatCommodityDS.fetchMode(QueryFetchMode::One2One);

        var defaultDimensionDS = purchLineDS.addDataSource(tableNum(DimensionAttributeValueSet));
        defaultDimensionDS.addLink(fieldNum(PurchLine, DefaultDimension), fieldNum(DimensionAttributeValueSet, RecId));
        defaultDimensionDS.joinMode(JoinMode::OuterJoin);
        defaultDimensionDS.fetchMode(QueryFetchMode::One2One);

        var ledgerDimensionDS = purchLineDS.addDataSource(tableNum(DimensionAttributeValueCombination));
        ledgerDimensionDS.addLink(fieldNum(PurchLine, LedgerDimension), fieldNum(DimensionAttributeValueCombination, RecId));
        ledgerDimensionDS.joinMode(JoinMode::OuterJoin);
        ledgerDimensionDS.fetchMode(QueryFetchMode::One2One);

        LogisticsPostalAddressBaseEntityChangeTrackingHelper::addPostalAddressBasedOnAddressRecIdLink(purchLineDS, fieldNum(PurchLine, DeliveryPostalAddress));
        
        // InventDim should not change.

        var tax1099BoxDetailDS = purchLineDS.addDataSource(tableNum(Tax1099BoxDetail));
        tax1099BoxDetailDS.addLink(fieldNum(PurchLine, Tax1099RecId), fieldNum(Tax1099BoxDetail, RecId));
        tax1099BoxDetailDS.joinMode(JoinMode::OuterJoin);
        tax1099BoxDetailDS.fetchMode(QueryFetchMode::One2One);

        var purchLineForeignTradeCategoryDS = purchLineDS.addDataSource(tableNum(PurchLineForeignTradeCategory));
        purchLineForeignTradeCategoryDS.addLink(fieldNum(PurchLine, DataAreaId), fieldNum(PurchLineForeignTradeCategory, PurchLineDataAreaId));
        purchLineForeignTradeCategoryDS.addLink(fieldNum(PurchLine, InventTransId), fieldNum(PurchLineForeignTradeCategory, PurchLineInventTransId));
        purchLineForeignTradeCategoryDS.joinMode(JoinMode::OuterJoin);
        purchLineForeignTradeCategoryDS.fetchMode(QueryFetchMode::One2One);

        var whsPurchLineDS = purchLineDS.addDataSource(tableNum(WHSPurchLine));
        whsPurchLineDS.addLink(fieldNum(PurchLine, InventTransId), fieldNum(WHSPurchLine, InventTransId));
        whsPurchLineDS.joinMode(JoinMode::OuterJoin);
        whsPurchLineDS.fetchMode(QueryFetchMode::One2One);

        var pdsCatchWeightItemDS = purchLineDS.addDataSource(tableNum(PdsCatchWeightItem));
        pdsCatchWeightItemDS.addLink(fieldNum(PurchLine, ItemId), fieldNum(PdsCatchWeightItem, ItemId));
        pdsCatchWeightItemDS.joinMode(JoinMode::OuterJoin);
        pdsCatchWeightItemDS.fetchMode(QueryFetchMode::One2One);

        var ecoResCategory_ProcurementCategoryDS = purchLineDS.addDataSource(tableNum(EcoResCategory));
        ecoResCategory_ProcurementCategoryDS.addLink(fieldNum(PurchLine, ProcurementCategory), fieldNum(EcoResCategory, RecId));
        ecoResCategory_ProcurementCategoryDS.joinMode(JoinMode::OuterJoin);
        ecoResCategory_ProcurementCategoryDS.fetchMode(QueryFetchMode::One2One);

        var purchLine_IntrastatDS = purchLineDS.addDataSource(tableNum(PurchLine_Intrastat));
        purchLine_IntrastatDS.addLink(fieldNum(PurchLine, RecId), fieldNum(PurchLine_Intrastat, PurchLine));
        purchLine_IntrastatDS.joinMode(JoinMode::OuterJoin);
        purchLine_IntrastatDS.fetchMode(QueryFetchMode::One2One);

        var taxWithholdItemGroupHeading_THDS = purchLineDS.addDataSource(tableNum(TaxWithholdItemGroupHeading_TH));
        taxWithholdItemGroupHeading_THDS.addLink(fieldNum(PurchLine, TaxWithholdItemGroupHeading_TH), fieldNum(TaxWithholdItemGroupHeading_TH, RecId));
        taxWithholdItemGroupHeading_THDS.joinMode(JoinMode::OuterJoin);
        taxWithholdItemGroupHeading_THDS.fetchMode(QueryFetchMode::One2One);

        var cfopTable_BRDS = purchLineDS.addDataSource(tableNum(CFOPTable_BR));
        cfopTable_BRDS.addLink(fieldNum(PurchLine, CFOPTable_BR), fieldNum(CFOPTable_BR, RecId));
        cfopTable_BRDS.joinMode(JoinMode::OuterJoin);
        cfopTable_BRDS.fetchMode(QueryFetchMode::One2One);

        var budgetReservationLine_PSNDS = purchLineDS.addDataSource(tableNum(BudgetReservationLine_PSN));
        budgetReservationLine_PSNDS.addLink(fieldNum(PurchLine, BudgetReservationLine_PSN), fieldNum(BudgetReservationLine_PSN, RecId));
        budgetReservationLine_PSNDS.joinMode(JoinMode::OuterJoin);
        budgetReservationLine_PSNDS.fetchMode(QueryFetchMode::One2One);

        return purchLineQuery;
    }

</Source>
			</Method>
			<Method>
				<Name>createPurchLineForeignTradeCategory</Name>
				<Source>
    private void createPurchLineForeignTradeCategory(DataEntityRuntimeContext _entityCtx)
    {
        if (this.ProcurementProductCategoryRecId &amp;&amp; !this.ItemNumber)
        {
            PurchLine purchLine = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(DNRSubRentalOrderLineEntity, PurchLine)).getBuffer();
            if (purchLine.InventTransId)
            {
                var purchLineForeignTradeCategory = PurchLineForeignTradeCategory::find(purchLine.InventTransId, purchLine.DataAreaId);
                if (!purchLineForeignTradeCategory)
                {
                    ttsbegin;
                    purchLineForeignTradeCategory.initFromPurchLine(purchLine);
                    purchLineForeignTradeCategory.insert();
                    ttscommit;
                }
            }
        }
    }

</Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>DNRDeletedObjects_DynaRentDataManagement</ConfigurationKey>
	<DeveloperDocumentation>@DNR:DNRSubRentalOrderLDOC</DeveloperDocumentation>
	<FormRef>RORPurchTable</FormRef>
	<Label>@DNR6058</Label>
	<Tags>Purchase order</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>DNRSubRentalOrderLineStaging</DataManagementStagingTable>
	<EntityCategory>Document</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>DNRSubRentalOrderLines</PublicCollectionName>
	<PublicEntityName>DNRSubRentalOrderLine</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WithholdingTaxGroupCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemWithholdingTaxGroupCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>PurchaseOrderLineStatus</Name>
			<DataField>PurchStatus</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>SalesTaxItemGroupCode</Name>
			<DataField>TaxItemGroup</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>SalesTaxGroupCode</Name>
			<DataField>TaxGroup</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>AccountingDistributionTemplate</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>AccountingDistributionTemplate</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>AccountingDistributionTemplateName</Name>
			<Mandatory>No</Mandatory>
			<DataField>Name</DataField>
			<DataSource>AccountingDistributionTemplate</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>FixedAssetValueModelId</Name>
			<DataField>AssetBookId</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>FixedAssetGroupId</Name>
			<DataField>AssetGroup</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>FixedAssetNumber</Name>
			<DataField>AssetId</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>FixedAssetTransactionType</Name>
			<DataField>AssetTransTypePurch</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>Barcode</Name>
			<DataField>BarCode</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>BarCodeSetupId</Name>
			<DataField>BarCodeType</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>IsLineStopped</Name>
			<DataField>Blocked</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>IsPartialDeliveryPrevented</Name>
			<DataField>Complete</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>ConfirmedDeliveryDate</Name>
			<DataField>ConfirmedDlv</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>IsNewFixedAsset</Name>
			<DataField>CreateFixedAsset</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>CustomerReference</Name>
			<DataField>CustomerRef</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>CustomerRequisitionNumber</Name>
			<DataField>CustPurchaseOrderFormNum</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>DefaultLedgerDimension</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>DefaultDimension</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>RequestedDeliveryDate</Name>
			<DataField>DeliveryDate</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressName</Name>
			<Label>@SCM:DeliveryAddressName</Label>
			<DataField>DeliveryName</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>ExternalItemNumber</Name>
			<Label>@SYS14552</Label>
			<DataField>ExternalItemId</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>GSTHSTTaxType</Name>
			<DataField>GSTHSTTaxType_CA</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>BOMId</Name>
			<DataField>ItemBOMId</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>ItemNumber</Name>
			<AllowEdit>No</AllowEdit>
			<DataField>ItemId</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>RouteId</Name>
			<DataField>ItemRouteId</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>MainAccountId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>LedgerDimension</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>LineAmount</Name>
			<DataField>LineAmount</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>LineDiscountAmount</Name>
			<DataField>LineDisc</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>LineNumber</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>LineNumber</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>LineDiscountPercentage</Name>
			<DataField>LinePercent</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>VendorInvoiceMatchingPolicy</Name>
			<DataField>MatchingPolicy</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>MultilineDiscountAmount</Name>
			<DataField>MultiLnDisc</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>MultilineDiscountPercentage</Name>
			<DataField>MultiLnPercent</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>LineDescription</Name>
			<DataField>Name</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>DIOTOperationType</Name>
			<DataField>OperationType_MX</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>AllowedOverdeliveryPercentage</Name>
			<DataField>OverDeliveryPct</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>OrderedCatchWeightQuantity</Name>
			<DataField>PdsCWQty</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>PurchasePriceQuantity</Name>
			<DataField>PriceUnit</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>ProcurementProductCategoryRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ProcurementCategory</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>ProcurementProductCategoryName</Name>
			<AllowEdit>No</AllowEdit>
			<Label>@SYS136906</Label>
			<Mandatory>No</Mandatory>
			<DataField>Name</DataField>
			<DataSource>EcoResCategory_ProcurementCategory</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>PurchaseOrderNumber</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>PurchId</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>FixedPriceCharges</Name>
			<DataField>PurchMarkup</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>PurchasePrice</Name>
			<DataField>PurchPrice</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>OrderedPurchaseQuantity</Name>
			<DataField>PurchQty</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>PurchaseUnitSymbol</Name>
			<DataField>PurchUnit</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>ConfirmedShippingDate</Name>
			<DataField>ShippingDateConfirmed</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>RequestedShippingDate</Name>
			<DataField>ShippingDateRequested</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>PurchaseRebateVendorGroupId</Name>
			<DataField>TAMItemVendRebateGroupId</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>Tax1099Amount</Name>
			<DataField>Tax1099Amount</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>Tax1099StateId</Name>
			<DataField>Tax1099State</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>Tax1099StateAmount</Name>
			<DataField>Tax1099StateAmount</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>IntrastatPortId</Name>
			<DataField>Port</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>IntrastatCommodity</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>IntrastatCommodity</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>IntrastatCommodityCode</Name>
			<Label>@SYS28731</Label>
			<DataField>Code</DataField>
			<DataSource>EcoResCategory_IntrastatCommodity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>IntrastatStatisticsProcedureCode</Name>
			<DataField>StatProcId</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>IsIntrastatTriangularDeal</Name>
			<DataField>StatTriangularDeal</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>IntrastatTransactionCode</Name>
			<DataField>TransactionCode</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>IntrastatTransportModeCode</Name>
			<DataField>Transport</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>OriginCountryRegionId</Name>
			<DataField>OrigCountryRegionId</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>OriginStateId</Name>
			<DataField>OrigStateId</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>AllowedUnderdeliveryPercentage</Name>
			<DataField>UnderDeliveryPct</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>RetailProductVariantNumber</Name>
			<DataField>VariantId</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>DefaultLedgerDimensionDisplayValue</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS138491</Label>
			<DataField>DisplayValue</DataField>
			<DataSource>DefaultDimensionDAVS</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>MainAccountIdDisplayValue</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS8343</Label>
			<DataField>DisplayValue</DataField>
			<DataSource>LedgerDimensionDAVC</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>DeliveryPostalAddressRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>AddressRecId</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsDeliveryAddressOrderSpecific</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsOneTimeDeliveryAddress</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>isDeliveryAddressOrderSpecificComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressLocationId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>LocationId</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>FormattedDelveryAddress</Name>
			<DataField>Address</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>DeliveryBuildingCompliment</Name>
			<DataField>BuildingCompliment</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressCity</Name>
			<DataField>City</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>DeliveryCityInKana</Name>
			<DataField>CityInKana</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressCountryRegionId</Name>
			<Mandatory>No</Mandatory>
			<DataField>CountryRegionId</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressCountryRegionISOCode</Name>
			<DataField>CountryRegionISOCode</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressCountyId</Name>
			<DataField>County</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressDescription</Name>
			<DataField>Description</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressDistrictName</Name>
			<DataField>DistrictName</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressDunsNumber</Name>
			<DataField>DunsNumber</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>IsDeliveryAddressPrivate</Name>
			<Label>@SCM:IsDeliveryAddressPrivate</Label>
			<DataField>IsPrivate</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressLatitude</Name>
			<DataField>Latitude</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressLongitude</Name>
			<DataField>Longitude</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressPostBox</Name>
			<DataField>PostBox</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressStateId</Name>
			<DataField>State</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressStreet</Name>
			<DataField>Street</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>DeliveryStreetInKana</Name>
			<DataField>StreetInKana</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressStreetNumber</Name>
			<DataField>StreetNumber</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>DeliveryValidFrom</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ValidFrom</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>DeliveryValidTo</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ValidTo</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressTimeZone</Name>
			<DataField>TimeZone</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressZipCode</Name>
			<DataField>ZipCode</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>ReceivingWarehouseId</Name>
			<DataField>InventLocationId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>ReceivingSiteId</Name>
			<DataField>InventSiteId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>ProductSizeId</Name>
			<DataField>InventSizeId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>ProductColorId</Name>
			<DataField>InventColorId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>ProductConfigurationId</Name>
			<DataField>configId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>ProductStyleId</Name>
			<DataField>InventStyleId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>ItemBatchNumber</Name>
			<DataField>inventBatchId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>OrderedInventoryStatusId</Name>
			<DataField>InventStatusId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>Tax1099Fields</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Tax1099Fields</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>Tax1099Type</Name>
			<Mandatory>No</Mandatory>
			<DataField>Tax1099Type</DataField>
			<DataSource>Tax1099Fields</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>Tax1099BoxId</Name>
			<Mandatory>No</Mandatory>
			<DataField>Tax1099Box</DataField>
			<DataSource>Tax1099Fields</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>Tax1099GVendorStateId</Name>
			<DataField>State</DataField>
			<DataSource>Tax1099BoxDetail</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>Tax1099GVendorStateTaxId</Name>
			<DataField>Tax1099StateTaxID</DataField>
			<DataSource>Tax1099BoxDetail</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>Tax1099GStateTaxWithheldAmount</Name>
			<DataField>Tax1099StateTaxWithheld</DataField>
			<DataSource>Tax1099BoxDetail</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>Tax1099GTaxYear</Name>
			<DataField>Tax1099TaxYear</DataField>
			<DataSource>Tax1099BoxDetail</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>IsTax1099GTradeOrBusinessIncome</Name>
			<DataField>Tax1099TradeOrBusiness</DataField>
			<DataSource>Tax1099BoxDetail</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>Tax1099SClosingDate</Name>
			<DataField>Tax1099DateOfClosing</DataField>
			<DataSource>Tax1099BoxDetail</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>Tax1099SAddressOrLegalDescription</Name>
			<DataField>Tax1099AddressorLegalDesc</DataField>
			<DataSource>Tax1099BoxDetail</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>IsTax1099SPropertyOrServices</Name>
			<DataField>Tax1099PropertyOrServices</DataField>
			<DataSource>Tax1099BoxDetail</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>Tax1099SBuyerPartOfRealEstateTaxAmount</Name>
			<DataField>Tax1099BuyersTax</DataField>
			<DataSource>Tax1099BoxDetail</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>UnitWeight</Name>
			<DataField>UnitWeight</DataField>
			<DataSource>PurchLineForeignTradeCategory</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>NGPCodeRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>NGPCodesTable_FR</DataField>
			<DataSource>PurchLineForeignTradeCategory</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>NGPCode</Name>
			<Mandatory>No</Mandatory>
			<DataField>NGPCode</DataField>
			<DataSource>NGPCodesTable_FR</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>WillProductReceivingCrossDockProducts</Name>
			<DataField>CrossDock</DataField>
			<DataSource>WHSPurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>CatchWeightUnitSymbol</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>PdsCWUnitId</DataField>
			<DataSource>PdsCatchWeightItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>RequesterRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Requester</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>RequesterPersonnelNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS108788</Label>
			<Mandatory>No</Mandatory>
			<DataField>PersonnelNumber</DataField>
			<DataSource>HcmWorker_Requester</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>ProjectId</Name>
			<DataField>ProjId</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>ProjectCategoryId</Name>
			<DataField>ProjCategoryId</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>ProjectSalesCurrencyCode</Name>
			<DataField>ProjSalesCurrencyId</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>ProjectTaxGroupCode</Name>
			<DataField>ProjTaxGroupId</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>ProjectTaxItemGroupCode</Name>
			<DataField>ProjTaxItemGroupId</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>ProjectSalesUnitSymbol</Name>
			<DataField>ProjSalesUnitId</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>ProjectWorkerPersonnelNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<DataField>PersonnelNumber</DataField>
			<DataSource>HcmWorker_ProjectWorker</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>ProjectLinePropertyId</Name>
			<DataField>ProjLinePropertyId</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>ProjectSalesPrice</Name>
			<DataField>ProjSalesPrice</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>IsProjectPayWhenPaid</Name>
			<DataField>IsPwp</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>IntrastatStatisticValue</Name>
			<DataField>StatisticValue_LT</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>IntrastatSpecialMovementCode</Name>
			<CountryRegionCodes>CZ</CountryRegionCodes>
			<DataField>SpecialMovement_CZ</DataField>
			<DataSource>PurchLine_Intrastat</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>WithholdingTaxGroupCode</Name>
			<Mandatory>No</Mandatory>
			<DataField>TaxWithholdGroup_TH</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>ItemWithholdingTaxGroupCode</Name>
			<Mandatory>No</Mandatory>
			<DataField>TaxWithholdItemGroup</DataField>
			<DataSource>TaxWithholdItemGroupHeading_TH</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>PurchaseOrderLineCreationMethod</Name>
			<DataField>PurchaseOrderLineCreationMethod</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>CFOPCode</Name>
			<DataField>CFOPId</DataField>
			<DataSource>CFOPTable_BR</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>CFOPTableRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>CFOPTable_BR</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>ServiceFiscalInformationCode</Name>
			<DataField>TaxServiceCode_BR</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>ProjectActivityNumber</Name>
			<DataField>ActivityNumber</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>BudgetReservationLineRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<ConfigurationKey>BudgetReservation_PSN</ConfigurationKey>
			<Mandatory>No</Mandatory>
			<DataField>BudgetReservationLine_PSN</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>BudgetReservationLineNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<ConfigurationKey>BudgetReservation_PSN</ConfigurationKey>
			<Mandatory>No</Mandatory>
			<DataField>LineNumber</DataField>
			<DataSource>BudgetReservationLine_PSN</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>BudgetReservationDocumentNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<ConfigurationKey>BudgetReservation_PSN</ConfigurationKey>
			<Mandatory>No</Mandatory>
			<DataField>DocumentNumber</DataField>
			<DataSource>BudgetReservationHeader_PSN</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>PurchaseRequisitionId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>PurchReqId</DataField>
			<DataSource>PurchLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>SkipCreateAutoCharges</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:SkipAutoChargeCreation</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>skipCreateAutoChargesComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>PurchaseOrderNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>LineNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings>
		<AxTableMapping>
			<MappingTable>InventInventoryDimensionEntityFieldsMapping</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>configId</MapField>
					<MapFieldTo>ProductConfigurationId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>inventBatchId</MapField>
					<MapFieldTo>ItemBatchNumber</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventColorId</MapField>
					<MapFieldTo>ProductColorId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventGTDId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventLocationId</MapField>
					<MapFieldTo>ReceivingWarehouseId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventOwnerId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventProfileId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>inventSerialId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSiteId</MapField>
					<MapFieldTo>ReceivingSiteId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSizeId</MapField>
					<MapFieldTo>ProductSizeId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventStatusId</MapField>
					<MapFieldTo>OrderedInventoryStatusId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventStyleId</MapField>
					<MapFieldTo>ProductStyleId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LicensePlateId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>wMSLocationId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>wMSPalletId</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>TradeEntitySpecificDeliveryAddress</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>DeliveryLocationId</MapField>
					<MapFieldTo>DeliveryAddressLocationId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IsDeliveryAddressOrderSpecific</MapField>
					<MapFieldTo>IsDeliveryAddressOrderSpecific</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation i:type="AxDataEntityViewRelationForeignKey">
			<Name>DefaultDimensionDimensionSet</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>DimensionSetEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>DefaultDimensionDimensionSet</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchaseOrderLinesV2</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint i:type="AxDataEntityViewRelationConstraintField">
					<Name>DefaultDimension</Name>
					<Field>DefaultLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation i:type="AxDataEntityViewRelationForeignKey">
			<Name>LedgerDimensionCombination</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>DimensionCombinationEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>LedgerDimensionCombination</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchaseOrderLinesV2</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint i:type="AxDataEntityViewRelationConstraintField">
					<Name>LedgerDimension</Name>
					<Field>MainAccountId</Field>
					<RelatedField>RecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>PurchaseOrderHeader</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>PurchPurchaseOrderHeaderV2Entity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>PurchaseOrderHeader</RelatedDataEntityRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>PurchaseOrderLinesV2</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>PurchaseOrderNumber</Field>
					<RelatedField>PurchaseOrderNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>Project</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>ProjectEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>Project</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchaseOrderLines</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>ProjectId</Field>
					<RelatedField>ProjectID</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source>
[Query]
public class Metadata extends QueryRun
{
}
</Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>PurchLine</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>PurchLine</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>AccountingDistributionTemplate</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>AccountingDistributionTemplate</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>AccountingDistributionTemplate</Field>
								<JoinDataSource>PurchLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>Tax1099Fields</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>Tax1099Fields</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>Tax1099Fields</Name>
								<JoinRelationName>Tax1099Fields</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>EcoResCategory_IntrastatCommodity</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>EcoResCategory</Table>
						<DataSources />
						<DerivedDataSources>
							<AxQuerySimpleDerivedDataSource>
								<Name>PCClass1</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>PCClass</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
							</AxQuerySimpleDerivedDataSource>
						</DerivedDataSources>
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>IntrastatCommodity</Field>
								<JoinDataSource>PurchLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>DefaultDimensionDAVS</Name>
						<AllowAdd>No</AllowAdd>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionSetEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>DefaultDimensionDAVS</Name>
								<Field>DefaultDimension</Field>
								<JoinDataSource>PurchLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>LedgerDimensionDAVC</Name>
						<AllowAdd>No</AllowAdd>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionCombinationEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>LedgerDimensionDAVC</Name>
								<Field>LedgerDimension</Field>
								<JoinDataSource>PurchLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>LogisticsPostalAddressBaseEntity</Name>
						<ApplyDateFilter>Yes</ApplyDateFilter>
						<DynamicFields>Yes</DynamicFields>
						<Table>LogisticsPostalAddressBaseEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>DeliveryPostalAddress</Field>
								<JoinDataSource>PurchLine</JoinDataSource>
								<RelatedField>AddressRecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventDim</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>InventDim</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>PurchLine</JoinDataSource>
								<JoinRelationName>InventDim</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>Tax1099BoxDetail</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>Tax1099BoxDetail</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>Tax1099RecId</Field>
								<JoinDataSource>PurchLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>PurchLineForeignTradeCategory</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>PurchLineForeignTradeCategory</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>NGPCodesTable_FR</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>NGPCodesTable_FR</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<JoinDataSource>PurchLineForeignTradeCategory</JoinDataSource>
										<JoinRelationName>NGPCodesTable_FR</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>PurchLine</JoinDataSource>
								<JoinRelationName>PurchLine</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>WHSPurchLine</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>WHSPurchLine</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>PurchLine</JoinDataSource>
								<JoinRelationName>PurchLine</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>PdsCatchWeightItem</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>PdsCatchWeightItem</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>ItemId</Field>
								<JoinDataSource>PurchLine</JoinDataSource>
								<RelatedField>ItemId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>EcoResCategory_ProcurementCategory</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>EcoResCategory</Table>
						<DataSources />
						<DerivedDataSources>
							<AxQuerySimpleDerivedDataSource>
								<Name>EcoResCategory_ProcurementCategory_PCClass</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>PCClass</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
							</AxQuerySimpleDerivedDataSource>
						</DerivedDataSources>
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>ProcurementCategory</Field>
								<JoinDataSource>PurchLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HcmWorker_Requester</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>HcmWorker</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>Requester</Field>
								<JoinDataSource>PurchLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HcmWorker_ProjectWorker</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>HcmWorker</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>ProjWorker</Field>
								<JoinDataSource>PurchLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>PurchLine_Intrastat</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>PurchLine_Intrastat</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>RecId</Field>
								<JoinDataSource>PurchLine</JoinDataSource>
								<RelatedField>PurchLine</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>TaxWithholdItemGroupHeading_TH</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>TaxWithholdItemGroupHeading_TH</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>TaxWithholdItemGroupHeading_TH</Field>
								<JoinDataSource>PurchLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CFOPTable_BR</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>CFOPTable_BR</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>CFOPTable_BR</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>BudgetReservationLine_PSN</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>BudgetReservationLine_PSN</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>BudgetReservationHeader_PSN</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>BudgetReservationHeader_PSN</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<JoinDataSource>BudgetReservationLine_PSN</JoinDataSource>
										<JoinRelationName>BudgetReservationHeader_PSN</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>PurchLine</JoinDataSource>
								<JoinRelationName>BudgetReservationLine_PSN</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>NotDeleted</Name>
						<Field>IsDeleted</Field>
						<Value>0</Value>
					</AxQuerySimpleDataSourceRange>
					<AxQuerySimpleDataSourceRange>
						<Name>PurchaseType_Order</Name>
						<Field>PurchaseType</Field>
						<Value>RORSubRental</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>