<?xml version='1.0' encoding='utf-8'?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRInventItemRentalSetupEntity</Name>
	<SourceCode>
		<Declaration>
public class DNRInventItemRentalSetupEntity extends common
{
}
</Declaration>
		<Methods>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source>
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        const int siteSequenceNumber = 10;

        switch(_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(DNRInventItemRentalSetupEntity, InventItemInventSetup):
                InventItemInventSetup inventSetup = _dataSourceCtx.getBuffer();
                inventSetup.Sequence = siteSequenceNumber;
                inventSetup.ItemId = this.ItemId;
                break;

            case dataEntityDataSourceStr(DNRInventItemRentalSetupEntity, SubRentalSetupInventDim):
                _dataSourceCtx.setBuffer(this.getOrCreateSiteDim(this.SubRentalSiteId, this.SubRentalWarehouseId));
                break;

            case dataEntityDataSourceStr(DNRInventItemRentalSetupEntity, RentalSetupInventDim):
                _dataSourceCtx.setBuffer(this.getOrCreateSiteDim(this.RentalSiteId, this.RentalWarehouseId));
                break;

            case dataEntityDataSourceStr(DNRInventItemRentalSetupEntity, RORInventItemSubRentalSetup):
                RORInventItemSubRentalSetup inventItemSubRentalSetup = _dataSourceCtx.getBuffer();
                if(_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert
                || _entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Update)
                {
                    RORInventItemSubRentalSetup subRentalSetup;
                    select firstonly subRentalSetup
                    where subRentalSetup.ItemId == this.ItemId;

                    if (subRentalSetup.RecId)
                    {
                        subRentalSetup.TaxItemGroup           = this.SubRentalTaxItemGroup;
                        subRentalSetup.WPPWorkOrderTemplateId = this.SubRentalWorkOrderTemplateId;
                        subRentalSetup.InventDimIdDefault     = this.getOrCreateSiteDim(this.SubRentalSiteId, this.SubRentalWarehouseId).InventDimId;
                        _dataSourceCtx.setBuffer(subRentalSetup);
                    }
                    else
                    {
                        inventItemSubRentalSetup.ItemId                 = this.ItemId;
                        inventItemSubRentalSetup.InventDimIdDefault     = this.getOrCreateSiteDim(this.SubRentalSiteId, this.SubRentalWarehouseId).InventDimId;
                        inventItemSubRentalSetup.InventDimId            = InventDim::findOrCreateBlank().inventDimId;
                        inventItemSubRentalSetup.Sequence               = siteSequenceNumber;
                        inventItemSubRentalSetup.TaxItemGroup           = this.SubRentalTaxItemGroup;
                        inventItemSubRentalSetup.WPPWorkOrderTemplateId = this.SubRentalWorkOrderTemplateId;
                        _dataSourceCtx.setBuffer(inventItemSubRentalSetup);

                    }
                }
                break;

            case dataEntityDataSourceStr(DNRInventItemRentalSetupEntity, RORInventItemRentalSetup):
                RORInventItemRentalSetup inventItemRentalSetup = _dataSourceCtx.getBuffer();
                if(_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert
                || _entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Update)
                {
                    RORInventItemRentalSetup rentalSetup;
                    select firstonly rentalSetup
                    where rentalSetup.ItemId == this.ItemId;

                    if (rentalSetup.RecId)
                    {
                        rentalSetup.TaxItemGroup           = this.RentalTaxItemGroup;
                        rentalSetup.WPPWorkOrderTemplateId = this.RentalWorkOrderTemplateId;
                        rentalSetup.InventDimIdDefault     = this.getOrCreateSiteDim(this.SubRentalSiteId, this.SubRentalWarehouseId).InventDimId;
                        _dataSourceCtx.setBuffer(rentalSetup);
                    }
                    else
                    {
                        inventItemRentalSetup.ItemId                 = this.ItemId;
                        inventItemRentalSetup.InventDimIdDefault     = this.getOrCreateSiteDim(this.RentalSiteId, this.RentalWarehouseId).InventDimId;
                        inventItemRentalSetup.InventDimId            = InventDim::findOrCreateBlank().inventDimId;
                        inventItemRentalSetup.Sequence               = siteSequenceNumber;
                        inventItemRentalSetup.TaxItemGroup           = this.RentalTaxItemGroup;
                        inventItemRentalSetup.WPPWorkOrderTemplateId = this.RentalWorkOrderTemplateId;
                        _dataSourceCtx.setBuffer(inventItemRentalSetup);

                    }
                }
                break;
        }
    }

</Source>
			</Method>
			<Method>
				<Name>getOrCreateSiteDim</Name>
				<Source>
    public InventDim getOrCreateSiteDim(InventSiteId _inventSiteId, InventLocationId _locationId)
    {
        InventDim inventDim;
        inventDim.InventSiteId = _inventSiteId;
        inventDim.InventLocationId = _locationId;
        inventDim = InventDim::findOrCreate(inventDim);

        //FieldState is set to 'Set' to avoid the framework in thinking that the mandatory field site is not set by the user.
        inventDim.fieldState(fieldNum(InventDim, InventSiteId), FieldState::Set);
        return inventDim;
    }

</Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source>
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;
    
        switch(_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(InventProductSiteSpecificOrderSettingsEntity, RORInventItemSubRentalSetup):
                RORInventItemSubRentalSetup subRentalSetup = _dataSourceCtx.getBuffer();
                subRentalSetup.Sequence = 10;
                break;

            case dataEntityDataSourceStr(InventProductSiteSpecificOrderSettingsEntity, RORInventItemRentalSetup):
                RORInventItemRentalSetup rentalSetup = _dataSourceCtx.getBuffer();
                rentalSetup.Sequence = 10;
                break;

            case dataEntityDataSourceStr(InventProductSiteSpecificOrderSettingsEntity, RORSubRentalDefaultInventDim):
            case dataEntityDataSourceStr(InventProductSiteSpecificOrderSettingsEntity, RORRentalDefaultInventDim):
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                return true;
                break;
        }

        ret = super(_entityCtx, _dataSourceCtx);
    
        return ret;
    }

</Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>DNRDeletedObjects_DynaRentDataManagement</ConfigurationKey><DeveloperDocumentation>@DNR:DNRItemRentalDoc</DeveloperDocumentation>
	<FormRef>InventItemOrderSetup</FormRef>
	<Label>@DNR3237</Label>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>DNRInventItemRentalSetupStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>DNRInventItemRentalSetups</PublicCollectionName>
	<PublicEntityName>DNRInventItemRentalSetup</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>RentalSiteId</Name>
			<DataField>InventSiteId</DataField>
			<DataSource>RentalSetupInventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>RentalWarehouseId</Name>
			<DataField>InventLocationId</DataField>
			<DataSource>RentalSetupInventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>SubRentalWarehouseId</Name>
			<DataField>InventLocationId</DataField>
			<DataSource>SubRentalSetupInventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>SubRentalSiteId</Name>
			<DataField>InventSiteId</DataField>
			<DataSource>SubRentalSetupInventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>ItemId</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>ItemId</DataField>
			<DataSource>InventItemInventSetup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>SubRentalSetupItemId</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>ItemId</DataField>
			<DataSource>RORInventItemSubRentalSetup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>RentalSetupItemId</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>ItemId</DataField>
			<DataSource>RORInventItemRentalSetup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>SubRentalTaxItemGroup</Name>
			<DataField>TaxItemGroup</DataField>
			<DataSource>RORInventItemSubRentalSetup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>SubRentalWorkOrderTemplateId</Name>
			<DataField>WPPWorkOrderTemplateId</DataField>
			<DataSource>RORInventItemSubRentalSetup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>RentalTaxItemGroup</Name>
			<DataField>TaxItemGroup</DataField>
			<DataSource>RORInventItemRentalSetup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>RentalWorkOrderTemplateId</Name>
			<DataField>WPPWorkOrderTemplateId</DataField>
			<DataSource>RORInventItemRentalSetup</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ItemId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source>
[Query]
public class Metadata extends QueryRun
{
}
</Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>InventItemInventSetup</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>InventItemInventSetup</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>RORInventItemSubRentalSetup</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>RORInventItemSubRentalSetup</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>SubRentalSetupInventDim</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>InventDim</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>InventDimIdDefault</Field>
										<JoinDataSource>RORInventItemSubRentalSetup</JoinDataSource>
										<RelatedField>InventDimId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>InventItemInventSetup</JoinDataSource>
								<JoinRelationName>RORInventItemSubRentalSetup</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>RORInventItemRentalSetup</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>RORInventItemRentalSetup</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>RentalSetupInventDim</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>InventDim</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>InventDimIdDefault</Field>
										<JoinDataSource>RORInventItemRentalSetup</JoinDataSource>
										<RelatedField>InventDimId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>InventItemInventSetup</JoinDataSource>
								<JoinRelationName>RORInventItemRentalSetup</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>