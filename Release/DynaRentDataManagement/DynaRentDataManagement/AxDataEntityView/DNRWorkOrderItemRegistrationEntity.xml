<?xml version='1.0' encoding='utf-8'?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRWorkOrderItemRegistrationEntity</Name>
	<SourceCode>
		<Declaration>
public class DNRWorkOrderItemRegistrationEntity extends common
{
}
</Declaration>
		<Methods>
			<Method>
				<Name>update</Name>
				<Source>
    public void update()
    {
        ttsbegin;
        this.RecId = this.createItemJournal();
        ttscommit;
    }

</Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source>
    public void insert()
    {
        ttsbegin;
        this.RecId = this.createItemJournal();
        ttscommit;
    }

</Source>
			</Method>
			<Method>
				<Name>postJournal</Name>
				<Source>
    //If the posting needs to be disabled, CoC on this method should be done
    protected boolean postJournal()
    {
        return true;
    }

</Source>
			</Method>
			<Method>
				<Name>createItemJournal</Name>
				<Source>
    private RecId createItemJournal()
    {
        InventJournalTableData  journalTableData;
        InventJournalTransData  journalTransData;
        InventJournalTable      journalTable, journalTableUpd;
        InventJournalTrans      journalTrans, journalTransSelect;
        InventTable             inventTable;
        ProjTable               projTable = ProjTable::find(this.ProjId);
        inventDim               inventDim;
        NumberSeq               numberSeq;
        ProjParameters          projParameters = ProjParameters::find();
        boolean                 newLineCreated = false, newJournalCreated = false;
        JournalCheckPost        jourPost;

        journalTableData        = JournalTableData::newTable(journalTable);
        journalTransData        = journalTableData.journalStatic().newJournalTransData(journalTrans,journalTableData);

        if (this.JournalId)
        {
            //First check if the journal already exists
            select firstonly journalTable
            where journalTable.JournalId     == this.JournalId
            &amp;&amp;    journalTable.JournalType   == InventJournalType::project
            &amp;&amp;    journalTable.WPPProjId     == this.ProjId
            &amp;&amp;    !journalTable.Posted;

            if (!journalTable)
            {
                //Create journal record
                journalTable.clear();
                journalTable.JournalId     = journalTableData.nextJournalId();
                journalTable.JournalType   = InventJournalType::project;
                journalTable.JournalNameId = projParameters.inventJournalNameId;
                journalTable.modifiedField(fieldNum(InventJournalTable, JournalNameId));
                journalTable.WPPProjId     = this.ProjId;
                journalTable.insert();

                newJournalCreated = true;
            }
        }
        else
        {
            //First check if an open journal already exists
            select firstonly journalTable
            where journalTable.WPPProjId     == this.ProjId
            &amp;&amp;    journalTable.JournalType   == InventJournalType::project
            &amp;&amp;    journalTable.JournalNameId == projParameters.inventJournalNameId
            &amp;&amp;    !journalTable.Posted;

            if (!journalTable)
            {
                // Init JournalTable
                journalTable.clear();
                journalTable.JournalId     = journalTableData.nextJournalId();
                journalTable.JournalType   = InventJournalType::project;
                journalTable.JournalNameId = projParameters.inventJournalNameId;
                journalTable.modifiedField(fieldNum(InventJournalTable, JournalNameId));
                journalTable.WPPProjId     = this.ProjId;
                journalTable.insert();

                newJournalCreated = true;
            }
        }

        // Init JournalTrans
        journalTableData.initFromJournalName(journalTableData.journalStatic().findJournalName(journalTable.JournalNameId));

        if (!newJournalCreated &amp;&amp; this.LineNum)
        {
            select firstonly forupdate journalTrans
            where journalTrans.JournalId == this.JournalId
            &amp;&amp;    journalTrans.LineNum   == this.LineNum;
        }
        
        if (!journalTrans)
        {
            journalTrans.clear();
            journalTrans.initValue();

            select maxof(LineNum), count(RecId) from journalTransSelect
            order by LineNum desc
            where journalTransSelect.JournalId == journalTable.JournalId;
            
            journalTrans.LineNum            = journalTransSelect.LineNum + 1;
            journalTrans.InventTransId      = NumberSeq::newGetNum(InventParameters::numRefInventTransId()).num();
            numberSeq                       = NumberSeq::newGetVoucherFromId(journalTable.VoucherNumberSequenceTable, false);
            journalTrans.Voucher            = numberSeq.voucher();
        }
        
        journalTransData.initFromJournalTable();
        
        journalTrans.ProjCategoryId         = projParameters.ItemCategory ? projParameters.ItemCategory : this.ProjCategoryId;
        journalTrans.ProjId                 = this.ProjId;
        journalTrans.initFromProjTable(projTable);
        journalTrans.TransDate              = systemDateGet();
        //Inventory dimension
        inventDim.InventSiteId              = this.InventSiteId;
        inventDim.InventLocationId          = this.InventLocationId;
        inventDim.inventSerialId            = this.InventSerialId;
        inventDim                           = InventDim::findOrCreate(inventDim);
        journalTrans.InventDimId            = inventDim.inventDimId;
        journalTrans.Qty                    = this.Qty;
        journalTrans.ItemId                 = this.ItemId;
        journalTrans.modifiedField(fieldNum(InventJournalTrans, ItemId));

        if (!journalTrans.ProjSalesCurrencyId)
        {
            journalTrans.ProjSalesCurrencyId = Ledger::accountingCurrency(CompanyInfo::current());
        }

        journalTrans.Worker                 = HcmWorker::userId2Worker(curUserId());
        InventTableModule inventTableModule = InventTableModule::find(journalTrans.ItemId, ModuleInventPurchSales::Purch);
        journalTrans.PriceUnit              = inventTableModule.pcsPrice();
        journalTrans.ProjUnitID             = inventTableModule.UnitId;
        journalTrans.CostAmount             = journalTrans.Qty * journalTrans.PriceUnit;
        journalTrans.CostPrice              = journalTrans.CostAmount;

        if (journalTrans)
        {
            journalTrans.update();
        }
        else
        {
            journalTrans.insert();
            newLineCreated = true;
        }

        if (newLineCreated)
        {
            update_recordset journalTableUpd
            setting NumOfLines = journalTransSelect.RecId + 1
            where journalTableUpd.JournalId == journalTable.JournalId;
        }

        if (this.postJournal())
        {
            journalTable.reread();

            //Posting the journal
            jourPost = InventJournalCheckPost::newJournalCheckPost(JournalCheckPostType::Post, journalTable);
            jourPost.parmAutoBlock(true);
            jourPost.run();
        }

        return journalTrans.RecId;
    }

</Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source>
    public boolean validateWrite()
    {
        boolean ret;
    
        ret = super();

        if (ret)
        {
            WPPWorkOrderLine                workOrderLine;
            WPPWorkOrderStatusRegistration  workOrderStatusRegistration;
            WPPWorkOrderStatusGroup         workOrderStatusGroup;
            WPPWorkOrderTaskTable           workOrderTaskTable;

            workOrderLine = WPPWorkOrderLine::findTaskId(this.WorkOrderId, this.WorkOrderTaskId);

            if (!workOrderLine)
            {
                throw error(strFmt("@DNR:DataEntityWONotFound", this.WorkOrderId, this.WorkOrderTaskId)); //Work order line with work order id %1 and task id %2 not found
            }

            select firstOnly workOrderStatusRegistration
            where workOrderStatusRegistration.Status == workOrderLine.Status
                exists join workOrderStatusGroup
                where workOrderStatusGroup.WorkOrderStatusGroupId == workOrderStatusRegistration.WorkOrderStatusGroupId
                    join TableId from workOrderTaskTable
                    where workOrderTaskTable.WorkOrderStatusGroupId == workOrderStatusGroup.WorkOrderStatusGroupId
                    &amp;&amp;    workOrderTaskTable.TaskId                 == workOrderLine.TaskId;

            WPPWorkOrderTableInteractionHelper workOrderTableInteractionHelper = WPPWorkOrderTableInteractionHelper::construct();
            workOrderTableInteractionHelper.initLineActions(workOrderLine, workOrderStatusRegistration);
            ret = workOrderTableInteractionHelper.parmButtonJournalsEnabled();

            if (!ret)
            {
                throw error(strFmt("@DNR:DataEntityItemJourNotAllowed", this.WorkOrderId, this.WorkOrderTaskId)); //Item journal posting is not allowed on work order id %1 and task id %2
            }
        }

        return ret;
    }

</Source>
			</Method>
			<Method>
				<Name>aosValidateInsert</Name>
				<Source>
    public boolean aosValidateInsert()
    {
        //Always returing true as we are validating values by code here
        return true;
    }

</Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>DNRDeletedObjects_DynaRentDataManagement</ConfigurationKey><DeveloperDocumentation>PowerApps: Exports/imports item registration records for a work order line</DeveloperDocumentation>
	<Label>@DNR10190</Label>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>DNRWorkOrderItemRegistrationStaging</DataManagementStagingTable>
	<EntityCategory>Document</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>DNRWorkOrderLineItemRegistrations</PublicCollectionName>
	<PublicEntityName>DNRWorkOrderLineItemRegistration</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>ProjId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>ProjId</DataField>
			<DataSource>WPPWorkOrderLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>WorkOrderTaskId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>TaskId</DataField>
			<DataSource>WPPWorkOrderLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>WorkOrderId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>WorkOrderId</DataField>
			<DataSource>WPPWorkOrderLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>LineProperty</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>ProjLinePropertyId</DataField>
			<DataSource>InventJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>PostJournal</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>Posted</DataField>
			<DataSource>InventJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>ItemId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>ItemId</DataField>
			<DataSource>InventJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>Qty</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>Qty</DataField>
			<DataSource>InventJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>InventSiteId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>InventSiteId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>InventLocationId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>InventLocationId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>inventSerialId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>inventSerialId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>ProjCategoryId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>ProjCategoryId</DataField>
			<DataSource>InventJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>JournalId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>JournalId</DataField>
			<DataSource>InventJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>PostedDateTime</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>PostedDateTime</DataField>
			<DataSource>InventJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>ProjUnitID</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>ProjUnitID</DataField>
			<DataSource>InventJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>LineNum</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>LineNum</DataField>
			<DataSource>InventJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>TransDate</Name>
			<Mandatory>No</Mandatory>
			<DataField>TransDate</DataField>
			<DataSource>InventJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField i:type="AxDataEntityViewMappedField">
			<Name>WorkOrderLineNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>LineNumber</DataField>
			<DataSource>WPPWorkOrderLine</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>WorkOrderId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>WorkOrderTaskId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>WorkOrderLineNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProjId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>JournalId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>LineNum</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ItemId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>Qty</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source>
[Query]
public class Metadata extends QueryRun
{
}
</Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>WPPWorkOrderLine</Name>
				<DynamicFields>Yes</DynamicFields>
				<IsReadOnly>Yes</IsReadOnly>
				<Table>WPPWorkOrderLine</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventJournalTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>InventJournalTable</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>InventJournalTrans</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>InventJournalTrans</Table>
								<DataSources>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>InventDim</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>InventDim</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<Field>InventDimId</Field>
												<JoinDataSource>InventJournalTrans</JoinDataSource>
												<RelatedField>inventDimId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
								</DataSources>
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>JournalId</Field>
										<JoinDataSource>InventJournalTable</JoinDataSource>
										<RelatedField>JournalId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>JournalNameId</Name>
								<Field>JournalNameId</Field>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<FetchMode>OneToN</FetchMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>ProjId</Field>
								<JoinDataSource>WPPWorkOrderLine</JoinDataSource>
								<RelatedField>WPPProjId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>