<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRRentalQuotationHeaderEntityEntity_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(tableStr(DNRRentalQuotationHeaderEntity))]
final class DNRRentalQuotationHeaderEntityEntity_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initializeEntityDataSource</Name>
				<Source><![CDATA[
    public void initializeEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(DNRRentalQuotationHeaderEntity, SalesQuotationTable):
                // Explicitly inittializing Quotation Type to set the value into datasource field
                // as while initvalue() call QuotationType field getting read from datasource buffer
                //based on QuotationType type() method should create obj of SalesQuotationTableType_Rental or ProjRental
                SalesQuotationTable quotationTable = _dataSourceCtx.getBuffer();
                quotationTable.QuotationType = this.DNRQuotationType ? this.DNRQuotationType : QuotationType::RORRental;
                _dataSourceCtx.setBuffer(quotationTable);
        }
        next initializeEntityDataSource(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCTQuery</Name>
				<Source><![CDATA[
    public static Query defaultCTQuery()
    {
        Query query = next defaultCTQuery();

        QueryBuildDataSource salesQuotationTableDS = query.dataSourceTable(tableNum(SalesQuotationTable));

        var RORRentalDateTimesDS = salesQuotationTableDS.addDataSource(tableNum(RORRentalDateTimes));
        RORRentalDateTimesDS.joinMode(JoinMode::OuterJoin);
        RORRentalDateTimesDS.addLink(fieldNum(SalesQuotationTable, TableId), fieldNum(RORRentalDateTimes, TableId));
        RORRentalDateTimesDS.addLink(fieldNum(SalesQuotationTable, RecId), fieldNum(RORRentalDateTimes, RefRecId));

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret = next insertEntityDataSource(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(DNRRentalQuotationHeaderEntity, SalesQuotationTable):
                //The RORRentalDateTimes record is created automatically when the source record is inserted during runtime hence the data entity framework will not be able to find the datasource record for RORRentalDateTimes
                // to fix this, the RORRentalDateTimes record needs to be found and populated to the data entity's datasource by code
                DataEntityDataSourceRuntimeContext rdtDSContext = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(DNRRentalQuotationHeaderEntity, DNRRentalDateTimes));

                if (rdtDSContext)
                {
                    SalesQuotationTable quotationTableBuffer = SalesQuotationTable::find(this.SalesQuotationNumber);
                    RORRentalDateTimes rdtQuotationTable = RORRentalDateTimes::findReference(quotationTableBuffer.TableId, quotationTableBuffer.RecId);

                    rdtDSContext.setBuffer(rdtQuotationTable);
                    rdtDSContext.setDatabaseOperation(DataEntityDatabaseOperation::None);
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>