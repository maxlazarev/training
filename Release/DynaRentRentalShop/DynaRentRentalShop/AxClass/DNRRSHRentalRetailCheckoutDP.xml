<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRRSHRentalRetailCheckoutDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
[SRSReportParameterAttribute(classstr(DNRRSHRentalRetailCheckoutContract))]
public class DNRRSHRentalRetailCheckoutDP extends SRSReportDataProviderBase
{
    RORRSHShopCardID              shopCardId;
    DNRRSHTmpRentalRetailCheckout rentalRetailCheckout;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getRentalRetailCheckout</Name>
				<Source><![CDATA[
    [SRSReportDataSetAttribute('DNRRSHTmpRentalRetailCheckout')]
    public DNRRSHTmpRentalRetailCheckout getRentalRetailCheckout()
    {
        select * from rentalRetailCheckout;
        return rentalRetailCheckout;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillRetailCheckOutTempTable</Name>
				<Source><![CDATA[
    private void fillRetailCheckOutTempTable()
    {
        RorRshShopCardTable shopCardTable = RorRshShopCardTable::find(shopCardId);
        RORParameters       parameters = RORParameters::find();
        CustTable           custTable  = shopCardTable.custTable();

        rentalRetailCheckout.ShopCardId  = shopCardId;
        rentalRetailCheckout.CustAccount = shopCardTable.CustAccount;
        rentalRetailCheckout.CustName    = custTable.name();
        rentalRetailCheckout.CustAddress = custTable.address();
        rentalRetailCheckout.FromDate    = shopCardTable.FromDate;
        rentalRetailCheckout.ToDate      = shopCardTable.ToDate;
        rentalRetailCheckout.LocationId  = shopCardTable.LocationId;
        rentalRetailCheckout.SiteId      = shopCardTable.SiteId;
        rentalRetailCheckout.InvoiceProfileId = parameters.DNRRSHDefaultInvoiceProfileId;
        rentalRetailCheckout.RateCode         = UnitOfMeasure::find(parameters.DNRRSHDefaultUnitForPrice).Symbol;
        rentalRetailCheckout.CalendarId       = parameters.DNRRSHDefaultRentalCalendar;

        RorRshShopTrans shopTrans;

        while select shopTrans 
        where shopTrans.ShopCardId == shopCardId
        &&    shopTrans.TransType  == RorRshShopTransType::Delivery
        {
            rentalRetailCheckout.ItemId = shopTrans.ItemId;
            rentalRetailCheckout.TradeType = shopTrans.TradeType;
            rentalRetailCheckout.ItemName = EcoResProduct::find(InventTable::find(shopTrans.ItemId).Product).productName();
            rentalRetailCheckout.Qty = shopTrans.Qty;
            rentalRetailCheckout.InventSerialId = shopTrans.inventDim().inventSerialId;
            rentalRetailCheckout.SalesPrice = shopTrans.SalesPrice;
            rentalRetailCheckout.SalesUnit = shopTrans.SalesUnit;
            rentalRetailCheckout.LinePercent = shopTrans.LinePercent;
            rentalRetailCheckout.LineAmount = shopTrans.LineAmount;
            rentalRetailCheckout.insert();
        }
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    public void processReport()
    {
        DNRRSHRentalRetailCheckoutContract rentalRetailContract = this.parmDataContract();

        shopCardId = rentalRetailContract.parmShopCardId();
        this.fillRetailCheckOutTempTable();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>