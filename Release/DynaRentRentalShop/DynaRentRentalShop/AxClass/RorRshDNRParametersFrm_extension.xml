<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RorRshDNRParametersFrm_extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Extension of DNRParameters form
/// </summary>
[ExtensionOf(formStr(DNRParameters))]
public final class RorRshDNRParametersFrm_extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>numberSeqPreInit</Name>
				<Source><![CDATA[
    //Chain-of-command wrapper methods ..
    public void numberSeqPreInit()
    {
        NumberSequenceDatatype numberSequenceDatatype = NumberSequenceDatatype::findByDatatypeId(extendedTypeNum(RorRshShopCardId));

        if (!numberSequenceDatatype)
        {
            NumberSeqModuleRORRentalOrders numberSeqModuleRORRentalOrders = new NumberSeqModuleRORRentalOrders();
            numberSeqModuleRORRentalOrders.load();
        }

        next numberSeqPreInit();
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNRRSHEvent_RORParametersDS_OnInitialized</Name>
				<Source><![CDATA[
    // Event handler methods ..

    [FormDataSourceEventHandler(formDataSourceStr(DNRParameters, RORParameters), FormDataSourceEventType::Initialized),
        SuppressBPWarning("BPParameterNotUsed", "Event parameter")]
    public static void DNRRSHEvent_RORParametersDS_OnInitialized(FormDataSource _sender, FormDataSourceEventArgs _e)
    {
        var     overRides = _sender.formRun();
        
        _sender.object(fieldNum(RORParameters, DNRRSHDefaultUnitForPrice)).registerOverrideMethod(methodStr(FormDataObject, lookupReference), methodStr(RorRshDNRParametersFrm_extension, DNRRSHDefaultUnitForPriceLookup), overrides);
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNRRSHDefaultUnitForPriceLookup</Name>
				<Source><![CDATA[
    //Extensoin method ..
    /// <summary>
    ///  Lookup method for Default rate code
    /// </summary>
    /// <param name = "_callingControl"> Form string control</param>
    /// <returns>'Unit of measure' table buffer</returns>
    public Common DNRRSHDefaultUnitForPriceLookup(FormReferenceControl _callingControl)
    {
        return UnitOfMeasureLookup::lookupReferenceForUnitOfMeasureClass(_callingControl, UnitOfMeasureClass::Time);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>