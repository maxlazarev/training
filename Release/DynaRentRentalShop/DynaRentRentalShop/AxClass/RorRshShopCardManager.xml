<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RorRshShopCardManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
class RorRshShopCardManager
{
    RorRshShopCardTable callerRentalShopCardTable;
    FormDataSource callerFDS;
    NoYesId setCardActive;
    RorRshShopCardAction action;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setCaller</Name>
				<Source><![CDATA[
    public void setCaller(Common _callerRecord)
    {
        callerRentalShopCardTable = _callerRecord as RorRshShopCardTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAction</Name>
				<Source><![CDATA[
    public void setAction(RorRshShopCardAction _action)
    {
        action = _action;
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshCaller</Name>
				<Source><![CDATA[
    private void refreshCaller()
    {
        callerFDS.research(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        switch (action)
        {
            case RorRshShopCardAction::ActivateCard :
                this.runDeActivateMultipleRecords(NoYes::Yes);
                break;

            case RorRshShopCardAction::DeactivateCard :
                this.runDeActivateMultipleRecords(NoYes::No);
                break;
        }

        this.refreshCaller();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDeActivateMultipleRecords</Name>
				<Source><![CDATA[
    private boolean validateDeActivateMultipleRecords()
    {
        boolean ret = true;
        callerFDS = FormDataUtil::getFormDataSource(callerRentalShopCardTable);    
        RorRshShopCardTable rentalShopCardTableLocal;

        MultiSelectionHelper helper = MultiSelectionHelper::construct();    
        helper.parmDatasource(callerFDS);

        rentalShopCardTableLocal = helper.getFirst();
    
        while (rentalShopCardTableLocal.RecId != 0)
        {
            if (setCardActive == rentalShopCardTableLocal.Active)
            {                
                ret = checkFailed(strFmt("@DNR:RentalShopCardActivateValid", rentalShopCardTableLocal.ShopCardId, setCardActive));
                break;
            }
            rentalShopCardTableLocal = helper.getNext();
        }
        
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runDeActivateMultipleRecords</Name>
				<Source><![CDATA[
    public void runDeActivateMultipleRecords(NoYesId _setCardActive)
    {
        setCardActive = _setCardActive;
        callerFDS = FormDataUtil::getFormDataSource(callerRentalShopCardTable);
    
        if (this.validateDeActivateMultipleRecords())
        {
            RorRshShopCardTable rentalShopCardTableLocal;
            
            MultiSelectionHelper helper = MultiSelectionHelper::construct();
            helper.parmDatasource(callerFDS);
    
            rentalShopCardTableLocal = helper.getFirst();

            while (rentalShopCardTableLocal.RecId != 0)
            {
                this.runDeActivateRentalShopCard(rentalShopCardTableLocal);
                rentalShopCardTableLocal = helper.getNext();
            }            
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>runDeActivateRentalShopCard</Name>
				<Source><![CDATA[
    private void runDeActivateRentalShopCard(RorRshShopCardTable _rentalShopCardTable)
    {
        if (_rentalShopCardTable)
        {
            ttsbegin;
            _rentalShopCardTable.selectForUpdate(true);
            _rentalShopCardTable.Active = setCardActive;
            _rentalShopCardTable.update();
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        if (!_args || _args.dataset() != tableNum(RorRshShopCardTable) || !_args.record())
        {
            throw error(strFmt("@MCR27651", classStr(RorRshShopCardManager), tablePName(RorRshShopCardTable)));
        }
    
        RorRshShopCardManager rentalShopCardManager = new RorRshShopCardManager();
        rentalShopCardManager.setCaller(_args.record());   
 
        if (_args.parmEnumType() == enumNum(RorRshShopCardAction))
        {
            rentalShopCardManager.setAction(_args.parmEnum());
        }
        rentalShopCardManager.run();
        
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>