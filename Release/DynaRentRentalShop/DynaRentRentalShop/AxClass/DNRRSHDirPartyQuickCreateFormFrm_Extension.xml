<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRRSHDirPartyQuickCreateFormFrm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Extension class for <c>DirPartyQuickCreateForm</c> form
/// </summary>
[ExtensionOf(formStr(DirPartyQuickCreateForm))]
public final class DNRRSHDirPartyQuickCreateFormFrm_Extension
{
    private DirPartyBaseType dirPartyType;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    //CoCWrapper ..
    public void init()
    {
        Args formArgs = this.args();
        FormDataObject  fieldIdTypeObj;
        FormDataObject  fieldIdNumObj;

        next init();

        if (DirPartyEntity_ds.Table() == tableNum(CustTable))
        {
            fieldIdTypeObj = DirPartyEntity_ds.object(fieldNum(CustTable, DNRRSHIdType));
            fieldIdNumObj = DirPartyEntity_ds.object(fieldNum(CustTable, DNRRSHIdNo));

            boolean calledForRentalShop = formArgs && (formArgs.menuItemName() == menuItemDisplayStr(DNRRSHCustomerquickCreate));
        
            fieldIdTypeObj.mandatory(calledForRentalShop);
            fieldIdNumObj.mandatory(calledForRentalShop);
            fieldIdTypeObj.visible(calledForRentalShop);
            fieldIdNumObj.mandatory(calledForRentalShop);
            fieldIdTypeObj.registerOverrideMethod(methodStr(FormDataObject, validate), methodStr(DNRRSHDirPartyQuickCreateFormFrm_Extension, DNRRSHValidateIdType), this);
            fieldIdTypeObj.registerOverrideMethod(methodStr(FormDataObject, lookup), methodStr(DNRRSHDirPartyQuickCreateFormFrm_Extension, DNRRSHIdTypeLookUp), this);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    /// <summary>
    /// CloseOk form method
    /// </summary>
    public void closeOk()
    {
        FormRun        formRun = this.args().caller();
        FormDataSource formDS = formRun.dataSource();

        next closeOk();
        
        if(formDS && formDS.name() == formDataSourceStr(DNRRSHCustTable, CustTableView))
        {
            formDS.research(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNRRSHGetInventLocation</Name>
				<Source><![CDATA[
    // Extension methods
    public InventLocationId DNRRSHGetInventLocation()
    {
        InventLocationId            locationid;
        FormRun                     formRun = this.args().caller();

        if(formHasMethod(formRun, identifierStr(getInventLocation)))
        {
            locationid = formRun.getInventLocation();
        }
        return locationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNRRSHValidateIdType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validate Id type entered
    /// </summary>
    /// <param name = "_field">Data source field</param>
    /// <returns>boolean</returns>
    private boolean DNRRSHValidateIdType(FormDataObject _field)
    {
        boolean          ret = _field.validate();
        DNRRSHCustIdType idType = _field.getValue();

        DirPartyBaseType partyBaseType = any2Enum(typeComboBox.selection());

        if(ret && idType && DirPartyEntity_ds.table() == tableNum(CustTable))
        {
            DNRRSHCustomerIdType customerIdType;
            DirpartyBaseType   baseType = partyTypeComboBox.selection();

            select firstonly RecId from customerIdType
            where customerIdType.IdType == idType
            &&    customerIdType.PartyType == partyBaseType;

            if (!customerIdType.RecId)
            {
                ret = checkFailed(strFmt("@DNR6089", idType, fieldId2PName(tableNum(DNRRSHCustomerIdType), fieldNum(DNRRSHCustomerIdType, IdType)), tableId2PName(tableNum(DNRRSHCustomerIdType))));
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNRRSHIdTypeLookUp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Lookup method for IdType
    /// </summary>
    /// <param name = "_partyType">Form control</param>
    private void DNRRSHIdTypeLookUp(FormStringControl _partyType)
    {
        DNRRSHCustomerIdType::lookUpPartyType(_partyType, partyTypeComboBox.valueStr());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>