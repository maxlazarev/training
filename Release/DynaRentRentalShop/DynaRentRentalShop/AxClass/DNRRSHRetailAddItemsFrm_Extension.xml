<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRRSHRetailAddItemsFrm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Form extension
/// </summary>
[ExtensionOf(formStr(RetailAddItems))]
public final class DNRRSHRetailAddItemsFrm_Extension
{
    private boolean addProductForRentalShop;
    private DNRRSHRentalShopManager rentalShopManger;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    // CoC methods ..
    /// <summary>
    /// Form 'init' method
    /// </summary>
    public void init()
    {
        addProductForRentalShop = this.DNRRSHCalledFromRentalShop();

        if(addProductForRentalShop)
        {
            rentalShopManger = new DNRRSHRentalShopManager();
            rentalShopManger = this.args().parmObject();
        }
        
        next init();

        TmpInventTable_ds.object(fieldNum(TmpRetailProductsToAdd, DNRRSHBasePrice)).visible(addProductForRentalShop);
        TmpInventTable_ds.object(fieldNum(TmpRetailProductsToAdd, DNRRSHAvailPhysicalQty)).visible(addProductForRentalShop);
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertIntoTmpProductsToAdd</Name>
				<Source><![CDATA[
    /// <summary>
    /// COC on 'insertIntoTmpProductsToAdd' method
    /// </summary>
    /// <param name = "_productRecId">productRecId</param>
    /// <param name = "_variantId">variantId</param>
    /// <param name = "_quantity">quantity</param>
    public void insertIntoTmpProductsToAdd(RefRecId _productRecId, RefRecId _variantId, Qty _quantity)
    {
        if(addProductForRentalShop)
        {
            DNRRSHRetailAddProductsDisposeContext conext = new DNRRSHRetailAddProductsDisposeContext();
            InventLocationId inventLocationId = rentalShopManger.getRentalShopInventLocation();
        
            if (conext && inventLocationId)
            {
                conext.parmShowPriceAndAvailability(addProductForRentalShop);
                conext.parmInventLocationId(inventLocationId);
            }
        }
        
        next insertIntoTmpProductsToAdd(_productRecId, _variantId, _quantity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    /// <summary>
    /// CloseOk form method
    /// </summary>
    public void closeOk()
    {
        next closeOk();
                
        if (rentalShopManger)
        {
            rentalShopManger.parmTmpInventTable(TmpInventTable_ds.cursor());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNRRSHCalledFromRentalShop</Name>
				<Source><![CDATA[
    //Form extension methods
    private boolean DNRRSHCalledFromRentalShop()
    {
        return this.args() &&
                 this.args().parmObject() &&
                    classIdGet(this.args().parmObject()) == classNum(DNRRSHRentalShopManager);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>