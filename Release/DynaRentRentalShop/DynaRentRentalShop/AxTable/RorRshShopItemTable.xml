<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RorRshShopItemTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RorRshShopItemTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkItemRelation</Name>
				<Source><![CDATA[
    public boolean checkItemRelation()
    {
        boolean  ok = true;

        switch (this.ItemCode)
        {
            case TableGroupAll::Table :   
                if (!InventTable::exist(this.ItemRelation))
                {
                    ok = checkFailed("@SYS17075");
                }
                break;

            case TableGroupAll::GroupId :   
                if (!InventItemGroup::exist(this.ItemRelation))
                {
                    ok = checkFailed("@SYS17075");
                }
                break;

            case TableGroupAll::All :   
                if (this.ItemRelation)
                {
                    ok = checkFailed("@SYS17075");
                }
                break;

            default :
                ok = true;
                break;
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkAccountRelation</Name>
				<Source><![CDATA[
    boolean  checkAccountRelation()
    {
        boolean  ok = true;

        switch (this.AccountCode)
        {
            case TableGroupAll::Table :   
                if (!RorRshShopCardTable::exist(this.AccountRelation))
                {
                    ok = checkFailed("@SYS17074");
                }
                break;

            case TableGroupAll::GroupId :   
                if (!ProjTable::exist(this.AccountRelation))
                {
                    ok = checkFailed("@SYS17074");
                }
                break;

            case TableGroupAll::All :   
                if (this.AccountRelation)
                {
                    ok = checkFailed("@SYS17074");
                }
                break;
            default :
                ok = true;
                break;
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(fieldId fieldId)
    {
        boolean  ok = super(fieldId);

        switch (fieldId)
        {
            case(fieldNum(RorRshShopItemTable, ItemRelation)) :
                ok = this.checkItemRelation() && ok;
                break;
            case(fieldNum(RorRshShopItemTable, AccountRelation)) :
                ok = this.checkAccountRelation() && ok;
                break;   
            
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(fieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(RorRshShopItemTable, ItemCode):
                this.itemCodeModified();
                break;

            case fieldNum(RorRshShopItemTable, AccountCode):
                this.accountCodeModified();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountCodeModified</Name>
				<Source><![CDATA[
    protected void accountCodeModified()
    {
        if (this.AccountCode != this.orig().AccountCode)
        {
            this.AccountRelation = '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemCodeModified</Name>
				<Source><![CDATA[
    protected void itemCodeModified()
    {
        if (this.ItemCode != this.orig().ItemCode)
        {
            this.ItemRelation = '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findItemIdCard</Name>
				<Source><![CDATA[
    public static RorRshShopItemTable findItemIdCard(ItemId _itemId, RorRshShopCardTable _rentalShopCard, RORSalesRentalBoth _salesRentalBoth, boolean _forupdate = false)
    {
        RorRshShopItemTable rentalShopItemTable;
        ItemGroupId itemGroupId = InventItemGroupItem::findByItemIdLegalEntity(_itemId, _rentalShopCard.DataAreaId).ItemGroupId;

        rentalShopItemTable.selectForUpdate(_forupdate);

        select firstonly rentalShopItemTable
        order by rentalShopItemTable.ItemCode asc, rentalShopItemTable.AccountCode asc // item takes precedence
        where ((rentalShopItemTable.ItemCode == TableGroupAll::Table   && rentalShopItemTable.ItemRelation == _itemId) ||
               (rentalShopItemTable.ItemCode == TableGroupAll::GroupId && rentalShopItemTable.ItemRelation == itemGroupId) ||
               (rentalShopItemTable.ItemCode == TableGroupAll::All))
        &&  ((rentalShopItemTable.AccountCode == TableGroupAll::Table   && rentalShopItemTable.AccountRelation == _rentalShopCard.ShopCardId) ||
            (rentalShopItemTable.AccountCode == TableGroupAll::GroupId && rentalShopItemTable.AccountRelation == _rentalShopCard.ProjId) ||
            (rentalShopItemTable.AccountCode == TableGroupAll::All))
        &&  (rentalShopItemTable.SalesRentalBoth == _salesRentalBoth ||
             rentalShopItemTable.SalesRentalBoth == RORSalesRentalBoth::Both);

        return rentalShopItemTable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>RorRshRentalShop</ConfigurationKey>
	<FormRef>RorRshShopItemTable</FormRef>
	<Label>@DNR:RentalShopItems</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Group</TableGroup>
	<TitleField1>ItemRelation</TitleField1>
	<TitleField2>AccountRelation</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<PrimaryIndex>ItemAccountIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesRentalBoth</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaximumQty</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AccountCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SuppItemAccountCode</ExtendedDataType>
			<EnumType>TableGroupAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountRelation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SuppItemAccountRelation</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ItemCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SuppItemItemCode</ExtendedDataType>
			<EnumType>TableGroupAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemRelation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SuppItemItemRelation</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SalesRentalBoth</Name>
			<EnumType>RORSalesRentalBoth</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MaximumQty</Name>
			<ExtendedDataType>RAGMaxQty</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ItemAccountIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ItemCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AccountCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AccountRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SalesRentalBoth</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ItemCode</Name>
					<Field>ItemCode</Field>
					<ValueStr>TableGroupAll::Table</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemRelation</Name>
					<Field>ItemRelation</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventItemGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>InventItemGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ItemCode</Name>
					<Field>ItemCode</Field>
					<ValueStr>TableGroupAll::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemRelation</Name>
					<Field>ItemRelation</Field>
					<RelatedField>ItemGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RentalShopCard</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>RorRshShopCardTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>TableGroupAll::Table</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>ShopCardId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProjTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>ProjTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>TableGroupAll::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>ProjId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>