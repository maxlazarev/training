<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RorRshShopTransInProcessing</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RorRshShopTransInProcessing extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(RefRecId _rentalShopTransRecId, StartDateTime _processingDateTime, UserId _createdBy = curUserId())
    {
        return (_rentalShopTransRecId && _processingDateTime && _createdBy &&
            (select firstonly RecId from RorRshShopTransInProcessing
             where RorRshShopTransInProcessing.ShopTransRecId == _rentalShopTransRecId
             &&    RorRshShopTransInProcessing.ProcessingDateTime == _processingDateTime
             &&    RorRshShopTransInProcessing.CreatedBy == _createdBy).RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static RorRshShopTransInProcessing find(RefRecId _rentalShopTransRecId,
        StartDateTime _processingDateTime, 
        UserId _createdBy = curUserId(),
        boolean _forUpdate = false)
    {
        RorRshShopTransInProcessing shopTransInProcessing;
    
        if (_rentalShopTransRecId && _processingDateTime && _createdBy)
        {
            shopTransInProcessing.selectForUpdate(_forUpdate);
    
            select firstonly shopTransInProcessing
            where shopTransInProcessing.ShopTransRecId == _rentalShopTransRecId
            &&    shopTransInProcessing.ProcessingDateTime == _processingDateTime
            &&    shopTransInProcessing.CreatedBy == _createdBy;
        }
    
        return shopTransInProcessing;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteProcessingReference</Name>
				<Source><![CDATA[
    public static void deleteProcessingReference(StartDateTime _processingDateTime, UserId _createdBy = curUserId(), RefRecId _rentalShopTransRecId = 0)
    {
        RorRshShopTransInProcessing shopTransInProcessing;
        RorRshShopTransLog shopTransLog;
        TableId rentalShopTransTableId = tableNum(RorRshShopTrans);

        delete_from shopTransInProcessing
        where (_rentalShopTransRecId == 0 || shopTransInProcessing.ShopTransRecId == _rentalShopTransRecId)
        &&    shopTransInProcessing.ProcessingDateTime == _processingDateTime
        &&    shopTransInProcessing.CreatedBy == _createdBy
            notexists join shopTransLog
            where shopTransLog.RefTableId == rentalShopTransTableId
            &&    shopTransLog.RefRecId == _rentalShopTransRecId
            &&    shopTransLog.LogType == RorRshShopLogType::PostingError;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createProcessingReference</Name>
				<Source><![CDATA[
    public static void createProcessingReference(boolean _processDelivery, boolean _processReturn, StartDateTime _processingDateTime, UserId _createdBy = curUserId())
    {
        RorRshShopTransInProcessing shopTransInProcessing;
        RorRshShopTransInProcessing shopTransInProcessingOther;
        RorRshShopTrans rentalShopTrans;

        insert_recordset shopTransInProcessing (ProcessingDateTime, ShopTransRecId) 
            select _processingDateTime, RecId from rentalShopTrans
            where rentalShopTrans.IsProcessed == NoYes::No
            &&   ((_processDelivery && rentalShopTrans.TransType == RorRshShopTransType::Delivery) ||
                  (_processReturn && rentalShopTrans.TransType == RorRshShopTransType::Return))
                notexists join shopTransInProcessingOther
                where shopTransInProcessingOther.ShopTransRecId == rentalShopTrans.RecId;        
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>RorRshRentalShop</ConfigurationKey>
	<Label>@SYS40441</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Reference</TableGroup>
	<TitleField1>ProcessingDateTime</TitleField1>
	<TitleField2>ShopTransRecId</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<PrimaryIndex>ShopTransProcessingIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ShopTransRecId</Name>
			<HelpText>@DNR:RentalShopTrans</HelpText>
			<Label>@SYS22569</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>ProcessingDateTime</Name>
			<ExtendedDataType>StartDateTime</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ShopTransProcessingIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ShopTransRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ProcessingDateTime</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CreatedBy</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ShopTrans</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>RorRshShopTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ShopTransRecId</Name>
					<Field>ShopTransRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>