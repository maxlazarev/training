<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRCEFINRentalTotalUpdate_RentalQuoteClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(FINRentalTotalUpdate_RentalQuote))]
public final class DNRCEFINRentalTotalUpdate_RentalQuoteClass_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calculateTotalsForRentalQuotationHeader</Name>
				<Source><![CDATA[
    public container calculateTotalsForRentalQuotationHeader()
    {
        container ret = next calculateTotalsForRentalQuotationHeader();

        if (salesQuotationTable && isConfigurationkeyEnabled(configurationKeyNum(DNRCEIntegration)))
        {
            SalesQuotationLineCalculatedTotals quoteLineTotals;
            SalesQuotationLine                 quoteLine;

            select sum(TotalChargesAmount), sum(TotalDiscountAmount) from quoteLineTotals
            where quoteLineTotals.QuotationId   == salesQuotationTable.QuotationId;
               
            salesQuotationTable.selectForUpdate(true);
            salesQuotationTable.DNRCENetAmount   = quoteLineTotals.TotalChargesAmount;
            salesQuotationTable.DNRCEDiscAmt     = quoteLineTotals.TotalDiscountAmount;
            salesQuotationTable.DNRCEGrossAmount = quoteLineTotals.TotalChargesAmount + quoteLineTotals.TotalDiscountAmount;
        
            DiscPct discPct;

            if (quoteLineTotals.TotalDiscountAmount && quoteLineTotals.TotalChargesAmount)
            {
                discPct = quoteLineTotals.TotalDiscountAmount/(quoteLineTotals.TotalChargesAmount + quoteLineTotals.TotalDiscountAmount) * 100;
            }

            salesQuotationTable.DNRCEDiscPct = discPct;
            salesQuotationTable.update();
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>