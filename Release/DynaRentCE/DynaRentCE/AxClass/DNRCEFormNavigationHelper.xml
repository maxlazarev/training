<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRCEFormNavigationHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics.AX.Framework.Utilities;
using Microsoft.Dynamics.@Client.ServerForm.Contexts;

class DNRCEFormNavigationHelper
{
    MenuItemName    menuItemNameStr;
    String255       filterValue;
    DataAreaId      company;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    client static void main(Args _args)
    {
        URLUtility urlUtil = new URLUtility();

        DataAreaId cmp = urlUtil.getQueryParamValue(identifierStr(cmp));

        if (!cmp)
        {
            throw error(strfmt("@DNR:EmptyParameter", identifierStr(cmp)));
        }

        str miName = urlUtil.getQueryParamValue(identifierStr(MenuItemName));

        if (!miName)
        {
            throw error(strfmt("@DNR:EmptyParameter", identifierStr(MenuItemName)));
        }

        str value = urlUtil.getQueryParamValue(identifierStr(Value));

        if (!value)
        {
            throw error(strfmt("@DNR:EmptyParameter", identifierStr(Value)));
        }

        DNRCEFormNavigationHelper helper = new DNRCEFormNavigationHelper();
        helper.parmCompany(cmp);
        helper.parmMenuItemName(miName);
        helper.parmValue(value);
        helper.run();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMenuItemName</Name>
				<Source><![CDATA[
    public MenuItemName parmMenuItemName(MenuItemName _menuItemName = menuItemNameStr)
    {
        menuItemNameStr = _menuItemName;
        return menuItemNameStr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCompany</Name>
				<Source><![CDATA[
    public DataAreaId parmCompany(DataAreaId _company = company)
    {
        company = _company;
        return company;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmValue</Name>
				<Source><![CDATA[
    public String255 parmValue(String255 _value = filterValue)
    {
        filterValue = _value;
        return filterValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        MenuFunction    mf;

        mf = new MenuFunction(menuItemNameStr, MenuItemType::Display);

        if (!mf.object())
        {
            throw error (strFmt("@DNR:MenuItemNotDisplayType", menuItemNameStr));
        }

        Form form = new Form(mf.object());  
        str url = this.generateUrl(form);

        if (url)
        {
            this.navigate(url);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>navigate</Name>
				<Source><![CDATA[
    private void navigate(str _url)
    {
        Browser browser = new Browser();
        browser.navigate(_url, false, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateUrl</Name>
				<Source><![CDATA[
    private str generateUrl(Form _form)
    {
        str url;
 
        if (_form && _form.dataSource(1))
        {
            url = this.generateRecordUrlFromDataSource(_form.dataSource(1));
        }
        return url;
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateRecordUrlFromDataSource</Name>
				<Source><![CDATA[
    private str generateRecordUrlFromDataSource(FormBuildDataSource _formDataSource)
    {
        DataSourceName  dataSourceName  = _formDataSource.name();
        TableId   tableId   = _formDataSource.table();
        DictTable dictTable = new DictTable(tableId);
        DictIndex dictIndex = new DictIndex(tableId, dictTable.primaryIndex());
 
        int     fieldCount          = dictIndex.numberOfFields();
        Map     indexFieldValuesMap = new Map(Types::String, Types::String);
        FieldId primaryKeyFieldId;
 
        for (int fieldIndex = 1; fieldIndex <= fieldCount; fieldIndex++)
        {
            primaryKeyFieldId = dictIndex.field(fieldIndex);     
            indexFieldValuesMap.insert(fieldId2Name(tableId, primaryKeyFieldId), filterValue);
        }
 
        return this.generateRecordUrl(menuItemNameStr, dataSourceName, indexFieldValuesMap, company);
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateRecordUrl</Name>
				<Source><![CDATA[
    private str generateRecordUrl(str _menuItemName, DataSourceName _dataSourceName, Map _indexFieldValuesMap, DataAreaId _dataAreaId)
    {
        
        UrlHelper.UrlGenerator generator = new Microsoft.Dynamics.AX.Framework.Utilities.UrlHelper.UrlGenerator();
        System.Uri host = new System.Uri(UrlUtility::getUrl());
        generator.HostUrl = host.GetLeftPart(System.UriPartial::Authority);
        generator.Company = _dataAreaId;
        generator.MenuItemName = _menuItemName;
        generator.PageType = FormViewOption::Details;
        generator.Partition = getCurrentPartition();

        if (_dataSourceName && _indexFieldValuesMap)
        {
            MapEnumerator mapEnumerator = _indexFieldValuesMap.getEnumerator();
 
            var requestQueryParameterCollection = generator.RequestQueryParameterCollection;
 
            while (mapEnumerator.moveNext())
            {
                requestQueryParameterCollection.UpdateOrAddEntry(_dataSourceName, mapEnumerator.currentKey(), mapEnumerator.currentValue());
            }
        }

        return generator.GenerateFullUrl().AbsoluteUri;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>