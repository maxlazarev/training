<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRAppEmplJourTransPostService</Name>
	<SourceCode>
		<Declaration><![CDATA[
class DNRAppEmplJourTransPostService extends SysOperationServiceBase
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>process</Name>
				<Source><![CDATA[
    public void process(DNRAppEmplJourTransPostContract _transPostContract)
    {
        DNRAppEmplJourRegistrationType registrationType = _transPostContract.parmRegistrationType();
        Map processingRecIdsSetPerCompany = this.initProcessingRecIdsSetPerCompany(registrationType);

        DNRAppEmplJourTransPost workOrderLineEmplAppTransPost = DNRAppEmplJourTransPost::construct(processingRecIdsSetPerCompany);
        workOrderLineEmplAppTransPost.run();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initProcessingRecIdsSetPerCompany</Name>
				<Source><![CDATA[
    private Map initProcessingRecIdsSetPerCompany(DNRAppEmplJourRegistrationType _registrationType)
    {
        // Company -> {RecIds to process}
        Map processingRecIdsSetPerCompany = new Map(Types::String, Types::Class);

        DNRAppEmplJourTrans appWorkOrderJournalTrans;
        container statusesToProcess = this.getProcessingStatusesToProcess();

        while select appWorkOrderJournalTrans
        where appWorkOrderJournalTrans.TransactionProcessingStatus in statusesToProcess
        &&    (!_registrationType || appWorkOrderJournalTrans.RegistrationType == _registrationType)
        {
            Set processingRecIdsSet = processingRecIdsSetPerCompany.exists(appWorkOrderJournalTrans.ProcessingCompany) ?
                                      processingRecIdsSetPerCompany.lookup(appWorkOrderJournalTrans.ProcessingCompany) :
                                      new Set(Types::Int64);

            processingRecIdsSet.add(appWorkOrderJournalTrans.RecId);
            processingRecIdsSetPerCompany.insert(appWorkOrderJournalTrans.ProcessingCompany, processingRecIdsSet);
        }

        return processingRecIdsSetPerCompany;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProcessingStatusesToProcess</Name>
				<Source><![CDATA[
    protected container getProcessingStatusesToProcess()
    {
        return [DNRAppEmplJourTransactionProcessingStatus::New];
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>