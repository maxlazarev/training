<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRAppEmplClearLogTablesContract_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class contatining extensions for <c>DNRClearLogTablesContract</c> interface.
/// </summary>
[ExtensionOf(classStr(DNRClearLogTablesContract))]
final class DNRAppEmplClearLogTablesContract_Extension
{
    public DNRAppEmplJourRegistrationType registrationType;
    public boolean clearDNRAppEmplJourTrans;
    public boolean clearDNRAppEmplJourTransArchive;

    #define.CurrentVersion(1)
    #localmacro.CurrentList
        registrationType,
        clearDNRAppEmplJourTrans,
        clearDNRAppEmplJourTransArchive
    #endmacro
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmClearDNRAppEmplJourTrans</Name>
				<Source><![CDATA[
    [DataMemberAttribute,
    SysOperationLabelAttribute("@DNR:WorkOrderLineEmployeeAppRegistrations"),
    SysOperationHelpTextAttribute("@DNR:ClearDNRAppEmplJourTransTable"),
    SysOperationDisplayOrderAttribute('1'),
    SysOperationGroupMemberAttribute('MobileApp')]
    public boolean parmClearDNRAppEmplJourTrans(boolean _clearDNRAppEmplJourTrans = clearDNRAppEmplJourTrans)
    {
        clearDNRAppEmplJourTrans = _clearDNRAppEmplJourTrans;
        return clearDNRAppEmplJourTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmClearDNRAppEmplJourTransArchive</Name>
				<Source><![CDATA[
    public boolean parmClearDNRAppEmplJourTransArchive(boolean _clearDNRAppEmplJourTransArchive = clearDNRAppEmplJourTransArchive)
    {
        clearDNRAppEmplJourTransArchive = _clearDNRAppEmplJourTransArchive;
        return clearDNRAppEmplJourTransArchive;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRegistrationType</Name>
				<Source><![CDATA[
    [DataMemberAttribute(identifierStr(registrationType)),
    SysOperationLabelAttribute(literalstr("@SYS111540")),
    SysOperationHelpTextAttribute(literalstr("@DNR:JournalTransType")),
    SysOperationDisplayOrderAttribute('1'),
    SysOperationGroupMemberAttribute('MobileApp')]
    public DNRAppEmplJourRegistrationType parmRegistrationType(DNRAppEmplJourRegistrationType _registrationType = registrationType)
    {
        registrationType = _registrationType;
        return registrationType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        container valuePacked = next pack();

        return SysPackExtensions::appendExtension(valuePacked, classStr(DNRAppEmplClearLogTablesContract_Extension),
            this.salesFormLetterContractAppEmplPack());
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        boolean packedBase = next unpack(_packedClass);

        if (packedBase)
        {
            container conPackedBase = SysPackExtensions::findExtension(_packedClass, classStr(DNRAppEmplClearLogTablesContract_Extension));

            if (!this.salesFormLetterContractAppEmplUnpack(conPackedBase))
            {
                packedBase = false;
            }
        }

        return packedBase;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesFormLetterContractAppEmplPack</Name>
				<Source><![CDATA[
    private container salesFormLetterContractAppEmplPack()
    {
        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesFormLetterContractAppEmplUnpack</Name>
				<Source><![CDATA[
    private boolean salesFormLetterContractAppEmplUnpack(container _packedClass)
    {
        Integer version = RunBase::getVersion(_packedClass);

        switch (version)
        {
            case #CurrentVersion:
                [version, #CurrentList] = _packedClass;
                break;

            default:
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkParameterDays</Name>
				<Source><![CDATA[
    /// <summary>
    /// checks the parameters
    /// </summary>
    public boolean checkParameterDays()
    {
        if (next checkParameterDays()  == true || this.parmClearDNRAppEmplJourTrans())
        {
            return true;
        }
       
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkParameterDaysArchive</Name>
				<Source><![CDATA[
    /// <summary>
    /// checks the parameters archive
    /// </summary>
    public boolean checkParameterDaysArchive()
    {
        if (next checkParameterDaysArchive()  == true || this.parmClearDNRAppEmplJourTransArchive())
        {
            return true;
        }
       
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>