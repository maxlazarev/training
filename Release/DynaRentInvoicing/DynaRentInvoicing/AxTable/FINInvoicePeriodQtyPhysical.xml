<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINInvoicePeriodQtyPhysical</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class FINInvoicePeriodQtyPhysical extends common
{   
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    static FINInvoicePeriodQtyPhysical findRecId(RecId _recId, boolean _update = false)
    {
        FINInvoicePeriodQtyPhysical periodQtyPhysical;
        
        if (_recId)
        {
            if (_update)
            {
                periodQtyPhysical.selectForUpdate(_update);
            }
            
            select periodQtyPhysical
            where periodQtyPhysical.RecId == _recId;
        }
        
        return periodQtyPhysical;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInvoicePeriodHost</Name>
				<Source><![CDATA[
    public void initFromInvoicePeriodHost(INVInvoicePeriodHost _invoicePeriodHost)
    {
        this.RefTableId = _invoicePeriodHost.TableId;
        this.RefRecId = _invoicePeriodHost.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromRentalDateTimes</Name>
				<Source><![CDATA[
    public void initFromRentalDateTimes(RORRentalDateTimes _rentalDateTimes)
    {
        this.DeliveryDateTime = _rentalDateTimes.OnRentDateTime;
        this.ReturnDateTime = (DateTimeUtil::year(_rentalDateTimes.OffRentDateTime) < 1902 ? DateTimeUtil::maxValue() : _rentalDateTimes.OffRentDateTime);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryReturnDateTime</Name>
				<Source><![CDATA[
    [SuppressBPWarningAttribute("BPCheckSkipStatementValidation", "Cannot use skip method without altering functional behavior")]
    public void setDeliveryReturnDateTime(boolean _startDateTimeFlag, TransDateTime _startDateTime, boolean _endDateTimeFlag, TransDateTime _endDateTime)
    {
        FINInvoicePeriodQtyPhysical invPeriodQtyPhysicalUpdate;
        FINInvoicePeriodQtyFinancial invPeriodQtyFinancial;
            
        if (_startDateTimeFlag && _endDateTimeFlag)
        {
            update_recordset invPeriodQtyPhysicalUpdate
                setting DeliveryDateTime = _startDateTime,
                        ReturnDateTime = _endDateTime
                where invPeriodQtyPhysicalUpdate.RecId == this.RecId;

            update_recordset invPeriodQtyFinancial
                setting PeriodStartDateTime = _startDateTime,
                        PeriodEndDateTime = _endDateTime
                where invPeriodQtyFinancial.InvPeriodQtyPhysicalRecId == this.RecId;
        }
        else if (_startDateTimeFlag)
        {
            update_recordset invPeriodQtyPhysicalUpdate
                setting DeliveryDateTime = _startDateTime
                where invPeriodQtyPhysicalUpdate.RecId == this.RecId;

            update_recordset invPeriodQtyFinancial
                setting PeriodStartDateTime = _startDateTime
                where invPeriodQtyFinancial.InvPeriodQtyPhysicalRecId == this.RecId;
        }
        else if (_endDateTimeFlag)
        {
            update_recordset invPeriodQtyPhysicalUpdate
                setting ReturnDateTime = _endDateTime
                where invPeriodQtyPhysicalUpdate.RecId == this.RecId;

            update_recordset invPeriodQtyFinancial
                setting PeriodEndDateTime = _endDateTime
                where invPeriodQtyFinancial.InvPeriodQtyPhysicalRecId == this.RecId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteInvoicePeriodFromOrderRef</Name>
				<Source><![CDATA[
    public static void deleteInvoicePeriodFromOrderRef(RefTableId _refTableId, RefRecId _refRecId)
    {
        FINInvoicePeriodQtyPhysical invoicePeriodQtyPhysical;

        delete_from invoicePeriodQtyPhysical
        where invoicePeriodQtyPhysical.RefTableId == _refTableId
        &&    invoicePeriodQtyPhysical.RefRecId == _refRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOrderLine</Name>
				<Source><![CDATA[
    public RORRentalLine getOrderLine()
    {
        RORRentalLine ret;

        switch (this.RefTableId)
        {
            case tableNum(SalesLine) :
                SalesLine salesLine = SalesLine::findRecId(this.RefRecId);
                ret = salesLine;
                break;

            case tableNum(SalesQuotationLine) :
                SalesQuotationLine salesQuotationLine = SalesQuotationLine::findRecId(this.RefRecId);
                ret = salesQuotationLine;
                break;

            case tableNum(PurchLine) :
                PurchLine purchLine = PurchLine::findRecId(this.RefRecId);
                ret = purchLine;
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateInvoicePeriodMultiplier</Name>
				<Source><![CDATA[
    public static void updateInvoicePeriodMultiplier(RefTableId _refTableId, RefRecId _refRecId, NoYes _isPriceTierMultiplierCalculated)
    {
        FINInvoicePeriodQtyPhysical periodQtyPhysical;
        FINInvoicePeriodQtyFinancial periodQtyFinancial;

        update_recordset periodQtyPhysical
            setting PriceTierMultiplierCalculated = _isPriceTierMultiplierCalculated,
                    PriceTierMultiplier = 1
            where periodQtyPhysical.RefTableId == _refTableId
            &&    periodQtyPhysical.RefRecId == _refRecId
                exists join periodQtyFinancial
                where periodQtyFinancial.InvPeriodQtyPhysicalRecId == periodQtyPhysical.RecId
                &&   !periodQtyFinancial.InvoiceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret = super(_fieldIdToCheck);

        if (ret && _fieldIdToCheck == fieldNum(FINInvoicePeriodQtyPhysical, ForceUntilCalculationDateTime))
        {
            if (!this.QtyRented && this.ForceUntilCalculationDateTime)
            {
                ret = checkFailed("@DNR:ForceUntilCalculationDateTimeValidAfterDelivered");
            }

            if (ret
            &&  this.QtyRented
            &&  this.ForceUntilCalculationDateTime
            &&  (this.ForceUntilCalculationDateTime < this.DeliveryDateTime || (this.ReturnDateTime && this.ForceUntilCalculationDateTime > this.ReturnDateTime)))
            {
                ret = checkFailed("@DNR:SelectInsideRentalPeriod");
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@DNR:FINInvoicePeriodQtyPhysicalDevDoc</DeveloperDocumentation>
	<Label>@DNR6060</Label>
	<TableGroup>TransactionHeader</TableGroup>
	<TitleField1>DeliveryDateTime</TitleField1>
	<TitleField2>QtyRented</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS110757</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DeliveryDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReturnDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QtyRented</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceTierMultiplier</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ForceUntilCalculationDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>ReturnDateTime</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>INVPeriodEndDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>DeliveryDateTime</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>INVPeriodStartDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>QtyRented</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>INVRentQtyOnRent</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PriceTierMultiplier</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>INVRateMultiplierTier</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PriceTierMultiplierCalculated</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsReturned</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RefTableId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ParentRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>ForceUntilCalculationDateTime</Name>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>FINForceUntilCalculationDateTime</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>InvPeriodIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>RefTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RefRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DeliveryDateTime</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ReturnDateTime</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>IsReturned</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>QtyRented</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>SalesLine</Name>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>SalesLine</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesQuotationLine</Name>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>SalesQuotationLine</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PurchLine</Name>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>PurchLine</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>