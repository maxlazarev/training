<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINInvoicePeriodAmendment</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class FINInvoicePeriodAmendment extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getValue</Name>
				<Source><![CDATA[
    public anytype getValue()
    {
        anytype ret;

        switch (this.PriceComponent)
        {
            case FINInvoicePeriodPriceComponent::CalendarId,
                 FINInvoicePeriodPriceComponent::FullCredit,
                 FINInvoicePeriodPriceComponent::RentalModeId,
                 FINInvoicePeriodPriceComponent::InvoiceProfileId,
                 FINInvoicePeriodPriceComponent::RateCode :
                ret = this.StrValue;
                break;

            case FINInvoicePeriodPriceComponent::RentalPrice,
                 FINInvoicePeriodPriceComponent::RentalPriceNet,
                 FINInvoicePeriodPriceComponent::LinePercent,
                 FINInvoicePeriodPriceComponent::Insurance :
                ret = this.RealValue;
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setValue</Name>
				<Source><![CDATA[
    public void setValue(anytype _value)
    {
        switch (this.PriceComponent)
        {
            case FINInvoicePeriodPriceComponent::RentalPrice,
                 FINInvoicePeriodPriceComponent::RentalPriceNet,
                 FINInvoicePeriodPriceComponent::LinePercent,
                 FINInvoicePeriodPriceComponent::Insurance :
                this.RealValue = _value;
                break;

            case FINInvoicePeriodPriceComponent::RentalModeId :
                this.StrValue = _value;
                this.RealValue = INVRentalMode::find(_value).RateMultiplier;
                break;

            case FINInvoicePeriodPriceComponent::InvoiceProfileId,
                 FINInvoicePeriodPriceComponent::CalendarId,
                 FINInvoicePeriodPriceComponent::FullCredit :
                this.StrValue = _value;
                break;

            case FINInvoicePeriodPriceComponent::RateCode :
                this.StrValue = UnitOfMeasure::find(_value).Symbol;
                break;
        }       
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOldValue</Name>
				<Source><![CDATA[
    public void setOldValue(anytype _value)
    {
        switch (this.PriceComponent)
        {
            case FINInvoicePeriodPriceComponent::RentalPrice,
                 FINInvoicePeriodPriceComponent::RentalPriceNet,
                 FINInvoicePeriodPriceComponent::LinePercent,
                 FINInvoicePeriodPriceComponent::Insurance :
                this.OldRealValue = _value;
                break;

            case FINInvoicePeriodPriceComponent::RentalModeId :
                this.OldStrValue = _value;
                this.OldRealValue = INVRentalMode::find(_value).RateMultiplier;
                break;

            case FINInvoicePeriodPriceComponent::InvoiceProfileId,
                 FINInvoicePeriodPriceComponent::CalendarId,
                 FINInvoicePeriodPriceComponent::FullCredit :
                this.OldStrValue = _value;
                break;

            case FINInvoicePeriodPriceComponent::RateCode :
                this.OldStrValue = UnitOfMeasure::find(_value).Symbol;
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createAmendmentLog</Name>
				<Source><![CDATA[
    public void createAmendmentLog(AccessType _changeType,
        TransDateTime _fromDateTime = DateTimeUtil::minValue(),
        TransDateTime _toDateTime = DateTimeUtil::maxValue())
    {
        ROROrderAmendmentLog orderAmendmentLog = this.prepareAmendmentLog(_changeType, _fromDateTime, _toDateTime);
        
        if (orderAmendmentLog.LogTxtGenerated)
        {
            orderAmendmentLog.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createAmendmentLogFromDeletetionDialog</Name>
				<Source><![CDATA[
    public void createAmendmentLogFromDeletetionDialog(AccessType _changeType,
        DNRReasonCode _reasonCode,
        RORAmendmentReasonText _reasonText,
        TransDateTime _fromDateTime = DateTimeUtil::minValue(),
        TransDateTime _toDateTime = DateTimeUtil::maxValue())
    {
        ROROrderAmendmentLog orderAmendmentLog = this.prepareAmendmentLog(_changeType, _fromDateTime, _toDateTime);
        
        if (orderAmendmentLog.LogTxtGenerated)
        {
            orderAmendmentLog.DNRReasonCode = _reasonCode;
            orderAmendmentLog.DNRReasonType = DNRReasonType::FINDeleteAmendment;
            orderAmendmentLog.LogTxt = _reasonText;
            orderAmendmentLog.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createAmendmentLogFromCreditWizard</Name>
				<Source><![CDATA[
    public void createAmendmentLogFromCreditWizard(AccessType _changeType,
                                                   DNRReasonCode _reasonCode,
                                                   RORAmendmentReasonText _reasonText,
                                                   ContactPersonId _contactPersonId,
                                                   FreeText _logTxt = '',
                                                   TransDateTime _fromDateTime = DateTimeUtil::minValue(),
                                                   TransDateTime _toDateTime = DateTimeUtil::maxValue())
    {
        ROROrderAmendmentLog orderAmendmentLog = this.prepareAmendmentLog(_changeType, _fromDateTime, _toDateTime);
        
        if (_logTxt || orderAmendmentLog.LogTxtGenerated)
        {
            orderAmendmentLog.LogTxtGenerated = _logTxt ? _logTxt : orderAmendmentLog.LogTxtGenerated;
            orderAmendmentLog.DNRReasonCode = _reasonCode;
            orderAmendmentLog.LogTxt = _reasonText;
            orderAmendmentLog.ContactPersonId = _contactPersonId;
            orderAmendmentLog.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>prepareAmendmentLog</Name>
				<Source><![CDATA[
    private ROROrderAmendmentLog prepareAmendmentLog(AccessType _changeType,
        TransDateTime _fromDateTime = DateTimeUtil::minValue(),
        TransDateTime _toDateTime = DateTimeUtil::maxValue())
    {
        ROROrderAmendmentLog orderAmendmentLog;

        if (_changeType == AccessType::Edit)
        {
            ROROrderAmendmentLog orderAmendmentLogRedirect;
            FINInvoicePeriodAmendment periodAmendmentUpdated;

            update_recordset orderAmendmentLogRedirect
            setting FINPeriodAmendmentRefRecId = periodAmendmentUpdated.RecId
                join periodAmendmentUpdated
                where orderAmendmentLogRedirect.FINPeriodAmendmentRefRecId  == this.RecId
                   && periodAmendmentUpdated.ToDateTime                     == this.FromDateTime
                   && periodAmendmentUpdated.RefRecId                       == this.RefRecId
                   && periodAmendmentUpdated.RefTableId                     == this.RefTableId
                   && periodAmendmentUpdated.PriceComponent                 == this.PriceComponent;
        }

        orderAmendmentLog.initValue();
        orderAmendmentLog.RefTableId = this.RefTableId;
        orderAmendmentLog.RefRecId = this.RefRecId;
        orderAmendmentLog.DNRReasonType = DNRReasonType::Misc;
        orderAmendmentLog.AmendmentEventType = this.getAmendmentEventTypeFromComponent();
        orderAmendmentLog.StrValue = this.StrValue;
        orderAmendmentLog.OldStrValue = this.OldStrValue;
        orderAmendmentLog.RealValue = this.RealValue;
        orderAmendmentLog.OldRealValue = this.OldRealValue;

        LanguageId      languageId = CompanyInfo::languageId();
        str             changeTxt;
        str             strValue;
                
        if (this.StrValue && this.RealValue)
        {
            strValue = strFmt("@DNR:AmendmentLogValues", this.StrValue, this.RealValue);
        }
        else if (this.RealValue)
        {
            strValue = strFmt("@SYS54524", this.OldRealValue, this.RealValue);
        }
        else
        {
            strValue = strFmt("@SYS54524", this.OldStrValue, this.StrValue);
        }

        switch (_changeType)
        {
            case AccessType::Add :
                changeTxt = strFmt("@DNR:FormatAmendmentLogText", "@SYS11408", this.PriceComponent, strValue);
                orderAmendmentLog.AmendmentAction = DNRAmendmentAction::Created;
                break;

            case AccessType::Edit :
                changeTxt = strFmt("@DNR:FormatAmendmentLogText", "@SYS439", this.PriceComponent, strValue);
                orderAmendmentLog.AmendmentAction = DNRAmendmentAction::Updated;
                break;

            case AccessType::Delete :
                changeTxt = strFmt("@DNR:FormatAmendmentLogText", "@SYS4197", this.PriceComponent, strValue);
                orderAmendmentLog.AmendmentAction = DNRAmendmentAction::Deleted;
                break;

            default:
            // no log for other options.
        }

        if (this.ReasonText)
        {
            changeTxt = strFmt("@SYS76785", changeTxt, this.ReasonText);
        }

        if (changeTxt)
        {
            INVPeriodStartDateTime fromDateTime = (_changeType == AccessType::Edit) ? _fromDateTime : this.FromDateTime;
            INVPeriodEndDateTime toDateTime = (_changeType == AccessType::Edit) ? _toDateTime : this.ToDateTime;

            orderAmendmentLog.LogTxtGenerated = strFmt(SysLabel::labelId2String2("@DNR4378", languageId),
                changeTxt,
                DateTimeUtil::applyTimeZoneOffset(fromDateTime, DateTimeUtil::getUserPreferredTimeZone()),
                DateTimeUtil::applyTimeZoneOffset(toDateTime, DateTimeUtil::getUserPreferredTimeZone()));

            orderAmendmentLog.FromDateTime = fromDateTime;
            orderAmendmentLog.ToDateTime = toDateTime;
        }

        return orderAmendmentLog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAmendmentEventTypeFromComponent</Name>
				<Source><![CDATA[
    protected DNRAmendmentEventType getAmendmentEventTypeFromComponent()
    {
        DNRAmendmentEventType amendmentEventType;

        switch (this.PriceComponent)
        {
            case FINInvoicePeriodPriceComponent::CalendarId:
                amendmentEventType = DNRAmendmentEventType::RentalCalendar;
                break;
            case FINInvoicePeriodPriceComponent::LinePercent:
                amendmentEventType = DNRAmendmentEventType::DiscountPercent;
                break;
            case FINInvoicePeriodPriceComponent::InvoiceProfileId:
                amendmentEventType = DNRAmendmentEventType::InvoiceProfile;
                break;
            case FINInvoicePeriodPriceComponent::RentalModeId:
                amendmentEventType = DNRAmendmentEventType::RentalMode;
                break;
            case FINInvoicePeriodPriceComponent::RentalPrice:
                amendmentEventType = DNRAmendmentEventType::UnitPrice;
                break;
            case FINInvoicePeriodPriceComponent::RentalPriceNet:
                amendmentEventType = DNRAmendmentEventType::RentalPriceNet;
                break;
            case FINInvoicePeriodPriceComponent::Insurance:
                amendmentEventType = DNRAmendmentEventType::Insurance;
                break;
        }

        return amendmentEventType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayNewValue</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    public display String30 displayNewValue()
    {
        return strFmt("@SYS82282", this.getValue());
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyAmendments</Name>
				<Source><![CDATA[
    public static void copyAmendments(RORRentalLine _from, RORRentalLine _to)
    {
        FINInvoicePeriodAmendment origInvoiceAmendment, newInvoiceAmendment;
        RecordInsertList insertList = new RecordInsertList(tableNum(FINInvoicePeriodAmendment));

        while select origInvoiceAmendment
        where origInvoiceAmendment.RefTableId == _from.TableId
        &&    origInvoiceAmendment.RefRecId == _from.RecId
        {
            newInvoiceAmendment.data(origInvoiceAmendment);

            newInvoiceAmendment.RefTableId = _to.TableId;
            newInvoiceAmendment.RefRecId = _to.RecId;

            insertList.add(newInvoiceAmendment);
        }

        insertList.insertDatabase();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@DNR:FINInvoicePeriodAmendmentDevDoc</DeveloperDocumentation>
	<Label>@DNR645</Label>
	<TableGroup>Transaction</TableGroup>
	<CacheLookup>NotInTTS</CacheLookup>
	<CreatedDateTime>Yes</CreatedDateTime>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS110757</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FromDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceComponent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>displayNewValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CreatedDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Miscellaneous</Name>
			<Label>@DNR538</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DocumentState</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MustReinvoiceFullCredit</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>FromDateTime</Name>
			<ExtendedDataType>INVPeriodStartDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>ToDateTime</Name>
			<ExtendedDataType>INVPeriodEndDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>StrValue</Name>
			<ExtendedDataType>String30</ExtendedDataType>
			<HelpText>@DNR:StrValueHelp</HelpText>
			<Label>@SYS105215</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RealValue</Name>
			<ExtendedDataType>Amount</ExtendedDataType>
			<HelpText>@DNR:RealValueHelp</HelpText>
			<Label>@SYS41043</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PriceComponent</Name>
			<HelpText>@DNR:PriceComponentHelp</HelpText>
			<Label>@DNR:PriceComponent</Label>
			<EnumType>FINInvoicePeriodPriceComponent</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RefTableId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OldStrValue</Name>
			<HelpText>@DNR:StrValueHelp</HelpText>
			<Label>@SYS105215</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>OldRealValue</Name>
			<HelpText>@DNR:RealValueHelp</HelpText>
			<Label>@SYS41043</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReasonText</Name>
			<ExtendedDataType>RORAmendmentReasonText</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DocumentState</Name>
			<EnumType>FINAmendmentDocumentState</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>MustReinvoiceFullCredit</Name>
			<Label>@DNR:MustReinvoiceFullCredit</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>DateTimeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>RefTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RefRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PriceComponent</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FromDateTime</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ToDateTime</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>FINCreditPendingChangesReference</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>FINCreditPendingChangesReference</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TableId</Name>
					<Field>TableId</Field>
					<RelatedField>RefTableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>RefRecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>SalesLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PurchLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>PurchLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesQuotationLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>SalesQuotationLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>