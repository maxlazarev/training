<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINOrderLineComponentInvoiceLog</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class FINOrderLineComponentInvoiceLog extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isDeliveryReturnCharged</Name>
				<Source><![CDATA[
    public static boolean isDeliveryReturnCharged(Common _common, FINOrderLineComponent _component)
    {
        FINOrderLineComponentInvoiceLog invoiceLog;
        
        if (_common.TableId && _common.RecId)
        {
            select firstonly Active from invoiceLog
            order by CreatedDateTime desc
            where invoiceLog.RefTableId == _common.TableId
            &&    invoiceLog.RefRecId == _common.RecId
            &&    invoiceLog.ComponentType == _component;       
        }

        return (invoiceLog.Active);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isDeliveryReturnInvoiceIdCharged</Name>
				<Source><![CDATA[
    public static boolean isDeliveryReturnInvoiceIdCharged(Common _common, FINOrderLineComponent _component, InvoiceId _invoiceId)
    {
        FINOrderLineComponentInvoiceLog invoiceLog;
        
        if (_common.TableId && _common.RecId)
        {
            select firstonly Active from invoiceLog
            where invoiceLog.RefTableId == _common.TableId
            &&    invoiceLog.RefRecId == _common.RecId
            &&    invoiceLog.ComponentType == _component
            &&    invoiceLog.InvoiceId == _invoiceId;
        }

        return (invoiceLog.Active);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setComponentInvoiceLog</Name>
				<Source><![CDATA[
    public static void setComponentInvoiceLog(Common _common, InvoiceId _invoiceId, FINOrderLineComponent _component, boolean _active)
    {
        FINOrderLineComponentInvoiceLog invoiceLog;
        
        // Only one active record at the time (Delivery and Return should be charged once unless there were credits posted)
        if (!_active || !FINOrderLineComponentInvoiceLog::isDeliveryReturnCharged(_common, _component))
        {
            invoiceLog.RefTableId = _common.TableId;
            invoiceLog.RefRecId = _common.RecId;
            invoiceLog.ComponentType = _component;
            invoiceLog.InvoiceId = _invoiceId;
            invoiceLog.Active = _active;
            invoiceLog.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCreditingDeliveryReturn</Name>
				<Source><![CDATA[
    public static boolean isCreditingDeliveryReturn(Common _common, FINInvoiceCalculatorParm _invoiceCalculatorParm, FINOrderLineComponent _component)
    {
        AmountCur deliveryAmountCredit, returnAmountCredit;                 
        boolean ret;

        if (_invoiceCalculatorParm.CreditCalcPacked)
        {
            FINCreditJournalizer creditJournalizer = new FINCreditJournalizer();
            creditJournalizer.unpack(_invoiceCalculatorParm.CreditCalcPacked);
            [deliveryAmountCredit, returnAmountCredit] = creditJournalizer.getDeliveryReturnAmount();
        }

        ret = (_component == FINOrderLineComponent::DeliveryTransport ? deliveryAmountCredit != 0 : returnAmountCredit != 0);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOrderLineComponentInvoiced</Name>
				<Source><![CDATA[
    public static void setOrderLineComponentInvoiced(Common _common, InvoiceId _invoiceId, FINInvoiceCalculatorParm _invoiceCalculatorParm)
    {   
        AmountCur deliveryAmount, returnAmount, insuranceAmount;
        AmountCur deliveryAmountCredit, returnAmountCredit, insuranceAmountCredit;

        if (_invoiceCalculatorParm.TransportCalcPacked)
        {
            FINTransportPriceJournalizer transportJournalizer = new FINTransportPriceJournalizer();
            transportJournalizer.unpack(_invoiceCalculatorParm.TransportCalcPacked);
            
            deliveryAmount = transportJournalizer.getDeliveryAmount();
            returnAmount = transportJournalizer.getReturnAmount();
        }

        if (_invoiceCalculatorParm.RentalCalcPacked)
        {
            FINRentalJournalizer rentalJournalizer = new FINRentalJournalizer();
            rentalJournalizer.unpack(_invoiceCalculatorParm.RentalCalcPacked);

            insuranceAmount = rentalJournalizer.getInsuranceAmount();
        }

        if (_invoiceCalculatorParm.CreditCalcPacked)
        {
            FINCreditJournalizer creditJournalizer = new FINCreditJournalizer();
            creditJournalizer.unpack(_invoiceCalculatorParm.CreditCalcPacked);
            [deliveryAmountCredit, returnAmountCredit] = creditJournalizer.getDeliveryReturnAmount();
            insuranceAmountCredit = creditJournalizer.getInsuranceAmount();
        }

        // If Delivery credited:
        if (deliveryAmountCredit)
        {
            FINOrderLineComponentInvoiceLog::setComponentInvoiceLog(_common, _invoiceId, FINOrderLineComponent::DeliveryTransport, false);
        }

        // If Delivery charged:
        if (deliveryAmount)
        {
            FINOrderLineComponentInvoiceLog::setComponentInvoiceLog(_common, _invoiceId, FINOrderLineComponent::DeliveryTransport, true);
        }
        
        // If Return credited:
        if (returnAmountCredit)
        {
            FINOrderLineComponentInvoiceLog::setComponentInvoiceLog(_common, _invoiceId, FINOrderLineComponent::ReturnTransport, false);
        }

        // If Return charged:
        if (returnAmount)
        {
            FINOrderLineComponentInvoiceLog::setComponentInvoiceLog(_common, _invoiceId, FINOrderLineComponent::ReturnTransport, true);
        }
        
        // If Insurance credited:
        if (insuranceAmountCredit)
        {
            FINOrderLineComponentInvoiceLog::setComponentInvoiceLog(_common, _invoiceId, FINOrderLineComponent::Insurance, false);
        }

        // If Insurance charged:
        if (insuranceAmount)
        {
            FINOrderLineComponentInvoiceLog::setComponentInvoiceLog(_common, _invoiceId, FINOrderLineComponent::Insurance, true);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@DNR:FINOrderLineComponentInvoiceLogDevDoc</DeveloperDocumentation>
	<Label>@DNR:OrderLineComponentInvoiceLog</Label>
	<TableGroup>Transaction</TableGroup>
	<CacheLookup>NotInTTS</CacheLookup>
	<CreatedDateTime>Yes</CreatedDateTime>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ComponentType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Active</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RefTableId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InvoiceId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>InvoiceId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ComponentType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<EnumType>FINOrderLineComponent</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Active</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS14584</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>UniqueIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>RefTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RefRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ComponentType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CreatedDateTime</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Active</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>SalesLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Role>SalesLine</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PurchLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PurchLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchLine</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>