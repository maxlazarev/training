<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINInvoicePosting</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class FINInvoicePosting extends common
{
    

    

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isItemRelationFieldRequired</Name>
				<Source><![CDATA[
    public boolean isItemRelationFieldRequired()
    {
        return (this.ItemCode == TableGroupAll::GroupId || this.ItemCode == TableGroupAll::Table);
    }

]]></Source>
			</Method>
			<Method>
				<Name>searchRentalTypeType</Name>
				<Source><![CDATA[
    public static void searchRentalTypeType(
        FormDataSource          _invoicePosting,
        FINRentalAccountType    _rentalAccountType)
    {
        Query                   query;
        QueryBuildDataSource    qbds;

        query = _invoicePosting.query();
        if (query)
        {
            qbds = query.dataSourceTable(tableNum(FINInvoicePosting));
            SysQuery::findOrCreateRange(qbds, fieldNum(FINInvoicePosting, RentalAccountType)).value(queryValue(_rentalAccountType));            
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemCodeModified</Name>
				<Source><![CDATA[
    protected void itemCodeModified()
    {
        switch (this.ItemCode)
        {
            case TableGroupAll::Table:
                if (this.ItemRelation && !InventTable::exist(this.ItemRelation))
                {
                    this.ItemRelation = '';
                }
                break;
            case TableGroupAll::GroupId:
                if (this.ItemRelation && !InventItemGroup::exist(this.ItemRelation))
                {
                    this.ItemRelation = '';
                }
                break;
            case TableGroupAll::All:
                if (this.ItemRelation)
                {
                    this.ItemRelation = '';
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(fieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(FINInvoicePosting, ItemCode):
                this.itemCodeModified();
                break;

            case fieldNum(FINInvoicePosting, CustVendCode):
                this.custVendCodeModified();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>custVendCodeModified</Name>
				<Source><![CDATA[
    protected void custVendCodeModified()
    {
        if (this.CustVendRelation && !this.custVendRelationExists())
        {
            this.CustVendRelation = '';
        }        
    }

]]></Source>
			</Method>
			<Method>
				<Name>custVendRelationExists</Name>
				<Source><![CDATA[
    protected boolean custVendRelationExists()
    {
        boolean ret = false;

        if (this.CustVendCode != TableGroupAll::All)
        {
            if (this.ModuleType == MarkupModuleType::Cust)
            {
                ret = (this.CustVendCode == TableGroupAll::Table ? CustTable::exist(this.CustVendRelation) : CustGroup::exist(this.CustVendRelation));
            }
            else if (this.ModuleType == MarkupModuleType::Vend)
            {
                ret = (this.CustVendCode == TableGroupAll::Table ? VendTable::exist(this.CustVendRelation) : VendGroup::exist(this.CustVendRelation));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(fieldId _id)
    {
        boolean                             ret;
        
        ret = super(_id);

        switch (_id)
        {
            case fieldNum(InventPosting, ItemRelation):
                // Check that only relevant relations are used
                if (this.ItemRelation && !this.isItemRelationFieldRequired())
                {
                    ret = checkFailed("@SYS51104");
                }
                break;

            case fieldNum(InventPosting, CustVendRelation):
                // Check that only relevant relations are used
                if (this.CustVendRelation && !this.isCustVendAccountRelationFieldRequired())
                {
                    ret = checkFailed("@SYS24200");
                }
                break;
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPostingParameterBase</Name>
				<Source><![CDATA[
    public void initFromPostingParameterBase(FINInvoicePostingSearchParameters _searchParameter)
    {
        this.RentalAccountType = _searchParameter.RentalAccountType;
        this.PostingModuleType = _searchParameter.PostingModuleType;
        this.ModuleType = _searchParameter.ModuleType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getMarkupCodeFromParameters</Name>
				<Source><![CDATA[
    public static MarkupCode getMarkupCodeFromParameters(FINInvoicePostingSearchParameters _searchParameters)
    {
        FINInvoicePostingSearchParameters searchParameters = _searchParameters.clone();
        MarkupCode  markUpCode = FINInvoicePosting::getMarkupCodeFromCache(searchParameters);

        // return if it's found in the cache
        if (markUpCode)
        {
            return markUpCode;
        }

        //// Not found in cache, so calculate and cache it
        searchParameters.populateItemGroup();
        searchParameters.populateAccountGroup();

        List criteriaList = FINInvoicePosting::buildAccountItemCriteriaList(searchParameters);

        FINInvoicePostingSearchEngine searchEngine = new FINInvoicePostingSearchEngine(criteriaList);

        markUpCode = searchEngine.executeSearch();

        FINInvoicePosting::insertAccountItemMarkupCodeIntoCache(searchParameters, markUpCode);

        return markUpCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertAccountItemMarkupCodeIntoCache</Name>
				<Source><![CDATA[
    private static void insertAccountItemMarkupCodeIntoCache(FINInvoicePostingSearchParameters _searchParameters, MarkupCode _markupCode)
    {
        FINInvoicePostingCacheParameters insertCacheParameters = FINInvoicePostingCacheParameters::newFromInvoicePostingSearchParameters(_searchParameters);
        
        if (_markupCode)
        {
            insertCacheParameters.MarkupCode = _markupCode;
        }

        FINInvoicePostingSetupCache::insertAccountItemMarkupCodeFromParameters(insertCacheParameters);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getMarkupCodeFromCache</Name>
				<Source><![CDATA[
    private static MarkupCode getMarkupCodeFromCache(FINInvoicePostingSearchParameters _searchParameters)
    {
        FINInvoicePostingCacheParameters cacheParameters;
        container cacheResult;
        MarkupCode markupCode;
        
        cacheParameters = FINInvoicePostingCacheParameters::newFromInvoicePostingSearchParameters(_searchParameters);

        cacheResult = FINInvoicePostingSetupCache::getAccountItemMarkupCodeFromParameters(cacheParameters);

        // If found in cache just return it
        if (conLen(cacheResult) >= 1)
        {
            markupCode =  conPeek(cacheResult, 1);
        }

        return markupCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountRelation</Name>
				<Source><![CDATA[
    public static CustVendRel accountRelation(TableGroupAll _accountCode, CustVendAC _accountNum, CustVendGroupId _accountGroup)
    {
        return (_accountCode == TableGroupAll::Table ? _accountNum : 
                _accountCode == TableGroupAll::GroupId ? _accountGroup : '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemRelation</Name>
				<Source><![CDATA[
    static public ItemRelation itemRelation(TableGroupAll _itemCode, ItemId _itemId, ItemGroupId _itemGroup)
    {
        
        return (_itemCode == TableGroupAll::Table ? _itemId :
                _itemCode == TableGroupAll::GroupId ? _itemGroup : '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildAccountItemCriteriaList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the ordered list of criteria to use for searching.
    /// </summary>
    /// <param name = "_searchParameter">Search parameters to use for building the criteria.</param>
    /// <returns>The ordered list of criteria.</returns>
    protected static List buildAccountItemCriteriaList(FINInvoicePostingSearchParameters _searchParameter)
    {
        List criteriaList = new List(Types::Class);

        FINInvoicePostingRentalConceptSearchCriteria rentalConceptCriteria = FINInvoicePostingRentalConceptSearchCriteria::construct(_searchParameter);
        FINInvoicePostingAccountSearchCriteria accountCriteria = FINInvoicePostingAccountSearchCriteria::construct(_searchParameter);
        FINInvoicePostingItemSearchCriteria itemCriteria = FINInvoicePostingItemSearchCriteria::construct(_searchParameter);

        // Item takes priority over account
        criteriaList.addEnd(rentalConceptCriteria);
        criteriaList.addEnd(itemCriteria);
        criteriaList.addEnd(accountCriteria);

        return criteriaList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountGroup</Name>
				<Source><![CDATA[
    public static CustVendGroupId accountGroup(FINPostingModuleType _postingModuleType, CustVendAC _accountNum)
    {
        CustVendGroupId ret;

        switch (_postingModuleType)
        {
            case FINPostingModuleType::SalesRental:
            case FINPostingModuleType::SalesSubrental:
                ret = CustTable::groupId(_accountNum);
                break;

            case FINPostingModuleType::PurchSubrental:
                ret = VendTable::groupId(_accountNum);
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getMarkupCodeCached</Name>
				<Source><![CDATA[
    public static container getMarkupCodeCached(RORRentalLine _rentalLine, FINRentalAccountType _accountType, FINRentalConceptCode _conceptCode)
    {
        MarkupTable markupTable = FINInvoicePosting::getMarkupTable(_rentalLine, _accountType, _conceptCode);
        NoYes mustCharge = (markupTable.CustType == MarkupType::CustVend || markupTable.VendType == MarkupType::CustVend);
        return FINInvoiceServiceController::createMarkupCodeCacheValue(markupTable, mustCharge);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getMarkupTable</Name>
				<Source><![CDATA[
    protected static MarkupTable getMarkupTable(RORRentalLine _rentalLine, FINRentalAccountType _accountType, FINRentalConceptCode _conceptCode)
    {
        FINPostingModuleType rentalModuleType;
        MarkupModuleType markupModuleType; 
        PurchLine purchLine = _rentalLine as PurchLine;
        
        if (_rentalLine.TradeType == RORTradeType::SubRental)
        {
            rentalModuleType = (purchLine ? FINPostingModuleType::PurchSubrental : FINPostingModuleType::SalesSubrental);
        }
        else
        {
            rentalModuleType = FINPostingModuleType::SalesRental;
        }

        markupModuleType = (rentalModuleType == FINPostingModuleType::PurchSubrental ? MarkupModuleType::Vend : MarkupModuleType::Cust);

        FINInvoicePostingSearchParameters searchParameters = FINInvoicePostingSearchParameters::newFromRentalLine(_rentalLine,
                                                                                                                  rentalModuleType, 
                                                                                                                  markupModuleType, 
                                                                                                                  _accountType,                                                                                                                            _conceptCode);
        MarkupCode  markupCode = FINInvoicePosting::getMarkupCodeFromParameters(searchParameters);

        MarkupTable markupTable = MarkupTable::find(markupModuleType, markupCode);
    
        if(!markupTable)
        {
            throw error(strFmt("@DNR:MarkupCodeNotExists", rentalModuleType, "@DNR:RentalAccountType", _accountType, _rentalLine.ItemId));
        }

        return markupTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCustVendAccountRelationFieldRequired</Name>
				<Source><![CDATA[
    public boolean isCustVendAccountRelationFieldRequired()
    {
        return (this.CustVendCode == TableGroupAll::GroupId || this.CustVendCode == TableGroupAll::Table);
    }

]]></Source>
			</Method>
			<Method>
				<Name>markupCodeFromParameter</Name>
				<Source><![CDATA[
    public static MarkupCode markupCodeFromParameter(FINInvoicePosting _searchParameter)
    {
        return FINInvoicePosting::findByRelationsFromParameter(_searchParameter).MarkupCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRelationsFromParameter</Name>
				<Source><![CDATA[
    public static FINInvoicePosting findByRelationsFromParameter(FINInvoicePosting _searchParameter, boolean _update = false)
    {
        FINInvoicePosting invoicePosting;

        if (_update)
        {
            invoicePosting.selectForUpdate(_update);
        }

        select firstonly invoicePosting
        where invoicePosting.PostingModuleType  == _searchParameter.PostingModuleType
        &&    invoicePosting.RentalAccountType  == _searchParameter.RentalAccountType
        &&    invoicePosting.ModuleType         == _searchParameter.ModuleType
        &&    invoicePosting.ItemCode           == _searchParameter.ItemCode
        &&    invoicePosting.ItemRelation       == _searchParameter.ItemRelation
        &&    invoicePosting.CustVendCode       == _searchParameter.CustVendCode
        &&    invoicePosting.CustVendRelation   == _searchParameter.CustVendRelation
        &&    invoicePosting.RentalConceptCode  == _searchParameter.RentalConceptCode;

        return invoicePosting;
    }

]]></Source>
			</Method>
			<Method>
				<Name>FINEvent_onInsUpdDel</Name>
				<Source><![CDATA[
    [DataEventHandler(tableStr(FINInvoicePosting), DataEventType::Inserted),
     DataEventHandler(tableStr(FINInvoicePosting), DataEventType::Updated),
     DataEventHandler(tableStr(FINInvoicePosting), DataEventType::Deleted)]
    public static void FINEvent_onInsUpdDel(Common _sender, DataEventArgs eventArgs)
    {
        FINInvoicePostingSetupCache::clearCache();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@DNR:FINInvoicePostingDevDoc</DeveloperDocumentation>
	<FormRef>FINInvoicePosting</FormRef>
	<Label>@DNR:InvoicePosting</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>RentalAccountType</TitleField1>
	<TitleField2>ItemRelation</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>ItemIdIdx</ClusteredIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustVendCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustVendRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RentalConceptCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MarkupCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Other</Name>
			<Label>@SYS38585</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostingModuleType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RentalAccountType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ModuleType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ItemCode</Name>
			<Label>@SYS58740</Label>
			<EnumType>TableGroupAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemRelation</Name>
			<ExtendedDataType>InventItemRelation</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MarkupCode</Name>
			<ExtendedDataType>MarkupCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ModuleType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>MarkupModule</ExtendedDataType>
			<EnumType>MarkupModuleType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RentalAccountType</Name>
			<EnumType>FINRentalAccountType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PostingModuleType</Name>
			<EnumType>FINPostingModuleType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustVendRelation</Name>
			<ExtendedDataType>InventCustVendRel</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CustVendCode</Name>
			<Label>@Sys12243</Label>
			<EnumType>TableGroupAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RentalConceptCode</Name>
			<ExtendedDataType>FINRentalConceptCode</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ItemIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PostingModuleType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RentalAccountType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ModuleType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CustVendCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CustVendRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RentalConceptCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>MarkupTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>MarkupTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ModuleType</Name>
					<Field>ModuleType</Field>
					<RelatedField>ModuleType</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MarkupCode</Name>
					<Field>MarkupCode</Field>
					<RelatedField>MarkupCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123828</EntityRelationshipRole>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ItemCode</Name>
					<Field>ItemCode</Field>
					<ValueStr>TableGroupAll::Table</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemRelation</Name>
					<Field>ItemRelation</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventItemGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123827</EntityRelationshipRole>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>InventItemGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ItemCode</Name>
					<Field>ItemCode</Field>
					<ValueStr>TableGroupAll::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemRelation</Name>
					<Field>ItemRelation</Field>
					<RelatedField>ItemGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123829</EntityRelationshipRole>
			<RelatedTable>VendGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VendGroupCharge</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventPosting</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>CustVendCode</Name>
					<Field>CustVendCode</Field>
					<ValueStr>TableGroupAll::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustVendRelation</Name>
					<Field>CustVendRelation</Field>
					<RelatedField>VendGroup</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ModuleType</Name>
					<Field>ModuleType</Field>
					<ValueStr>MarkupModuleType::Vend</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123524</EntityRelationshipRole>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VendTableCharge</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventPosting</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>CustVendCode</Name>
					<Field>CustVendCode</Field>
					<ValueStr>TableGroupAll::Table</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustVendRelation</Name>
					<Field>CustVendRelation</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ModuleType</Name>
					<Field>ModuleType</Field>
					<ValueStr>MarkupModuleType::Vend</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123826</EntityRelationshipRole>
			<RelatedTable>CustGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustGroupCommission</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventPosting</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>CustVendCode</Name>
					<Field>CustVendCode</Field>
					<ValueStr>TableGroupAll::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustVendRelation</Name>
					<Field>CustVendRelation</Field>
					<RelatedField>CustGroup</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ModuleType</Name>
					<Field>ModuleType</Field>
					<ValueStr>MarkupModuleType::Cust</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123523</EntityRelationshipRole>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustTableCommission</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventPosting</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>CustVendCode</Name>
					<Field>CustVendCode</Field>
					<ValueStr>TableGroupAll::Table</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustVendRelation</Name>
					<Field>CustVendRelation</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ModuleType</Name>
					<Field>ModuleType</Field>
					<ValueStr>MarkupModuleType::Cust</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>FINRentalConceptTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>FINRentalConceptTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RentalConceptCode</Name>
					<Field>RentalConceptCode</Field>
					<RelatedField>ConceptCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>