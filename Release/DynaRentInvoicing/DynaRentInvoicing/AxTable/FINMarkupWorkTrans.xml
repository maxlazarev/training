<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINMarkupWorkTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class FINMarkupWorkTrans extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createMarkupTransFromMarkupWorkTrans</Name>
				<Source><![CDATA[
    public static RecId createMarkupTransFromMarkupWorkTrans(FINMarkupWorkTrans _markupWorkTrans, common _common)
    {
        MarkupTrans markupTrans;
        
        markupTrans.TransTableId = _markupWorkTrans.RefTableId;
        markupTrans.TransRecId = _markupWorkTrans.RefRecId;
                
        markupTrans.LineNum = MarkupTrans::lastLineNum(markupTrans.TransTableId, markupTrans.TransRecId) + 1;
        
        markupTrans.MarkupCode = _markupWorkTrans.MarkupCode;

        if (_common.TableId == tableNum(SalesTable))
        {
            markupTrans.initFromSalesTable(_common);
            if (!markupTrans.TaxItemGroup)
            {
                markupTrans.TaxItemGroup = _markupWorkTrans.TaxItemGroup;
            }
        }
        else
        {
            markupTrans.TaxItemGroup = _markupWorkTrans.TaxItemGroup;
            markupTrans.FINInitFromRentalLine(_common);
        }
        //markupTrans.Txt = _markupWorkTrans.markupTxt;
        markupTrans.TaxGroup = _markupWorkTrans.TaxGroup;
        markupTrans.Value = CurrencyExchangeHelper::amount(_markupWorkTrans.amountCur, markupTrans.CurrencyCode);
        markupTrans.MarkupCategory = MarkupCategory::Fixed;
        markupTrans.insert();

        return markupTrans.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInvoiceCalcResult</Name>
				<Source><![CDATA[
    public void initFromInvoiceCalcResult(FINInvoiceCalcResult _calculatorResult)
    {
        this.MarkupCode = _calculatorResult.markupCode;
        this.Txt = _calculatorResult.markupTxt;
        this.TaxItemGroup = _calculatorResult.markupTaxItemGroup;
        this.AmountCur = _calculatorResult.amountCur;              
    }

]]></Source>
			</Method>
			<Method>
				<Name>existParmId</Name>
				<Source><![CDATA[
    public static boolean existParmId(ParmId _parmId)
    {
        FINMarkupWorkTrans  markupWorkTrans;
        SalesParmLine       salesParmLine;
        boolean             ret;        
            
        select firstonly RecId from markupWorkTrans
            exists join RecId from salesParmLine
                where salesParmLine.ParmId == _parmId
                &&    salesParmLine.TableId == markupWorkTrans.ParmLineTableId
                &&    salesParmLine.RecId == markupWorkTrans.ParmLineRecId;

        ret = (markupWorkTrans.RecId);
        
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existProposalId</Name>
				<Source><![CDATA[
    public static boolean existProposalId(ProjProposalId _proposalId)
    {
        FINMarkupWorkTrans  markupWorkTrans;
        ProjProposalItem    projProposalItem;
        boolean             ret;
            
        select firstonly RecId from markupWorkTrans
            exists join RecId from projProposalItem
                where projProposalItem.ProposalId == _proposalId
                &&    projProposalItem.TableId == markupWorkTrans.ParmLineTableId
                &&    projProposalItem.RecId == markupWorkTrans.ParmLineRecId;

        ret = (markupWorkTrans.RecId);
        
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteParmId</Name>
				<Source><![CDATA[
    public static void deleteParmId(ParmId _parmId)
    {
        FINMarkupWorkTrans  markupWorkTrans;
        
        delete_from markupWorkTrans
            where markupWorkTrans.ParmId == _parmId;                       
                
    }

]]></Source>
			</Method>
			<Method>
				<Name>isInternalPosting</Name>
				<Source><![CDATA[
    public static boolean isInternalPosting(MarkupCode _markupCode)
    {
        boolean ret = false;
        MarkupTable markupTable;

        if (_markupCode)
        {
            select firstonly RecId from markupTable
            where markupTable.MarkupCode == _markupCode
            &&    markupTable.CustType != MarkupType::CustVend 
            &&    markupTable.VendType != MarkupType::CustVend;
        
            if (markupTable)
            {
                ret = true;
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromRentalLine</Name>
				<Source><![CDATA[
    public void initFromRentalLine(RORRentalLine _rentalLine)
    {      
        boolean isInternalPosting = FINMarkupWorkTrans::isInternalPosting(this.MarkupCode);

        switch (_rentalLine.TableId)
        {
            case tableNum(SalesLine):
                SalesLine   salesLine = _rentalLine;
                this.TaxGroup = salesLine.TaxGroup;
                if (isInternalPosting)
                {
                    this.TaxItemGroup = '';
                }
                else
                {
                    this.TaxItemGroup = (this.TaxItemGroup ? this.TaxItemGroup : salesLine.TaxItemGroup);
                }
                break;

            case tableNum(PurchLine):
                PurchLine   purchLine = _rentalLine;
                this.TaxGroup = purchLine.TaxGroup;
                if (isInternalPosting)
                {
                    this.TaxItemGroup = '';
                }
                else
                {
                    this.TaxItemGroup = (this.TaxItemGroup ? this.TaxItemGroup : purchLine.TaxItemGroup);
                }
                break;

            case tableNum(SalesQuotationLine):
                SalesQuotationLine   salesQuotationLine = _rentalLine;
                this.TaxGroup = salesQuotationLine.TaxGroup;
                if (isInternalPosting)
                {
                    this.TaxItemGroup = '';
                }
                else
                {
                    this.TaxItemGroup = (this.TaxItemGroup ? this.TaxItemGroup : salesQuotationLine.TaxItemGroup);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@DNR:FINMarkupWorkTransDevDoc</DeveloperDocumentation>
	<Label>@DNR:MarkupWorkTrans</Label>
	<TableGroup>Transaction</TableGroup>
	<CacheLookup>NotInTTS</CacheLookup>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS80404</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RefTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountCur</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MarkupCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxItemGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Txt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ParmId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ParmLineTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ParmLineRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsProjHour</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RefTableId</Name>
			<ExtendedDataType>MarkupTransRefTableId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountCur</Name>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@SYS69023</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecId</Name>
			<ExtendedDataType>MarkupTransRefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MarkupCode</Name>
			<ExtendedDataType>MarkupCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxGroup</Name>
			<ExtendedDataType>TaxGroup</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxItemGroup</Name>
			<ExtendedDataType>TaxItemGroup</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Txt</Name>
			<ExtendedDataType>TransTxt</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ParmId</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>ParmId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ParmLineTableId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RefTableId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ParmLineRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsProjHour</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@DNR5617</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ParmLineTableIdRecIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ParmLineTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ParmLineRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ParmIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ParmId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>SalesParmLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>SalesParmLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SalesParmLine</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ParmLineTableId</Name>
					<Field>ParmLineTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ParmLineRecId</Name>
					<Field>ParmLineRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProjProposalItem</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>ProjProposalItem</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProjProposalItem</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ParmLineTableId</Name>
					<Field>ParmLineTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ParmLineRecId</Name>
					<Field>ParmLineRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>