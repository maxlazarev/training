<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRFormLetterContractClass1_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(FormLetterContract))]
public final class DNRFormLetterContractClass1_Extension
{
    public boolean isEstimation;
    private RecId invoiceJourRecId;
    private boolean postInvoiceProposal;
    private RecId proformaInvoiceJourRecId;

    #define.CurrentVersion(3)
    #LOCALMACRO.CurrentList
        isEstimation,
        invoiceJourRecId,
        postInvoiceProposal,
        proformaInvoiceJourRecId
    #ENDMACRO

    // extension methods
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>DNRUnpackLocal</Name>
				<Source><![CDATA[
    private boolean DNRUnpackLocal(container _packedClass)
    {
        Integer version = RunBase::getVersion(_packedClass);
        switch(version)
        {
            case #CurrentVersion:
                [version, #CurrentList] = _packedClass;
                break;

            default:
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNRPackLocal</Name>
				<Source><![CDATA[
    private container DNRPackLocal()
    {
        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>FINParmIsEstimation</Name>
				<Source><![CDATA[
    public boolean FINParmIsEstimation(boolean _isEstimation = isEstimation)
    {
        isEstimation = _isEstimation;
        return isEstimation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>FINParmPostInvoiceProposal</Name>
				<Source><![CDATA[
    public boolean FINParmPostInvoiceProposal(boolean _postInvoiceProposal = postInvoiceProposal)
    {
        postInvoiceProposal = _postInvoiceProposal;
        return postInvoiceProposal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>FINParmProformaInvoiceJourRecId</Name>
				<Source><![CDATA[
    public RecId FINParmProformaInvoiceJourRecId(RecId _proformaInvoiceJourRecId = proformaInvoiceJourRecId)
    {
        proformaInvoiceJourRecId = _proformaInvoiceJourRecId;

        return proformaInvoiceJourRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>FINParmInvoiceJourRecId</Name>
				<Source><![CDATA[
    public RecId FINParmInvoiceJourRecId(RecId _invoiceJourRecId = invoiceJourRecId)
    {
        invoiceJourRecId = _invoiceJourRecId;

        return invoiceJourRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent2_pack_post</Name>
				<Source><![CDATA[
    // event handler methods

    [PostHandlerFor(classStr(FormLetterContract), methodStr(FormLetterContract, pack))]
    public static void DNREvent2_pack_post(XppPrePostArgs _eventArgs)
    {
        FormLetterContract instance = _eventArgs.getThis() as FormLetterContract;

        // also pack the extension
        SysPackExtensions::pack(_eventArgs, classStr(DNRFormLetterContractClass1_Extension), instance.DNRPackLocal());
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent2_unpack_post</Name>
				<Source><![CDATA[
    [PostHandlerFor(classStr(FormLetterContract), methodStr(FormLetterContract, unpack))]
    public static void DNREvent2_unpack_post(XppPrePostArgs _eventArgs)
    {
        FormLetterContract instance = _eventArgs.getThis() as FormLetterContract;

        container myState = SysPackExtensions::unpack(_eventArgs, classStr(DNRFormLetterContractClass1_Extension));

        //Also unpack the extension
        if (!instance.DNRUnpackLocal(myState))
        {
            _eventArgs.setReturnValue(false);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>