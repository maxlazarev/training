<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRProjProposalEmplTbl_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(tableStr(ProjProposalEmpl))]
public final class DNRProjProposalEmplTbl_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        ttsbegin;

        next delete();

        ProjEmplTrans   projEmplTrans;
        SalesLine       salesLine;
        SalesTable      salesTable;

        select firstOnly TotalSalesAmountCur, CurrencyId from projEmplTrans
        where projEmplTrans.TransId == this.TransId
            join RecId, CurrencyCode from salesLine
            where salesLine.RORTradeType != RORTradeType::SalesPurch
            &&    salesLine.RecId   == projEmplTrans.INVRefRecId
            &&    salesLine.TableId == projEmplTrans.INVRefTableId
                join RecId from salesTable
                where salesTable.SalesId == salesLine.SalesId;

        if (projEmplTrans.RecId)
        {
            FINMarkupWorkTrans markupWorkTrans;

            select firstonly forupdate markupWorkTrans
            where markupWorkTrans.RefRecId          == salesTable.RecId
               && markupWorkTrans.RefTableId        == tableNum(SalesTable)
               && markupWorkTrans.ParmId            == this.ProposalId
               && markupWorkTrans.IsProjHour        == true
               && markupWorkTrans.ParmLineRecId     == salesLine.RecId
               && markupWorkTrans.ParmLineTableId   == tableNum(SalesLine);

            if (markupWorkTrans.RecId)
            {
                MarkupTrans markupTransHeader;
                MarkupTable markupTable;
                AmountCur markupPercentageAmount;
                AmountCur projHourAmount = CurrencyExchangeHelper::curAmount2CurAmount(projEmplTrans.TotalSalesAmountCur, projEmplTrans.CurrencyId, salesLine.CurrencyCode);

                while select markupTransHeader
                where markupTransHeader.TransRecId      == salesTable.RecId
                &&    markupTransHeader.TransTableId    == salesTable.TableId
                &&    markupTransHeader.MarkupCategory  == MarkupCategory::Percent
                    exists join markupTable
                    where markupTable.MarkupCode    == markupWorkTrans.MarkupCode
                    &&  (markupTable.ModuleType     == MarkupModuleType::Cust || markupTable.ModuleType == MarkupModuleType::Vend)
                    &&  (markupTable.CustType       == MarkupType::CustVend || markupTable.VendType == MarkupType::CustVend)
                {
                    markupPercentageAmount += Markup::FINGetMarkupAmountFromMarkupCategory(markupTransHeader, 0, 0, projHourAmount, projHourAmount, DateTimeUtil::date(DateTimeUtil::getSystemDateTime()), 0, '', false, false);
                }

                markupWorkTrans.AmountCur -= markupPercentageAmount;
                markupWorkTrans.update();
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>