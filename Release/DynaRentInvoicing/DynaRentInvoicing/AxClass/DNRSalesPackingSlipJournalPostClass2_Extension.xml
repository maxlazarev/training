<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRSalesPackingSlipJournalPostClass2_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(SalesPackingSlipJournalPost))]
public final class DNRSalesPackingSlipJournalPostClass2_Extension
{
    // Chain-of-Command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateJournalLine</Name>
				<Source><![CDATA[
    protected void updateJournalLine()
    {
        next updateJournalLine();

        if (isConfigurationkeyEnabled(configurationKeyNum(INVInvoicePeriod))
        &&  salesLine.RORTradeType != RORTradeType::SalesPurch
        &&  !this.isProforma())
        {
            TransDateTime deliveryDateTimeCalculated;

            SalesParmTable          salesParmTable      = this.parmParmTable() as SalesParmTable;
            RORRentalDateTimesHost  dateTimeHost        = salesLine;
            RORRentalDateTimes      origRentalDateTimes = dateTimeHost.RORRentalDateTimesHost::rentalDateTimes();

            if (origRentalDateTimes && FINRentalInvoiceProfile::find(salesLine.INVInvoiceProfileId).InvoiceStartEndBasis == INVInvoiceStartEndBasis::OrderDates)
            {
                deliveryDateTimeCalculated = origRentalDateTimes.OnRentDateTime;
            }
            else
            {
                deliveryDateTimeCalculated = DateTimeUtil::removeTimeZoneOffset(DateTimeUtil::newDateTime(salesParmTable.TransDate, salesParmTable.BOBTransTime), DateTimeUtil::getUserPreferredTimeZone());

                if (origRentalDateTimes)
                {
                    deliveryDateTimeCalculated = max(origRentalDateTimes.OnRentDateTime, deliveryDateTimeCalculated);
                }
            }

            FINInvoicePeriodManager_Delivery invoicePeriodManager = FINInvoicePeriodManager::construct(FINInvoicePeriodAction::Delivery, salesLine);

            invoicePeriodManager.setDeliveryDetails(deliveryDateTimeCalculated, salesParmLine.DeliverNow);

            invoicePeriodManager.run();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>