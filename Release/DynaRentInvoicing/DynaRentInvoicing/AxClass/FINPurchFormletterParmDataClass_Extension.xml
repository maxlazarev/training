<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINPurchFormletterParmDataClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(PurchFormletterParmData))]
public final class FINPurchFormletterParmDataClass_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createParmUpdate</Name>
				<Source><![CDATA[
    // chain-of-command wrapper methods
    protected Common createParmUpdate()
    {
        PurchParmUpdate ret = next createParmUpdate();

        FormLetterContract formLetterContract = this.INVParmFormLetterContract();
    
        ret = this.FINSetCalculationPoint(ret, formLetterContract);
        
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>FINSetCalculationPoint</Name>
				<Source><![CDATA[
    // extension methods

    private PurchParmUpdate FINSetCalculationPoint(PurchParmUpdate _purchParmUpdate, FormLetterContract _formLetterContract)
    {        
        if (_formLetterContract && _formLetterContract.FINParmIsEstimation())
        {
            PurchParmUpdate purchParmUpdateLocal = _formLetterContract.parmParmUpdate();

            _purchParmUpdate.INVInitFromPurchParmUpdate(purchParmUpdateLocal);
        }
        else if (_formLetterContract)
        {
            #TimeConstants
    
            int timeZoneDifference = (DateTimeUtil::time(DateTimeUtil::applyTimeZoneOffset(DateTimeUtil::getSystemDateTime(), DateTimeUtil::getUserPreferredTimeZone()))
                            - DateTimeUtil::time(DateTimeUtil::getSystemDateTime()));
            int timeWithOffset = _formLetterContract.RORTransTime() + timeZoneDifference;
    
            // DateTime in data base always store in GMT time
            _purchParmUpdate.INVCalculationDateTime = DateTimeUtil::newDateTime(timeWithOffset > #SecondsPerDay ? _formLetterContract.parmTransDate() - 1 : _formLetterContract.parmTransDate(), _formLetterContract.RORTransTime());
    
            // set time to 0:00
            _purchParmUpdate.INVCalculationDateTime = DateTimeUtil::newDateTime(DateTimeUtil::date(DateTimeUtil::applyTimeZoneOffset(DateTimeUtil::getSystemDateTime(), DateTimeUtil::getUserPreferredTimeZone())), 0, DateTimeUtil::getUserPreferredTimeZone());
        }

        return _purchParmUpdate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>