<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINBatchInvoiceCheckController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class <c>FINBatchInvoiceCheckController</c> is the controller class for Advanced rental batch invoice check functionality.
/// </summary>
class FINBatchInvoiceCheckController extends SysOperationServiceController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        FINBatchInvoiceCheckController controller = FINBatchInvoiceCheckController::construct();
        controller.initFromArgs(_args);
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromArgs</Name>
				<Source><![CDATA[
    public void initFromArgs(Args _args)
    {
        FINBatchInvoiceAuditTrail callerRecord = _args.record();
        FINBatchInvoiceCheckContract dataContract = this.getDataContractObject();
        
        if (callerRecord)
        {
            dataContract.parmAuditTrail(callerRecord);
            dataContract.parmPrePostInvoiceCheck(DNRPrePostInvoiceCheck::PreInvoice);
        }
        else
        {
            throw error(Error::missingRecord(funcName()));
        }

        FINBatchInvoiceConfiguration batchInvoiceConfiguration;

        select firstonly RecId, InvoiceCheckSelectionPacked from batchInvoiceConfiguration
        where batchInvoiceConfiguration.ConfigurationId == callerRecord.ConfigurationId;

        if (batchInvoiceConfiguration.RecId && conLen(batchInvoiceConfiguration.InvoiceCheckSelectionPacked) >= 4)
        {
            dataContract.parmInvoiceCheckSelectionMapPacked(batchInvoiceConfiguration.InvoiceCheckSelectionPacked);
        }
        else
        {
            dataContract.parmInvoiceCheckSelectionMapPacked(DNRPreInvoiceCheck::getDefaultInvoiceCheckSelectionMap().pack());
        }

        this.parmArgs(_args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super(classStr(FINBatchInvoiceCheckService), methodStr(FINBatchInvoiceCheckService, run), SysOperationExecutionMode::Synchronous);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static FINBatchInvoiceCheckController construct()
    {
        return new FINBatchInvoiceCheckController();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>