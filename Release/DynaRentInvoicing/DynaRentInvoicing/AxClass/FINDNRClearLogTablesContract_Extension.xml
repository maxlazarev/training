<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINDNRClearLogTablesContract_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class contatining extensions for <c>DNRClearLogTablesContract</c> interface.
/// </summary>
[ExtensionOf(classStr(DNRClearLogTablesContract))]
final class FINDNRClearLogTablesContract_Extension
{
    public boolean clearFINBatchInvoiceCheckLog;
    public boolean clearFINCustQuotationTrans;
    public boolean clearFINBatchInvoiceCheckLogArchive;
    public boolean clearFINCustQuotationTransArchive;

    #define.CurrentVersion(1)
    #localmacro.CurrentList
        clearFINBatchInvoiceCheckLog,
        clearFINCustQuotationTrans,
        clearFINBatchInvoiceCheckLogArchive,
        clearFINCustQuotationTransArchive
    #endmacro

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmClearFINBatchInvoiceCheckLog</Name>
				<Source><![CDATA[
    [DataMemberAttribute,
    SysOperationLabelAttribute("@DNR:InvoiceCheckLogTable"),
    SysOperationHelpTextAttribute("@DNR:ClearFINBatchInvoiceCheckLogTable"),
    SysOperationDisplayOrderAttribute('2'),
    SysOperationGroupMemberAttribute('DynaRentCore')]
    public boolean parmClearFINBatchInvoiceCheckLog(boolean _clearFINBatchInvoiceCheckLog = clearFINBatchInvoiceCheckLog)
    {
        clearFINBatchInvoiceCheckLog = _clearFINBatchInvoiceCheckLog;
        return clearFINBatchInvoiceCheckLog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmClearFINCustQuotationTrans</Name>
				<Source><![CDATA[
    [DataMemberAttribute,
    SysOperationLabelAttribute("@DNR:QuotationLinesTable"),
    SysOperationHelpTextAttribute("@DNR:ClearFINCustQuotationTransTable"),
    SysOperationDisplayOrderAttribute('2'),
    SysOperationGroupMemberAttribute('DynaRentCore')]
    public boolean parmClearFINCustQuotationTrans(boolean _clearFINCustQuotationTrans = clearFINCustQuotationTrans)
    {
        clearFINCustQuotationTrans = _clearFINCustQuotationTrans;
        return clearFINCustQuotationTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmClearFINBatchInvoiceCheckLogArchive</Name>
				<Source><![CDATA[
    public boolean parmClearFINBatchInvoiceCheckLogArchive(boolean _clearFINBatchInvoiceCheckLogArchive = clearFINBatchInvoiceCheckLogArchive)
    {
        clearFINBatchInvoiceCheckLogArchive = _clearFINBatchInvoiceCheckLogArchive;
        return clearFINBatchInvoiceCheckLogArchive;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmClearFINCustQuotationTransArchive</Name>
				<Source><![CDATA[
    public boolean parmClearFINCustQuotationTransArchive(boolean _clearFINCustQuotationTransArchive = clearFINCustQuotationTransArchive)
    {
        clearFINCustQuotationTransArchive = _clearFINCustQuotationTransArchive;
        return clearFINCustQuotationTransArchive;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        container valuePacked = next pack();

        return SysPackExtensions::appendExtension(valuePacked, classStr(FINDNRClearLogTablesContract_Extension),
            this.salesFormLetterContractFINPack());
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        boolean packedBase = next unpack(_packedClass);

        if (packedBase)
        {
            container conPackedBase = SysPackExtensions::findExtension(_packedClass, classStr(FINDNRClearLogTablesContract_Extension));

            if (!this.salesFormLetterContractFINUnpack(conPackedBase))
            {
                packedBase = false;
            }
        }

        return packedBase;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesFormLetterContractFINPack</Name>
				<Source><![CDATA[
    private container salesFormLetterContractFINPack()
    {
        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesFormLetterContractFINUnpack</Name>
				<Source><![CDATA[
    private boolean salesFormLetterContractFINUnpack(container _packedClass)
    {
        Integer version = RunBase::getVersion(_packedClass);

        switch (version)
        {
            case #CurrentVersion:
                [version, #CurrentList] = _packedClass;
                break;

            default:
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkParameterDays</Name>
				<Source><![CDATA[
    /// <summary>
    /// checks the parameters
    /// </summary>
    public boolean checkParameterDays()
    {
        if (next checkParameterDays() == true || this.parmClearFINBatchInvoiceCheckLog() || this.parmClearFINCustQuotationTrans())
        {
            return true;
        }
       
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkParameterDaysArchive</Name>
				<Source><![CDATA[
    /// <summary>
    /// checks the parameters archive
    /// </summary>
    public boolean checkParameterDaysArchive()
    {
        if (next checkParameterDaysArchive() == true || this.parmClearFINBatchInvoiceCheckLogArchive() || this.parmClearFINCustQuotationTransArchive())
        {
            return true;
        }
       
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>