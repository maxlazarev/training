<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINPurchTotals_ParmTransCls_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(PurchTotals_ParmTrans))]
public final class FINPurchTotals_ParmTransCls_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcCustVendMarkupOnLine</Name>
				<Source><![CDATA[
    protected AmountCur calcCustVendMarkupOnLine(
                Markup _markup,
                PurchLine _purchLine,
                PurchQty _purchQty,
                AmountCur _lineAmount,
                Common _source)
    {
        if (purchLine.RORTradeType == RORTradeType::SubRental && (this is PurchTotals_ParmTransExpected))
        {
            
            VendInvoiceInfoLine vendInvoiceInfoLine = VendInvoiceInfoLine::findInventTransId(this.parmId, parmTable.TableRefId, _purchLine.InventTransId);
            
            if (vendInvoiceInfoLine)
            {
                _source = vendInvoiceInfoLine;

                _markup.parmTransIds(0, 0);
                _markup.parmOnlyIncludeConnected(false);
            }
        }

        if (purchLine.RORTradeType == RORTradeType::SubRental)
        {
            PurchTable purchTable = purchTable::find(_purchLine.purchId);

            if (purchTable.InterCompanyOrigin == InterCompanyOrigin::Derived)
            {
                _markup.FINparmSkipIntercompanyInvoice(true);
            }
        }

        AmountCur ret = next calcCustVendMarkupOnLine(_markup, _purchLine, _purchQty, _lineAmount, _source);

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>