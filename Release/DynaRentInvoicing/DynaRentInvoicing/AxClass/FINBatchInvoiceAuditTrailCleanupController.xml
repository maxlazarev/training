<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINBatchInvoiceAuditTrailCleanupController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class is the controller class for Audit trail clean up functionality
/// </summary>
class FINBatchInvoiceAuditTrailCleanupController extends SysOperationServiceController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        FINBatchInvoiceAuditTrailCleanupController controller = FINBatchInvoiceAuditTrailCleanupController::construct();
        controller.initFromArgs(_args);
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    protected static FINBatchInvoiceAuditTrailCleanupController construct()
    {
        return new FINBatchInvoiceAuditTrailCleanupController();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super(classStr(FINBatchInvoiceAuditTrailCleanupService), 
              methodStr(FINBatchInvoiceAuditTrailCleanupService, run), 
              SysOperationExecutionMode::Synchronous);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromArgs</Name>
				<Source><![CDATA[
    public void initFromArgs(Args _args)
    {
        Query query = new Query();
        QueryBuildDataSource qbdsAuditTrail = query.addDataSource(tableNum(FINBatchInvoiceAuditTrail));
        QueryBuildRange qbr = qbdsAuditTrail.addRange(fieldNum(FINBatchInvoiceAuditTrail, ScheduledDateTime));
        qbr.value('<' + SysQuery::value(DateTimeUtil::addDays(DateTimeUtil::utcNow(), -2)));

        if (_args.dataset() == tableNum(FINBatchInvoiceConfiguration))
        {
            FINBatchInvoiceConfiguration callerRecord = _args.record();
            qbr = qbdsAuditTrail.addRange(fieldNum(FINBatchInvoiceAuditTrail, ConfigurationId));
            qbr.value(callerRecord.ConfigurationId);
            qbr.status(RangeStatus::Locked);
        }

        FINBatchInvoiceAuditTrailCleanupDataContract dataContract = this.getDataContractObject();
        dataContract.parmQuery(query);
        this.parmArgs(_args);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>