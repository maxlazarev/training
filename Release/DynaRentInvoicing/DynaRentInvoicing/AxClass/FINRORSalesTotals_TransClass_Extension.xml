<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINRORSalesTotals_TransClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(RORSalesTotals_Trans))]
public final class FINRORSalesTotals_TransClass_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>lineAmount</Name>
				<Source><![CDATA[
    // Chain-of-command wrapper
    protected LineAmount  lineAmount(SalesQty _salesQty, TransDate _transDate)
    {
        LineAmount ret = next lineAmount(_salesQty, _transDate);

        SalesLine saleslineLocal = salesLine;
        if (saleslineLocal.RORTradeType != RORTradeType::SalesPurch)
        {
            // Do not use standard lineAmount field for rental order line as it is calculated in engines and stored as markup trans.
            ret = 0;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineDiscAmount</Name>
				<Source><![CDATA[
    protected DiscAmount lineDiscAmount(UnitQty _unitQty, TransDate _transDate)
    {
        DiscAmount ret = next lineDiscAmount(_unitQty, _transDate);

        SalesLine saleslineLocal = salesLine;
        if (saleslineLocal.RORTradeType != RORTradeType::SalesPurch)
        {
            // Do not use standard discount field for rental order line as it is calculated in engines and stored as markup trans.
            ret = 0;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>skipLine</Name>
				<Source><![CDATA[
    protected boolean skipLine(Common  _orderLine)
    {
        boolean ret = next skipLine(_orderLine);
        DNRTradeTotalsDisposableContext context = DNRTradeTotalsDisposableContext::current();
        Set selectedRecId = new Set(Types::Int64);
        SalesLine saleslineLocal = salesLine;
        SalesUpdate specQtyLocal = specQty;

        if (context && context.DNRParmSelectedRecId())
        {
            selectedRecId = context.DNRParmSelectedRecId();
        }

        if (selectedRecId.elements() && !selectedRecId.in(saleslineLocal.RecId))
        {
            // When calling rental totals for selected line(s) then ignore all other.
            ret = true;
        }             

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>