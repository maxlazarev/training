<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINInvoicingOptions</Name>
	<SourceCode>
		<Declaration><![CDATA[
class FINInvoicingOptions
{
    public NoYesId includeCredited;
    public NoYesId includeUninvoiced;
    public INVCalculationDateTime calculationDateTime;
    public ParmId parmId;
    public FINForceInvoiceUntilPoint forceUntilCalculationPoint;
    public NoYesId isCreditPreview;
    public NoYes skipSetCalculationDateTime;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static FINInvoicingOptions construct()
    {
        return new FINInvoicingOptions();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFromSalesParmUpdate</Name>
				<Source><![CDATA[
    public static FINInvoicingOptions createFromSalesParmUpdate(SalesParmUpdate _salesParmUpdate)
    {
        FINInvoicingOptions invoicingOption = FINInvoicingOptions::construct();

        invoicingOption.parmId = _salesParmUpdate.ParmId;
        invoicingOption.calculationDateTime = _salesParmUpdate.INVCalculationDateTime;
        invoicingOption.includeUninvoiced = _salesParmUpdate.INVIncludeUninvoiced;
        invoicingOption.includeCredited = _salesParmUpdate.INVIncludeCredits;
        invoicingOption.forceUntilCalculationPoint = _salesParmUpdate.FINForceInvoiceUntilPoint;
        invoicingOption.isCreditPreview = _salesParmUpdate.FINIsCreditPreview;
        return invoicingOption;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFromSalesQuotationParmUpdate</Name>
				<Source><![CDATA[
    public static FINInvoicingOptions createFromSalesQuotationParmUpdate(SalesQuotationParmUpdate _salesQuotationParmUpdate)
    {
        FINInvoicingOptions invoicingOption = FINInvoicingOptions::construct();

        invoicingOption.parmId = _salesQuotationParmUpdate.ParmId;
        invoicingOption.calculationDateTime = DateTimeUtil::getSystemDateTime();
        invoicingOption.includeUninvoiced = NoYes::Yes;
        invoicingOption.includeCredited = NoYes::No;
        invoicingOption.forceUntilCalculationPoint = NoYes::No;
        invoicingOption.isCreditPreview = NoYes::No;
        return invoicingOption;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFromPurchParmUpdate</Name>
				<Source><![CDATA[
    public static FINInvoicingOptions createFromPurchParmUpdate(PurchParmUpdate _purchParmUpdate)
    {
        FINInvoicingOptions invoicingOption = FINInvoicingOptions::construct();

        invoicingOption.parmId = _purchParmUpdate.ParmId;
        invoicingOption.calculationDateTime = _purchParmUpdate.INVCalculationDateTime;
        invoicingOption.includeUninvoiced = _purchParmUpdate.INVIncludeUninvoiced;
        invoicingOption.includeCredited = _purchParmUpdate.INVIncludeCredits;
        invoicingOption.forceUntilCalculationPoint = _purchParmUpdate.FINForceInvoiceUntilPoint;
        invoicingOption.isCreditPreview = _purchParmUpdate.FINIsCreditPreview;
        return invoicingOption;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>