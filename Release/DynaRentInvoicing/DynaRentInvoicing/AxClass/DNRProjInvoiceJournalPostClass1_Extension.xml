<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRProjInvoiceJournalPostClass1_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(ProjInvoiceJournalPost))]
public final class DNRProjInvoiceJournalPostClass1_Extension
{
    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>endLines</Name>
				<Source><![CDATA[
    protected void endLines()
    {
        next endLines();
        
        if (!this.isProforma())
        {
            ProjInvoiceJour projInvoiceJour = this.parmJournalTable();

            if (isConfigurationkeyEnabled(configurationKeyNum(INVInvoicePeriod))
            &&  projInvoiceJour
            &&  projInvoiceJour.ProposalId)
            {
                // Sometimes there are hour trans posted after related rental line is fully charged.
                // In such case InvoiceId is not stamped on ProjEmplTrans in FINInvoicePeriodManager_Invoice and needs to be updated here.
                ProjInvoiceEmpl             projInvoiceEmpl;
                ProjEmplTrans               projEmplTrans;
                SalesLine                   salesLine;
                InvoiceId                   invoiceId = projInvoiceJour.ProjInvoiceId;
                FINInvoiceCalculatorParm    invoiceCalculatorParm;

                projEmplTrans.skipDataMethods(true);
                update_recordset projEmplTrans
                setting WPPInvoiceId = invoiceId
                where !projEmplTrans.WPPInvoiceId
                    join TableId from salesLine
                    where salesLine.TableId == projEmplTrans.INVRefTableId
                    &&    salesLine.RecId == projEmplTrans.INVRefRecId
                        join TableId from projInvoiceEmpl
                        where projInvoiceEmpl.TransId == projEmplTrans.TransId
                        &&    projInvoiceEmpl.InvoiceDate == projInvoiceJour.InvoiceDate
                        &&    projInvoiceEmpl.ProjInvoiceId == projInvoiceJour.ProjInvoiceId;
                
                // After importand data is journalized FINInvoiceCalculatorParm record is not needed.
                invoiceCalculatorParm.skipDataMethods(true);
                delete_from invoiceCalculatorParm where invoiceCalculatorParm.ParmId == projInvoiceJour.ProposalId;
            }

            // Remove manual price components with Keep == false
            FINManualPriceComponent::deletePostedPriceComponents(projInvoiceJour);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>endPost</Name>
				<Source><![CDATA[
    protected void endPost()
    {
        next endPost();

        if (projInvoiceJour)
        {
            FINRentalPeriodJournalizer::construct(projInvoiceJour, null).journalize();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>