<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINInvoiceCalculatorEngineSetupGenerator</Name>
	<SourceCode>
		<Declaration><![CDATA[
class FINInvoiceCalculatorEngineSetupGenerator
{
    Set    classNameSet;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        FINInvoiceCalculatorEngineSetupGenerator    setupGenerator;

        setupGenerator = new FINInvoiceCalculatorEngineSetupGenerator();
        setupGenerator.run();

        if (_args.record().dataSource())
        {
            FormDataSource  fds = _args.record().dataSource();
            fds.research();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        this.getEngineSetupClasses();
    
        FINInvoiceCalculatorEngineSetup engineSetup;
        Set                             notInterfacedClasses = new Set(Types::String);

        // Check what is already in a setup.
        while select engineSetup
            where engineSetup.EngineClassName
        {
            if (classNameSet.in(engineSetup.EngineClassName))
            {
                classNameSet.remove(engineSetup.EngineClassName);
            }
            else
            {
                notInterfacedClasses.add(engineSetup.EngineClassName);
            }
        }

        // Create missing setup records.
        SetEnumerator   enumerator = classNameSet.getEnumerator();
        str             className;

        while (enumerator.moveNext())
        {
            className = enumerator.current();

            FINIInvoiceCalculatorGenericEngine  engine;
            FINInvoiceCalculatorEngineSetup     calculatorEngineSetup;

            engine = new SysDictClass(className2Id(className)).makeObject();

            if (engine)
            {
                calculatorEngineSetup.clear();
                calculatorEngineSetup.EngineId = engine.engineId();
                calculatorEngineSetup.Description = engine.description();
                calculatorEngineSetup.Publisher = engine.publisher();
                calculatorEngineSetup.Active = engine.mustBeActive();
                calculatorEngineSetup.EngineClassName = className;
                calculatorEngineSetup.insert();
            }
        }

        // Inform a user about incorrect setup.
        enumerator = notInterfacedClasses.getEnumerator();

        while (enumerator.moveNext())
        {
            className = enumerator.current();
            warning(strFmt("@DNR:InterfaceNotImplemented", className, classId2Name(classNum(FINIInvoiceCalculatorGenericEngine))));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEngineSetupClasses</Name>
				<Source><![CDATA[
    protected void getEngineSetupClasses()
    {
        SysDictClass                    dictClass;
        List                            dataContainerClassList;
        ListEnumerator                  le;
        classId                         dataClassId;
        ;

        dictClass    = new SysDictClass(classnum(FINIInvoiceCalculatorGenericEngine));
        dataContainerClassList = dictClass.implementedBy();

        le = dataContainerClassList.getEnumerator();

        classNameSet = new Set(Types::String);

        while (le.moveNext())
        {
            dataClassId = le.current();
            dictClass   = new SysDictClass(dataClassId);
            if (!dictClass.isInterface())
            {
                classNameSet.add(dictClass.name());
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>