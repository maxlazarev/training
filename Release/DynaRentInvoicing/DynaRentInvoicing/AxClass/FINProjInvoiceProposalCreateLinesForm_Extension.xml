<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINProjInvoiceProposalCreateLinesForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(ProjInvoiceProposalCreateLines))]
public final class FINProjInvoiceProposalCreateLinesForm_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromProjTable</Name>
				<Source><![CDATA[
    // chain-of-command wrapper class
    void initFromProjTable(ProjTable _projTable)
    {
        next initFromProjTable(_projTable);

        // When calling invice proposal from rental order always use exact project number instead of parent project.
        SalesTable salesTable = this.args().record() as SalesTable;

        if (salesTable)
        {
            selectProjId.text(_projTable.ProjId);
        }        
    }

]]></Source>
			</Method>
			<Method>
				<Name>initProjInvoiceProposalCreateLinesParams</Name>
				<Source><![CDATA[
    protected void initProjInvoiceProposalCreateLinesParams()
    {
        ParmId parmId;
        
        if (proposalCreateLines)
        {
            parmId = proposalCreateLines.parmProposalCreateLinesParams().FINInvoiceCalcParmId();
        }
        
        next initProjInvoiceProposalCreateLinesParams();

        this.parmProposalParams().FINInvoiceCalcParmId(parmId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    void close()
    {
        next close();

        ParmId parmId = this.parmProposalParams().FINInvoiceCalcParmId();
        
        if (parmId)
        {
            runAsync(classNum(FINInvoiceServiceController_RentalProjInvoice), staticMethodStr(FINInvoiceServiceController_RentalProjInvoice,  cleanUpOrphanCalcParmAsync), [parmId, buf2Con(PSATmpProjProposalTrans)]);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        next init();

        if (this.args().dataset() == tableNum(SalesTable))
        {
            SalesTable salesTable = this.args().record();

            if (salesTable.SalesType == SalesType::RORRental)
            {
                FINRentalOrderTimezoneCheck::check(salesTable, FINTimezoneCheckProcess::Invoice);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_PSATmpProjProposalTransDS_OnActivated</Name>
				<Source><![CDATA[
    // event handler methods

    [FormDataSourceEventHandler(formDataSourceStr(ProjInvoiceProposalCreateLines, PSATmpProjProposalTrans), FormDataSourceEventType::Activated)]
    public static void DNREvent_PSATmpProjProposalTransDS_OnActivated(FormDataSource _sender, FormDataSourceEventArgs _eventArgs)
    {
        PSATmpProjProposalTrans psaTmpProjProposalTrans = _sender.cursor() as PSATmpProjProposalTrans;
        SalesLine salesLine = SalesLine::findRecId(psaTmpProjProposalTrans.RefRecId);
        boolean isRental = (salesLine.RORTradeType == RORTradeType::Rental || salesLine.RORTradeType == RORTradeType::SubRental);

        _sender.formRun().design().controlName(formControlStr(SalesEditLines, FINRentalInvoiceDetail)).enabled(isRental);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>