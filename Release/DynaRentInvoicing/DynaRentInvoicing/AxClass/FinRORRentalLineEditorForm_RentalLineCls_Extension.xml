<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FinRORRentalLineEditorForm_RentalLineCls_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(RORRentalLineEditorForm_RentalLine))]
public final class FinRORRentalLineEditorForm_RentalLineCls_Extension
{
    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateLine</Name>
				<Source><![CDATA[
    protected LineNum updateLine(
        Common                  _common,
        RORKitComponentType     _kitComponentType,
        RORRentalEditorLine     _rentalEditorLine)
    {
        SalesLine salesLineUpdate = _common as SalesLine;
        SalesLine salesLineOrig = salesLineUpdate.orig();

        if (salesLineUpdate)
        {
            FINCustInvoiceJourProForma custInvoiceJourProForma = FINInvoicePeriodManager_FinancialChange::getActiveInvoiceProposal(_rentalEditorLine.InventTransId, mainKitHeader.EffectiveDateTimeFrom, mainKitHeader.EffectiveDateTimeTo);

            if (custInvoiceJourProForma.invoiceId)
            {
                throw warning(strFmt("@DNR:InvoiceProrosalExistsForCurrentLine", custInvoiceJourProForma.invoiceId));
            }
        }

        LineNum lineNum = next updateLine(_common, _kitComponentType, _rentalEditorLine);
        
        if (salesLineUpdate && salesLineUpdate.INVInvoiceProfileId != salesLineOrig.INVInvoiceProfileId) 
        {
            boolean invoiceProfileOnCreation = FINRentalInvoiceProfile::find(salesLineUpdate.INVInvoiceProfileId).PriceTierMultiplierCalcMethod == INVPriceTierMultiplierCalcMethod::Creating;
            NoYes isPriceTierMultiplierCalculated = invoiceProfileOnCreation;

            FINInvoicePeriodQtyPhysical::updateInvoicePeriodMultiplier(salesLineUpdate.TableId, salesLineUpdate.RecId, isPriceTierMultiplierCalculated);            
        }

        return lineNum;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>