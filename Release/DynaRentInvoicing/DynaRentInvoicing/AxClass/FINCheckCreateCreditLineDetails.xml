<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINCheckCreateCreditLineDetails</Name>
	<SourceCode>
		<Declaration><![CDATA[
class FINCheckCreateCreditLineDetails
{
    Map markedCreditLineDetailsMap;
    Args callerArgs;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setMarkedCreditLineDetailsMap</Name>
				<Source><![CDATA[
    public void setMarkedCreditLineDetailsMap(Map _markedCreditLineDetailsMap)
    {
        markedCreditLineDetailsMap = _markedCreditLineDetailsMap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCallerArgs</Name>
				<Source><![CDATA[
    public void parmCallerArgs(Args _callerArgs)
    {
        callerArgs = _callerArgs;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        boolean isValid = true;
        Args    args = callerArgs;
        FormRun callerFormRun = callerArgs.caller() as FormRun;
        Set     failedRecordsInfoSet;

        FINCreditForm creditFormClass = callerFormRun.getCreditFormClass();
        if (creditFormClass)
        {
            markedCreditLineDetailsMap = new Map(Types::Int64, Types::Int64);

            if (callerArgs.record() && callerArgs.dataset() == tableNum(FINCreditLineDetails))
            {
                FINCreditLineDetails creditLineDetails = callerArgs.record() as FINCreditLineDetails;
                markedCreditLineDetailsMap.insert(creditLineDetails.CreditLineRefRecId, creditLineDetails.RecId);
            }

            creditFormClass.markedCreditLineDetailsMap = markedCreditLineDetailsMap;
        }

        args.parmObject(this);
        args.name(formstr(FINCreditAddEditDialog));

        FINCreditLineDetails creditLineDetails;
        
        FormRun formRun = classFactory.formRunClass(args);        
        formRun.init();
        formRun.run();

        formRun.wait();

        if (formRun.closedOk())
        {            
            if (markedCreditLineDetailsMap)
            {
                failedRecordsInfoSet = new Set(Types::Container);
                MapEnumerator markedCreditLineDetailsMapEnum = markedCreditLineDetailsMap.getEnumerator();
                boolean creditDaysValid = true;

                while(markedCreditLineDetailsMapEnum.moveNext())
                {
                    creditLineDetails = FINCreditLineDetails::findRecId(markedCreditLineDetailsMapEnum.currentValue(), true);
                    if (creditLineDetails)
                    {
                        FINCreditForm creditForm = new FINCreditForm_Rental();

                        if (!creditForm.validateCreditDays(creditLineDetails))
                        {
                            isValid = false;
                            creditDaysValid = false;
                            failedRecordsInfoSet.add([creditLineDetails.CreditType, creditLineDetails.DateRangeType, creditLineDetails.AmountCurCredit]);
                            creditForm.deleteCreditParmLineDetails(creditLineDetails, creditLineDetails.creditLine(true));
                            break;
                        }
                        else
                        if (!creditForm.validateCreditLimit(creditLineDetails))
                        {
                            isValid = false;
                            failedRecordsInfoSet.add([creditLineDetails.CreditType, creditLineDetails.DateRangeType, creditLineDetails.AmountCurCredit]);
                            creditForm.deleteCreditParmLineDetails(creditLineDetails, creditLineDetails.creditLine(true));
                        }
                    }
                }

                if (!isValid)
                {
                    SetEnumerator failedRecordsInfoSetEnum = failedRecordsInfoSet.getEnumerator();

                    while (failedRecordsInfoSetEnum.moveNext())
                    {
                        FINCreditType           creditType;
                        FINCreditDateRangeType  creditDateRangeType;
                        AmountCurCredit         amountCurCredit;

                        [creditType, creditDateRangeType, amountCurCredit] = failedRecordsInfoSetEnum.current();

                        warning(strFmt("@DNR:DateRangeCreditRemoved", creditType, creditDateRangeType));
                    }

                    callerFormRun.doResearch();

                    if (creditDaysValid)
                    {
                        throw error("@DNR8193");
                    }
                    else
                    {
                        throw error("@SYS319214");
                    }
                }
                else
                {
                    callerFormRun.doResearch();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        FINCheckCreateCreditLineDetails checkCreateCreditLineDetails = new FINCheckCreateCreditLineDetails();
        checkCreateCreditLineDetails.parmCallerArgs(_args);
        checkCreateCreditLineDetails.run();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>