<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
  <Name>FINSalesInvoiceDPClass_Extension</Name>
  <SourceCode>
    <Declaration><![CDATA[
[ExtensionOf(classStr(SalesInvoiceDP))]
public final class FINSalesInvoiceDPClass_Extension
{
}
]]></Declaration>
    <Methods>
      <Method>
        <Name>populateSalesInvoiceHeaderFooterTmp</Name>
        <Source><![CDATA[
    protected void populateSalesInvoiceHeaderFooterTmp(CustInvoiceJour _custInvoiceJour, CompanyInfo _companyInfo)
    {
        next populateSalesInvoiceHeaderFooterTmp(_custInvoiceJour, _companyInfo);

        salesInvoiceHeaderFooterTmp.FINIsRentalProposal = _custInvoiceJour.FINIsRentalProposal;
    }

]]>
        </Source>
      </Method>
      <Method>
        <Name>populateSalesInvoiceTmp</Name>
        <Source>
          <![CDATA[
    protected void populateSalesInvoiceTmp(CustInvoiceJour _custInvoiceJour,
        CustInvoiceTrans _custInvoiceTrans,
        TaxSpec _taxSpec,
        CustPaymSchedLine _custPaymSchedLine,
        CustTrans _prepaymentCustTrans,
        TaxTrans _prepaymentTaxTrans)
    {
        FINMarkupWorkTrans markupWorkTrans;
        SalesParmLine      salesParmLine;
        MarkupTable        markupTable;
        AmountCur          markupAmt;

        next populateSalesInvoiceTmp(_custInvoiceJour, _custInvoiceTrans, _taxSpec, _custPaymSchedLine, _prepaymentCustTrans, _prepaymentTaxTrans);

        if (_custInvoiceJour.isProforma() && _custInvoiceJour.salesTable().SalesType == SalesType::RORRental)
        {
            queryRun tradeLoopTrans = new tradeLoopTrans(_custInvoiceTrans, tableNum(markupTrans)).buildQueryRun();

            if (_custInvoiceTrans.RORTradeType != RORTradeType::SalesPurch)
            {
                salesInvoiceTmp.LineAmountMST        = 0;
                salesInvoiceTmp.LineAmount           = 0;
                salesInvoiceTmp.LineAmountInclTaxMST = 0;
                salesInvoiceTmp.LineAmountInclTax    = 0;
            }

            while (tradeLoopTrans.next())
            {
                MarkupTrans markupTransLocal = tradeLoopTrans.get(tableNum(markupTrans));

                if (!(markupTransLocal.markuptable().CustType == MarkupType::LedgerAccount &&
                markupTransLocal.markuptable().VendType == MarkupType::LedgerAccount))
                {
                    salesInvoiceTmp.MCRMarkupValue = 1;
                    markupAmt += markupTransLocal.Value;
                }
            }
            salesInvoiceTmp.MCRMarkupCalculatedAmount = markupAmt;
            
        }
    }

]]>
        </Source>
      </Method>
    </Methods>
  </SourceCode>
</AxClass>