<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINPurchCalcTax_ParmTransExpectedCls_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(PurchCalcTax_ParmTransExpected))]
public final class FINPurchCalcTax_ParmTransExpectedCls_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>transLineAmount</Name>
				<Source><![CDATA[
    public AmountCur transLineAmount()
    {
        AmountCur ret = next transLineAmount();
        
        PurchLine purchLineLoc = parmLine.purchLine();

        if (purchLineLoc.RORTradeType != RORTradeType::SalesPurch)
        {
            CurrencyCode currency = (parmTable.isNonPO() || parmTable.isAdvance()) ? parmTable.CurrencyCode : purchTable.CurrencyCode;
            Markup markup = new Markup(currency);
            markup.parmExchRate(this.exchRate(), this.exchRateSecondary(), Currency::noYes2UnknownNoYes(this.triangulation()));
            markup.transDate(this.invoiceDate());
            markup.parmTransIds(0, 0);
            markup.parmOnlyIncludeConnected(false);
            markup.FINparmSkipVarianceCalculation(true);

            markup.calc(purchLineLoc.PurchQty, 0, parmLine, documentStatus, purchLineLoc.interCompanyLineAmount(purchLineLoc.PurchQty, this.invoiceDate()));

            ret = -markup.markupCustVend();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transTaxItemGroup</Name>
				<Source><![CDATA[
    public TaxItemGroup transTaxItemGroup()
    {
        TaxItemGroup ret = next transTaxItemGroup();

        PurchLine purchLineLoc = parmLine.purchLine();

        if (!ret && purchLineLoc.RORTradeType != RORTradeType::SalesPurch)
        {
            MarkupCode              markupCode;
            TaxItemGroup            taxItemGroup;
            TransTxt                txt;
            boolean                 mustCharge;
            FINRentalConceptCode    conceptCode;

            [markupCode, taxItemGroup, txt, mustCharge] = FINInvoicePosting::getMarkupCodeCached(parmLine.purchLine(), FINRentalAccountType::Price, "");
            
            if (markupCode)
            {
                ret = MarkupTable::find(MarkupModuleType::Vend, markupCode).TaxItemGroup;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>