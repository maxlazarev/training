<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINBatchInvoiceAuditTrailCleanupService</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class <c>FINBatchInvoiceAuditTrailCleanupService</c> contains the logic to execute the audit trail cleanup.
/// </summary>
class FINBatchInvoiceAuditTrailCleanupService
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes the logic of the service class
    /// </summary>
    /// <param name = "_dataContract">
    /// The datacontract associated with the controller class
    /// </param>
    public void run(FINBatchInvoiceAuditTrailCleanupDataContract _dataContract)
    {
        #OCCRetryCount
        FINBatchInvoiceAuditTrail auditTrail;
        QueryRun queryRun = new QueryRun(_dataContract.parmQuery());
        
        try
        {
            ttsbegin;
            
            while (queryRun.next())
            {
                auditTrail = queryRun.get(tableNum(FINBatchInvoiceAuditTrail));
                this.cleanupBatchJob(auditTrail);
            }

            ttscommit;
        }
        catch (Exception::Error)
        {
            exceptionTextFallThrough();
        }
        catch (Exception::Deadlock)
        {
            retry;
        }
        catch (Exception::UpdateConflict)
        {
            if (appl.ttsLevel() == 0)
            {
                if (xSession::currentRetryCount() >= #RetryNum)
                {
                    throw Exception::UpdateConflictNotRecovered;
                }
                else
                {
                    retry;
                }
            }
            else
            {
                throw Exception::UpdateConflict;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>cleanupBatchJob</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the batch jobs related to the auditTrail
    /// </summary>
    /// <param name = "_batchInvoiceConfiguration">
    /// The audit trail record that needs to be deleted
    /// </param>
    protected void cleanupBatchJob(FINBatchInvoiceAuditTrail _auditTrail)
    {
        BatchJob batchjob;

        //Clean up Invoice check batch jobs
        delete_from batchjob
        where batchjob.Status == BatchStatus::Finished
        ||    batchjob.Status == BatchStatus::Error
        &&    batchjob.RecId  == _auditTrail.InvoiceCheckBatch;
        
        //delete action on the audit trail will delete the audit trail record.
        delete_from batchjob
        where batchjob.Status == BatchStatus::Finished
        ||    batchjob.Status == BatchStatus::Error
        &&    batchjob.RecId  == _auditTrail.InvoiceRunBatch;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>