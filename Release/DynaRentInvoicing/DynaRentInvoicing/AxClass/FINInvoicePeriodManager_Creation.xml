<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINInvoicePeriodManager_Creation</Name>
	<SourceCode>
		<Declaration><![CDATA[
[FINInvoicePeriodManagerAttribute(FINInvoicePeriodAction::Creation)]
class FINInvoicePeriodManager_Creation extends FINInvoicePeriodManager
{
    RORRentalDateTimes rentalDateTimes;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setRentalDateTimes</Name>
				<Source><![CDATA[
    public void setRentalDateTimes(RORRentalDateTimes _rentalDateTimes)
    {
        rentalDateTimes = _rentalDateTimes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        // TODO: think how to implement this
        /*CalendarId closedCalendarId = parameters.RentalStopCalendar;
            
        // When a rental oreder is being created with invoice profile "hour"
        // then automatically all created rental periods should get a closed calendar.
        if (INVInvoiceProfile::mustUpdateCalendarId(invoicePeriodHost.InvoiceProfileId))
        {
            invoicePeriod.CalendarId = INVInvoiceProfile::find(invoicePeriodHost.InvoiceProfileId).isHourlyInvoicing() ? parameters.UnregisteredHourCalendarId : closedCalendarId;
        }
        */

        FINInvoicePeriodQtyPhysical invPeriodQtyPhysical;
        invPeriodQtyPhysical.initFromInvoicePeriodHost(invoicePeriodHost);
        invPeriodQtyPhysical.initFromRentalDateTimes(rentalDateTimes);
        invPeriodQtyPhysical.insert();

        FINInvoicePeriodQtyFinancial invPeriodQtyFinancial;
        invPeriodQtyFinancial.initFromInvoicePeriodQtyPhysical(invPeriodQtyPhysical);
        invPeriodQtyFinancial.insert();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>