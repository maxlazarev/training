<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINROROrderAmendmentDialogForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(ROROrderAmendmentDialog))]
public final class FINROROrderAmendmentDialogForm_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        next init();

        FINTimezoneCheckProcess checkProcess = FINTimezoneCheckProcess::Unknown;

        ClassId orderAmendmentTypeClassId = classIdGet(orderAmendmentDialogType);

        if (orderAmendmentTypeClassId == classNum(ROROrderAmendmentDialogType_ChangeDate)
            || orderAmendmentTypeClassId == classNum(ROROrderAmendmentDialogType_ChangeOnOff)
            || orderAmendmentTypeClassId == classNum(ROROrderAmendmentDialogType_Exchange)
            || orderAmendmentTypeClassId == classNum(ROROrderAmendmentDialogType_RentalStop))
        {
            Common buffer; 

            switch (orderAmendmentDialogType.parmCommon().TableId)
            {
                case tableNum(SalesTable):
                case tableNum(PurchTable):
                case tableNum(SalesQuotationTable):
                    buffer = orderAmendmentDialogType.parmCommon();
                    break;
                
                case tableNum(SalesLine):
                    SalesLine salesLine = orderAmendmentDialogType.parmCommon() as SalesLine;
                    buffer = salesLine.salesTable();
                    break;
                
                case tableNum(PurchLine):
                    PurchLine purchLine = orderAmendmentDialogType.parmCommon() as PurchLine;
                    buffer = purchLine.purchTable();
                    break;

                case tableNum(SalesQuotationLine):
                    SalesQuotationLine salesQuotationLine = orderAmendmentDialogType.parmCommon() as SalesQuotationLine;
                    buffer = salesQuotationLine.salesQuotationTable();
                    break;
            }

            if (buffer)
            {
                FINRentalOrderTimezoneCheck::check(buffer, FINTimezoneCheckProcess::RentalChange);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    public boolean validate()
    {
        boolean ret = next validate();
    
        if (reasonType == DNRReasonType::DateChange || 
            reasonType == DNRReasonType::OnOffDateChange)
        {
            RORRentalDateTimes rentalDateTimesCheck = RORRentalDateTimes::findReference(RORRentalDateTimes.RefTableId, RORRentalDateTimes.RefRecId);
    
            if (rentalDateTimesCheck.OffRentDateTime != RORRentalDateTimes.OffRentDateTime)
            {
                ret = ret && RORRentalDateTimes.FINValidateActiveInvoiceProposal(RORRentalDateTimes.OffRentDateTime, rentalDateTimesCheck.getOffRentDateTime(false));
            }
        }

        if (reasonType == DNRReasonType::ExchangeItem)
        {
            ret = ret && RORTmpOrderAmendmentDialogTable.FINValidateActiveInvoiceProposal(RORTmpOrderAmendmentDialogTable.OffRentDateTime, RORRentalDateTimes.OffRentDateTime);
        }
        

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>