<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRSalesRORReturnNoteJournalPostClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(SalesRORReturnNoteJournalPost))]
public final class DNRSalesRORReturnNoteJournalPostClass_Extension
{
    // Chain-of-Command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateSourceLine</Name>
				<Source><![CDATA[
    protected void updateSourceLine()
    {
        boolean runInvoicePeriodManager;

        SalesLine       salesLine       = this.salesLine();
        boolean         isProforma      = this.isProforma();

        if (isConfigurationkeyEnabled(configurationKeyNum(INVInvoicePeriod))
        &&  salesLine.RORTradeType != RORTradeType::SalesPurch
        &&  !isProforma)
        {
            this.DNRparmSkipUpdateSalesLineStatus(true);

            runInvoicePeriodManager = true;
        }

        next updateSourceLine();

        if (runInvoicePeriodManager)
        {
            TransDateTime returnDateTimeCalculated;

            RORRentalDateTimesHost  dateTimeHost        = salesLine;
            RORRentalDateTimes      origRentalDateTimes = dateTimeHost.RORRentalDateTimesHost::rentalDateTimes();
            SalesParmTable          salesParmTable      = this.parmParmTable() as SalesParmTable;
            SalesParmLine           salesParmLine       = this.salesParmLine();

            if (origRentalDateTimes && FINRentalInvoiceProfile::find(salesLine.INVInvoiceProfileId).InvoiceStartEndBasis == INVInvoiceStartEndBasis::OrderDates)
            {
                returnDateTimeCalculated = origRentalDateTimes.OffRentDateTime;
            }
            else
            {
                returnDateTimeCalculated = DateTimeUtil::removeTimeZoneOffset(DateTimeUtil::newDateTime(salesParmTable.TransDate, salesParmTable.BOBTransTime), DateTimeUtil::getUserPreferredTimeZone());
            }

            FINInvoicePeriodManager_Return invoicePeriodManager = FINInvoicePeriodManager::construct(FINInvoicePeriodAction::Return, salesLine);

            invoicePeriodManager.setReturnDetails(returnDateTimeCalculated, salesParmLine.DeliverNow);

            invoicePeriodManager.run();

            salesLine.type().RORsetRentalStatus(salesLine);
            salesLine.doUpdate();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>