<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINProjInvoiceTotalsForm_extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(ProjInvoiceTotals))]
public final class FINProjInvoiceTotalsForm_extension
{
    private Set recIdSet;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcTotals</Name>
				<Source><![CDATA[
    // chain-of-command wrapper methods
    void  calcTotals()
    {
        this.FINCreateMarkupTrans();

        next calcTotals();

        this.FINDeleteMarkupTrans();
    }

]]></Source>
			</Method>
			<Method>
				<Name>FINCreateMarkupTrans</Name>
				<Source><![CDATA[
    // extension method
    private void FINCreateMarkupTrans()
    {
        if (projProposalJourLocal && !projProposalJourLocal.ProjInvoiceId)
        {
            if (!FINMarkupWorkTrans::existProposalId(projProposalJourLocal.ProposalId))
            {
                FINMarkupTransGenerator::createMarkupWorkTrans(projProposalJourLocal.ProposalId);
            }
           
            recIdSet = FINMarkupTransGenerator::createMarkupTransForProposalId(projProposalJourLocal.ProposalId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>FINDeleteMarkupTrans</Name>
				<Source><![CDATA[
    private void FINDeleteMarkupTrans()
    {
        FINMarkupTransGenerator::deleteMarkupTransForSet(recIdSet);

        if (projProposalJourLocal && !projProposalJourLocal.ProjInvoiceId)
        {
            FINMarkupWorkTransReference::deleteMarkupTransForParmId(projProposalJourLocal.ProposalId);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>