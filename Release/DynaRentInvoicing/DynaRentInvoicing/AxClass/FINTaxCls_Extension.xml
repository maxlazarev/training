<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINTaxCls_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(Tax))]
public final class FINTaxCls_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>showTaxes</Name>
				<Source><![CDATA[
    static FormRun showTaxes(str _menuItemDisplayStr, Tax _tax, Common  _record, FormRun _formRun, OpenMode _openMode)
    {
        Tax taxLocal = _tax;

        if (_menuItemDisplayStr == menuitemDisplayStr(TaxTmpWorkProjectInvoiceProposal) && _record.TableId == tableNum(ProjProposalJour))
        {
            ProjProposalTotals  projProposalTotals;
            ProjProposalJour    projProposalJour = _record;
            Set                 recIdSet;

            projProposalTotals = new ProjProposalTotals(projProposalJour);

            if (projProposalJour && !projProposalJour.ProjInvoiceId)
            {
                if (!FINMarkupWorkTrans::existProposalId(projProposalJour.ProposalId))
                {
                    FINMarkupTransGenerator::createMarkupWorkTrans(projProposalJour.ProposalId);
                }
           
                recIdSet = FINMarkupTransGenerator::createMarkupTransForProposalId(projProposalJour.ProposalId);

                projProposalTotals.calc();

                FINMarkupTransGenerator::deleteMarkupTransForSet(recIdSet);

                FINMarkupWorkTransReference::deleteMarkupTransForParmId(projProposalJour.ProposalId);
            
                taxLocal = projProposalTotals.tax();
            }
        }

        return next showTaxes(_menuItemDisplayStr, taxLocal, _record, _formRun, _openMode);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>