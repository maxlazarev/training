<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINRORPurchTotals_TransClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(RORPurchTotals_Trans))]
public final class FINRORPurchTotals_TransClass_Extension
{
    

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>qtyInventoryUnits</Name>
				<Source><![CDATA[
    // Chain-of-command wrapper
    protected InventQty qtyInventoryUnits(UnitQty _unitQty)
    {
        InventQty ret = next qtyInventoryUnits(_unitQty);

        PurchLine purchlineLocal = purchLine;
        PurchTable purchTableLocal = purchTable;

        if (purchlineLocal.PurchStatus == PurchStatus::Invoiced
        &&  purchlineLocal.RORTradeType == RORTradeType::SalesPurch
        &&  purchTableLocal.PurchaseType == PurchaseType::RORSubRental)
        {
            // Do not show invoiced quantities. In standard D365 for sales lines skipLine method is preventing showing such lines. We want the same in subrental totals.
            ret = 0;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>qtyPurch</Name>
				<Source><![CDATA[
    PurchQty qtyPurch()
    {
        PurchQty ret = next qtyPurch();

        PurchLine purchlineLocal = purchLine;
        PurchTable purchTableLocal = purchTable;

        if (purchlineLocal.PurchStatus == PurchStatus::Invoiced
        &&  purchlineLocal.RORTradeType == RORTradeType::SalesPurch
        &&  purchTableLocal.PurchaseType == PurchaseType::RORSubRental)
        {
            // Do not show invoiced quantities. In standard D365 for sales lines skipLine method is preventing showing such lines. We want the same in subrental totals.
            ret = 0;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineAmount</Name>
				<Source><![CDATA[
    LineAmount  lineAmount(PurchQty _purchQty, TransDate _transDate)
    {
        LineAmount ret = next lineAmount(_purchQty, _transDate);

        PurchLine purchlineLocal = purchLine;
        if (purchlineLocal.RORTradeType != RORTradeType::SalesPurch)
        {
            // Do not use standard lineAmount field for rental order line as it is calculated in engines and stored as markup trans.
            ret = 0;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchLineHasDiscount</Name>
				<Source><![CDATA[
    protected boolean purchLineHasDiscount()    
    {
        boolean ret = next purchLineHasDiscount();

        PurchLine purchlineLocal = purchLine;
        if (purchlineLocal.RORTradeType != RORTradeType::SalesPurch)
        {
            // Do not use standard discount field for rental order line as it is calculated in engines and stored as markup trans.
            ret = false;
        }

        return ret;
    }

    /*
    // Uncomment if invoiced purch lines not displayed in subrental totals. For now it seems to work.
    PurchQty qtyPurch()
    {
        PurchQty ret = next qtyPurch();
        PurchLine purchlineLocal = purchLine;
        PurchUpdate specQtyLocal = specQty;

        if (purchlineLocal.RORTradeType == RORTradeType::SalesPurch && specQtyLocal == PurchUpdate::All)
        {
            ret += purchlineLocal.invoicedInTotal();
        }

        return ret;
    }*/

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>