<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINRentalJournalizer</Name>
	<SourceCode>
		<Declaration><![CDATA[
class FINRentalJournalizer implements FINIGenericJournalizer
{
    // [invoicedQty, rentalAmount, rentalDiscount, insuranceAmount, chargedPeriods]
    container containerResult;
        
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addResult</Name>
				<Source><![CDATA[
    public void addResult(anytype _result)
    {
        containerResult = _result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return containerResult;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedValues)
    {
        containerResult = _packedValues == conNull() ? [0, 0, 0, 0, 0] : _packedValues;
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoicedQty</Name>
				<Source><![CDATA[
    public Qty getInvoicedQty()
    {
        return conPeek(containerResult, 1);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRentalAmount</Name>
				<Source><![CDATA[
    public LineAmount getRentalAmount()
    {
        return conPeek(containerResult, 2);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRentalDiscountAmount</Name>
				<Source><![CDATA[
    public AmountCur getRentalDiscountAmount()
    {
        return conPeek(containerResult, 3);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInsuranceAmount</Name>
				<Source><![CDATA[
    public AmountCur getInsuranceAmount()
    {
        return conPeek(containerResult, 4);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getChargedPeriods</Name>
				<Source><![CDATA[
    public int getChargedPeriods()
    {
        return conPeek(containerResult, 5);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getChargedValues</Name>
				<Source><![CDATA[
    public Set getChargedValues()
    {
        Set ret = new Set(Types::Container);
        Counter idx;

        FINRentalAccountType    accountType;
        Description             description;
        AmountCur               rentalAmount = conPeek(containerResult, 2);
        AmountCur               rentalDiscount = conPeek(containerResult, 3);
        AmountCur               insuranceAmount = conPeek(containerResult, 4);
        boolean                 hasCreditAccountType; // Default is false
        
        if (rentalAmount)
        {
            accountType = FINRentalAccountType::Price;
            description = enum2Str(accountType);
            idx += 1;
            ret.add([accountType, rentalAmount, description, hasCreditAccountType, 0, idx]);
        }

        if (rentalDiscount)
        {
            accountType = FINRentalAccountType::Discount;
            description = enum2Str(accountType);
            idx += 1;
            ret.add([accountType, rentalDiscount, description, hasCreditAccountType, 0, idx]);
        }

        if (insuranceAmount)
        {
            accountType = FINRentalAccountType::Insurance;
            description = enum2Str(accountType);
            idx += 1;
            ret.add([accountType, insuranceAmount, description, hasCreditAccountType, 0, idx]);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetAmountsForCredit</Name>
				<Source><![CDATA[
    public void resetAmountsForCredit()
    {
        containerResult = conPoke(containerResult, 2, 0);
        containerResult = conPoke(containerResult, 3, 0);
        containerResult = conPoke(containerResult, 4, 0);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>