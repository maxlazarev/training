<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRSalesInvoiceJournalCreateClass1_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(SalesInvoiceJournalCreate))]
public final class DNRSalesInvoiceJournalCreateClass1_Extension
{
    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    protected void init()
    {
        next init();

        this.FINCreateMarkupTransDuringInvoicing();
    }

]]></Source>
			</Method>
			<Method>
				<Name>FINCreateMarkupTransDuringInvoicing</Name>
				<Source><![CDATA[
    // extension methods    
    public void FINCreateMarkupTransDuringInvoicing()
    {        
        SalesInvoiceJournalCreate hostObject = this;
        SalesParmUpdate salesParmUpdate = hostObject.parmParmUpdate();
        SalesParmTable salesParmTable = hostObject.parmParmTable() as SalesParmTable;
        SalesParmLine salesParmLine;

        if (salesParmUpdate.Proforma || salesParmUpdate.FINProforma)
        {
            if (!FINMarkupWorkTrans::existParmId(salesParmUpdate.ParmId))
            {
                if (salesParmTable)
                {
                    while select RecId, TableId from salesParmLine
                    where salesParmLine.ParmId == salesParmTable.ParmId
                    && salesParmLine.TableRefId == salesParmTable.TableRefId
                    {
                        FINMarkupTransGenerator::createMarkupWorkTrans(salesParmUpdate.ParmId, salesParmLine.TableId, salesParmLine.RecId);
                    }
                }
                else
                {
                    FINMarkupTransGenerator::createMarkupWorkTrans(salesParmUpdate.ParmId);
                }
            }
        }
        else
        {
            FINMarkupWorkTrans::deleteParmId(salesParmUpdate.ParmId);
            if (salesParmTable)
            {
                while select RecId, TableId from salesParmLine
                    where salesParmLine.ParmId == salesParmTable.ParmId
                    && salesParmLine.TableRefId == salesParmTable.TableRefId
                {
                    FINMarkupTransGenerator::createMarkupTrans(salesParmUpdate.ParmId, salesParmLine.TableId, salesParmLine.RecId);
                }
            }
            else
            {
                FINMarkupTransGenerator::createMarkupTrans(salesParmUpdate.ParmId);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>