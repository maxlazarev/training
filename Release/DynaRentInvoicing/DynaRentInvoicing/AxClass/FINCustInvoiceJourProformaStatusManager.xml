<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINCustInvoiceJourProformaStatusManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
class FINCustInvoiceJourProformaStatusManager
{
    FINCustInvoiceJourProformaStatus newStatus;
    Set custInvoiceJourProformaRecIdSet;
    FINCustInvoiceJourProForma custInvoicejourProforma;
    utcdatetime expiryDateTime;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        Set custInvoiceJourProformaRecIdSet = new Set(Types::Int64);

        if (_args.record() && (_args.record().TableId == tableNum(FINCustInvoiceJourProForma)))
        {
            FINCustInvoiceJourProForma custInvoiceJourProformaRecord = _args.record();

            if (_args.dataset())
            {
                FINCustInvoiceJourProForma custInvoiceJourProforma;
                MultiSelectionHelper helper = MultiSelectionHelper::construct();

                helper.parmDatasource(custInvoiceJourProformaRecord.dataSource());

                custInvoiceJourProforma = helper.getFirst();
                while (custInvoiceJourProforma.RecId != 0)
                {
                    custInvoiceJourProformaRecIdSet.add(custInvoiceJourProforma.RecId);

                    custInvoiceJourProforma = helper.getNext();
                }
            }
        }

        FINCustInvoiceJourProformaStatusManager custInvoiceJourProformaManager = FINCustInvoiceJourProformaStatusManager::construct(FINCustInvoiceJourProformaStatusManager::getNewStatus(_args));
        custInvoiceJourProformaManager.parmCustInvoiceJourProformaRecIdSet(custInvoiceJourProformaRecIdSet);
        custInvoiceJourProformaManager.run();

        if (_args.dataset())
        {
            FormDataUtil::getFormDataSource(_args.record()).research(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static FINCustInvoiceJourProformaStatusManager construct(FINCustInvoiceJourProformaStatus _newStatus)
    {
        FINCustInvoiceJourProformaStatusManager custInvoiceJourProformaManager = new FINCustInvoiceJourProformaStatusManager();
        custInvoiceJourProformaManager.parmNewStatus(_newStatus);
        return custInvoiceJourProformaManager;
    }

]]></Source>
			</Method>
			<Method>
				<Name>changeStatus</Name>
				<Source><![CDATA[
    public static void changeStatus(RecId _custInvoiceJourProformaRecId, FINCustInvoiceJourProformaStatus _newStatus)
    {
        FINCustInvoiceJourProformaStatusManager custInvoiceJourProformaManager = FINCustInvoiceJourProformaStatusManager::construct(_newStatus);
        Set custInvoiceJourProformaSet = new Set(Types::Int64);
        custInvoiceJourProformaSet.add(_custInvoiceJourProformaRecId);
        custInvoiceJourProformaManager.parmCustInvoiceJourProformaRecIdSet(custInvoiceJourProformaSet);
        custInvoiceJourProformaManager.run();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNewStatus</Name>
				<Source><![CDATA[
    protected static FINCustInvoiceJourProformaStatus getNewStatus(Args _args)
    {
        FINCustInvoiceJourProformaStatus ret;

        switch(_args.menuItemName())
        {
            case menuItemActionStr(FINCustInvoiceJourProformaConfirm):
                ret = FINCustInvoiceJourProformaStatus::CustomerApproved;
                break;

            case menuItemActionStr(FINCustInvoiceJourProFormaSend):
                ret = FINCustInvoiceJourProformaStatus::Sent;
                break;

            case menuItemActionStr(FINCustInvoiceJourProFormaRevise):
                ret = FINCustInvoiceJourProformaStatus::Revised;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustInvoiceJourProformaRecIdSet</Name>
				<Source><![CDATA[
    public Set parmCustInvoiceJourProformaRecIdSet(Set _custInvoiceJourProformaRecIdSet = custInvoiceJourProformaRecIdSet)
    {
        custInvoiceJourProformaRecIdSet = _custInvoiceJourProformaRecIdSet;
        return custInvoiceJourProformaRecIdSet;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNewStatus</Name>
				<Source><![CDATA[
    public FINCustInvoiceJourProformaStatus parmNewStatus(FINCustInvoiceJourProformaStatus _newStatus = newStatus)
    {
        newStatus = _newStatus;
        return _newStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        SetEnumerator setEnumerator = custInvoiceJourProformaRecIdSet.getEnumerator();
        int expiryDaysInvoiceAccount;

        ttsbegin;
        while (setEnumerator.moveNext())
        {
            custInvoicejourProforma = FINCustInvoiceJourProForma::findRecId(setEnumerator.current(), true);
            custInvoicejourProforma.ApprovalStatus = newStatus;

            expiryDaysInvoiceAccount = custInvoicejourProforma.custTable_InvoiceAccount().FINRentalProformaExpireDays;
            expiryDateTime = DateTimeUtil::addDays(DateTimeUtil::getSystemDateTime(), expiryDaysInvoiceAccount ? expiryDaysInvoiceAccount : RORParameters::find().FINRentalProformaExpireDays);

            this.executeStatusSpecificActions();

            custInvoicejourProforma.update();
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>executeStatusSpecificActions</Name>
				<Source><![CDATA[
    protected void executeStatusSpecificActions()
    {
        switch (newStatus)
        {
            case FINCustInvoiceJourProformaStatus::Sent:
                this.executeSend();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>executeSend</Name>
				<Source><![CDATA[
    protected void executeSend()
    {
        custInvoicejourProforma.ApprovalExpiryDate = expiryDateTime;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>