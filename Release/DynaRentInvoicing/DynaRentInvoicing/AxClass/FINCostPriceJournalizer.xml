<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINCostPriceJournalizer</Name>
	<SourceCode>
		<Declaration><![CDATA[
class FINCostPriceJournalizer implements FINIGenericJournalizer
{
    container containerResult; // [ BOBObjectId, ItemId, INVCalculationDateTime, PriceTimeUnitOfMeasure, CostPrice, numOfChargeablePeriods, CostAmount ]

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addResult</Name>
				<Source><![CDATA[
    public void addResult(anytype _result)
    {
        //[objectId, rentalLine.ItemId, DateTimeUtil::date(calculationDateTime), rentalLine.PriceTimeUnit, costPrice, numOfChargeablePeriods, CostAmount]
        containerResult = _result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return containerResult;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedValues)
    {
        containerResult = _packedValues == conNull() ? [ '', '', DateTimeUtil::minValue(), 0, 0, 0, 0] : _packedValues;
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getObjectId</Name>
				<Source><![CDATA[
    public BOBObjectId getObjectId()
    {
        return conPeek(containerResult, 1);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getItemId</Name>
				<Source><![CDATA[
    public ItemId getItemId()
    {
        return conPeek(containerResult, 2);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCalculationDate</Name>
				<Source><![CDATA[
    public TransDate getCalculationDate()
    {
        return conPeek(containerResult, 3);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPriceTimeUnit</Name>
				<Source><![CDATA[
    public RORPriceTimeUnit getPriceTimeUnit()
    {
        return conPeek(containerResult, 4);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCostPrice</Name>
				<Source><![CDATA[
    public CostPrice getCostPrice()
    {
        return conPeek(containerResult, 5);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNumOfChargeablePeriods</Name>
				<Source><![CDATA[
    public INVChargedPeriods getNumOfChargeablePeriods()
    {
        return conPeek(containerResult, 6);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCostAmount</Name>
				<Source><![CDATA[
    public CostAmount getCostAmount()
    {
        return conPeek(containerResult, 7);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getChargedValues</Name>
				<Source><![CDATA[
    public Set getChargedValues()
    {
        BOBObjectId         objectId;
        ItemId              itemId;
        TransDate           calculationDate;
        RORPriceTimeUnit    priceTimeUnit;
        AmountCur           costPriceInPeriodsUnit;
        AmountCur           costAmount;
        int                 numOfChargeablePeriods;
        Counter             idx;

        Set ret = new Set(Types::Container);

        [objectId, itemId, calculationDate, priceTimeUnit, costPriceInPeriodsUnit, numOfChargeablePeriods, costAmount] = containerResult;

        if (costAmount)
        {
            boolean hasCreditAccountType; // Default is false

            FINRentalAccountType    accountType = FINRentalAccountType::CostPrice;
            Description             description = strFmt("@DNR:ProductCostPrice", itemId, costPriceInPeriodsUnit);

            idx += 1;  // What is the use of this index?

            ret.add([accountType, costAmount, description, hasCreditAccountType, 0, idx]);
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>