<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINPriceComponentsAmendmentJournalizer</Name>
	<SourceCode>
		<Declaration><![CDATA[
class FINPriceComponentsAmendmentJournalizer implements FINIGenericJournalizer
{
    // Set of FINTmpInvoicePeriodPrice => values from FINInvoicePeriodAmendment
    container                containerResult;
    Set                      invoicePeriodPriceSet;
    FINTmpInvoicePeriodPrice tmpInvoicePeriodPrice;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addResult</Name>
				<Source><![CDATA[
    public void addResult(anytype _result)
    {
        containerResult = _result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return containerResult;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedValues)
    {
        containerResult         = _packedValues;
        
        if (typeOf(conPeek(containerResult, conLen(containerResult))) == Types::Container)
        {
            return true;
        }

        invoicePeriodPriceSet   = Set::create(containerResult);

        this.populateTmpInvoicePeriodPrice();

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getChargedValues</Name>
				<Source><![CDATA[
    public Set getChargedValues()
    {
        Set ret = new Set(Types::Container);

        FINTmpInvoicePeriodPrice tmpInvoicePeriodPriceLocal = this.getTmpInvoicePeriodPrice();

        while select tmpInvoicePeriodPriceLocal
        {
            ret.add([tmpInvoicePeriodPriceLocal.FromDateTime, tmpInvoicePeriodPriceLocal.ToDateTime, tmpInvoicePeriodPriceLocal.StrValue, tmpInvoicePeriodPriceLocal.RealValue, tmpInvoicePeriodPriceLocal.PriceComponent]);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateTmpInvoicePeriodPrice</Name>
				<Source><![CDATA[
    protected void populateTmpInvoicePeriodPrice()
    {
        SetEnumerator enumerator = invoicePeriodPriceSet.getEnumerator();

        while (enumerator.moveNext())
        {
            buf2Buf(enumerator.current(), tmpInvoicePeriodPrice);
            tmpInvoicePeriodPrice.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTmpInvoicePeriodPrice</Name>
				<Source><![CDATA[
    public FINTmpInvoicePeriodPrice getTmpInvoicePeriodPrice()
    {
        FINTmpInvoicePeriodPrice tmpInvoicePeriodPriceLocal;

        tmpInvoicePeriodPriceLocal.linkPhysicalTableInstance(tmpInvoicePeriodPrice);

        return tmpInvoicePeriodPriceLocal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoicePeriodAmendment</Name>
				<Source><![CDATA[
    [SuppressBPWarningAttribute("BPCheckSkipStatementValidation", "Cannot use skip method without altering functional behavior")]
    public FINInvoicePeriodAmendment getInvoicePeriodAmendment()
    {
        FINInvoicePeriodAmendment priceTable;
        FINTmpInvoicePeriodPrice tmpInvoicePeriodPriceLocal = this.getTmpInvoicePeriodPrice();

        priceTable.setTmp();

        insert_recordset priceTable (FromDateTime, ToDateTime, StrValue, RealValue, PriceComponent)
            select FromDateTime, ToDateTime, StrValue, RealValue, PriceComponent from tmpInvoicePeriodPriceLocal;
        
        return priceTable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>