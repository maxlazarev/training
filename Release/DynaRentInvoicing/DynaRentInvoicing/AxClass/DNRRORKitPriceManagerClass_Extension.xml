<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRRORKitPriceManagerClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(RORKitPriceManager))]
public final class DNRRORKitPriceManagerClass_Extension
{
    // event handler methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calculateAddExtraPrices</Name>
				<Source><![CDATA[
    protected RORTmpKitPriceData calculateAddExtraPrices(RORRentalLine _rentalLine, RORTmpKitPriceData  _tmpKitPriceData)
    {    
        RORRentalLine rentalLine = _rentalLine;
        RORTmpKitPriceData tmpKitPriceData = next calculateAddExtraPrices(_rentalLine, _tmpKitPriceData);
        RORRentalEditorLine     rentalEditorLine;
            
        AmountCur               insuranceGross;
        RORInsurancePercentage  insurancePercentage;
        RORInsuranceCalcBasis   insuranceCalcBasis;
        boolean                 addInsurance;
        AmountCur               deliveryAmount;
        AmountCur               returnAmount;
        boolean                 addDelivery;
        boolean                 addReturn;
    
        rentalEditorLine = RORRentalEditorLine::rentalLine2editorLine(rentalLine);
               
        if (rentalEditorLine)
        {
            insurancePercentage = rentalEditorLine.InsurancePercentage;
            insuranceCalcBasis = rentalEditorLine.InsuranceCalcBasis;
            deliveryAmount = rentalEditorLine.TransportPrice;// Transport price is the same regardless qty
            returnAmount = rentalEditorLine.ReturnTransportPrice;
        }
        else
        {
            switch (rentalLine.TableId)
            {
                case tableNum(SalesLine) :
                    SalesLine salesLine = rentalLine as SalesLine;
                    deliveryAmount = salesLine.RORDeliveryNetAmount;
                    returnAmount = salesLine.RORReturnNetAmount;
                    insurancePercentage = salesLine.RORInsuranceNetPercentage;
                    insuranceCalcBasis = (salesLine.RORInsuranceGrossAmount == salesLine.RORInsuranceNetAmount ? RORInsuranceCalcBasis::Gross : RORInsuranceCalcBasis::Net);
                    break;

                case tableNum(SalesQuotationLine) :
                    SalesQuotationLine salesQuotationLine = rentalLine as SalesQuotationLine;
                    deliveryAmount = salesQuotationLine.RORDeliveryNetAmount;
                    returnAmount = salesQuotationLine.RORReturnNetAmount;
                    insurancePercentage = salesQuotationLine.RORInsuranceNetPercentage;
                    insuranceCalcBasis = (salesQuotationLine.RORInsuranceGrossAmount == salesQuotationLine.RORInsuranceNetAmount ? RORInsuranceCalcBasis::Gross : RORInsuranceCalcBasis::Net);
                    break;

                case tableNum(PurchLine) :
                    PurchLine purchLine = rentalLine as PurchLine;
                    deliveryAmount = purchLine.RORDeliveryNetAmount;
                    returnAmount = purchLine.RORReturnNetAmount;
                    insurancePercentage = purchLine.RORInsuranceNetPercentage;
                    insuranceCalcBasis = (purchLine.RORInsuranceGrossAmount == purchLine.RORInsuranceNetAmount ? RORInsuranceCalcBasis::Gross : RORInsuranceCalcBasis::Net);
                    break;
            }
        }

        addInsurance = (insurancePercentage != 0);
        addDelivery = (deliveryAmount != 0);
        addReturn = (returnAMount != 0);

        if (addInsurance)
        {
            insuranceGross = (rentalLine.RentalGrossAmount * insurancePercentage / 100);
            tmpKitPriceData.InsuranceGross += insuranceGross;
    
            if (insuranceCalcBasis == RORInsuranceCalcBasis::Gross)
            {
                tmpKitPriceData.InsuranceNet += insuranceGross;
            }
            else
            {
                tmpKitPriceData.InsuranceNet += (rentalLine.RORRentalLine::editNetAmount(false, 0) * insurancePercentage / 100);
            }
        }
    
        if (addDelivery)
        {
            tmpKitPriceData.Transport          += rentalEditorLine.TransportPrice;
        }

        if (addReturn)
        {
            tmpKitPriceData.ReturnTransport    += rentalEditorLine.ReturnTransportPrice;
        }
        
    
        return tmpKitPriceData;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>