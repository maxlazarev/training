<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINROROrderAmendmentLogForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(ROROrderAmendmentLog))]
public final class FINROROrderAmendmentLogForm_Extension
{
    private QueryBuildDataSource    qbdsInvoicePeriodAmendment;
    private QueryBuildRange         qbdrToDateTime;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>DNREvent_FINExcludeInvoiced_OnModified</Name>
				<Source><![CDATA[
    [FormControlEventHandler(formControlStr(ROROrderAmendmentLog, FINExcludeInvoiced), FormControlEventType::Modified)]
    public static void DNREvent_FINExcludeInvoiced_OnModified(FormControl _sender, FormControlEventArgs _e)
    {
        Object formRunObj = _sender.formRun() as Object;
        formRunObj.FINFilterInvoiced((_sender as FormCheckBoxControl).checked());
    }

]]></Source>
			</Method>
			<Method>
				<Name>FINFilterInvoiced</Name>
				<Source><![CDATA[
    private void FINFilterInvoiced(boolean _toggleFilter) 
    {
        utcdatetime invoicedUntil;
        FINInvoicePeriodQtyFinancial invoicePeriodQtyFinancial;
        FINInvoicePeriodQtyPhysical invoicePeriodQtyPhysical;
        
        if (!qbdsInvoicePeriodAmendment)
        {
            qbdsInvoicePeriodAmendment = ROROrderAmendmentLog_ds.query().datasourceTable(tableNum(ROROrderAmendmentLog)).addDataSource(tableNum(FINInvoicePeriodAmendment));
            qbdsInvoicePeriodAmendment.addLink(fieldNum(ROROrderAmendmentLog, FINPeriodAmendmentRefRecId), fieldNum(FINInvoicePeriodAmendment, RecId));
        }

        qbdsInvoicePeriodAmendment.enabled(_toggleFilter);

        if (!qbdrToDateTime)
        {
            Common sourceRecord = this.args().record();

            select firstonly PeriodEndDateTime from invoicePeriodQtyFinancial
            order by PeriodEndDateTime desc
            where invoicePeriodQtyFinancial.InvoiceId != ''
                exists join invoicePeriodQtyPhysical
                where invoicePeriodQtyFinancial.InvPeriodQtyPhysicalRecId == invoicePeriodQtyPhysical.RecId
                    && invoicePeriodQtyPhysical.RefRecId    == sourceRecord.RecId
                    && invoicePeriodQtyPhysical.RefTableId  == sourceRecord.TableId;

            invoicedUntil = invoicePeriodQtyFinancial.PeriodEndDateTime;
            
            qbdrToDateTime = qbdsInvoicePeriodAmendment.addRange(fieldNum(FINInvoicePeriodAmendment, ToDateTime));
            qbdrToDateTime.value(strFmt('(%1.%2 > %3)', qbdsInvoicePeriodAmendment.name(),fieldStr(FINInvoicePeriodAmendment, ToDateTime), date2StrXpp(DateTimeUtil::date(invoicedUntil))));
        }
        
        ROROrderAmendmentLog_ds.executeQuery();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>