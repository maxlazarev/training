<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINInvoicePostingAccountSearchCriteria</Name>
	<SourceCode>
		<Declaration><![CDATA[
class FINInvoicePostingAccountSearchCriteria extends FINInvoicePostingSearchCriteria
{
    private FINInvoicePostingSearchParameters   searchParameters;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new (FINInvoicePostingSearchParameters _searchParameters)
    {
        searchParameters    = _searchParameters;
        this.buildSearchValuesList();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static FINInvoicePostingAccountSearchCriteria construct(FINInvoicePostingSearchParameters _searchParameters)
    {
        return new FINInvoicePostingAccountSearchCriteria(_searchParameters);
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildSearchValuesList</Name>
				<Source><![CDATA[
    protected void buildSearchValuesList()
    {
        this.buildSearchValuesListForTableGroupAll();
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateInvoicePostingSearchState</Name>
				<Source><![CDATA[
    public void populateInvoicePostingSearchState(anytype _searchValue)
    {
        FINInvoicePosting invoicePosting = invoicePostingSearchState.parmInvoicePosting();
        invoicePosting.initFromPostingParameterBase(searchParameters);
        invoicePosting.CustVendCode = _searchValue;
        invoicePosting.CustVendRelation = FINInvoicePosting::accountRelation(_searchValue, searchParameters.AccountNum, searchParameters.AccountGroup);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustSearchCriteria</Name>
				<Source><![CDATA[
    public boolean mustSearchCriteria(anytype _searchValue)
    {
        InventCustVendRel accountRelation = FINInvoicePosting::accountRelation(_searchValue, searchParameters.AccountNum, searchParameters.AccountGroup);
        return this.accountRelationExists(_searchValue, accountRelation);
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountRelationExists</Name>
				<Source><![CDATA[
    private boolean accountRelationExists(TableGroupAll _accountCode,CustVendRel _accountRelation)
    {
        FINInvoicePosting   localInvoicePosting;
        container           cachedResult;
        boolean             result;

        if (_accountCode == TableGroupAll::All || _accountRelation == '')
        {
            // All always exists
            return true;
        }

        cachedResult = FINInvoicePostingSetupCache::getAccountRelationExists(_accountCode, _accountRelation);
        if (cachedResult == conNull())
        {
            select firstonly RecId from localInvoicePosting
            where localInvoicePosting.CustVendCode  == _accountCode
            &&    localInvoicePosting.CustVendRelation == _accountRelation;

            result = (localInvoicePosting.RecId != 0);
            FINInvoicePostingSetupCache::insertAccountRelationExists(_accountCode, _accountRelation, result);
        }
        else
        {
            [result] = cachedResult;
        }

        return result;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>