<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINConsumptionJournalizer</Name>
	<SourceCode>
		<Declaration><![CDATA[
class FINConsumptionJournalizer implements FINIGenericJournalizer
{
    Set consumptionPriceSet = new Set(Types::Container);

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addResult</Name>
				<Source><![CDATA[
    public void addResult(anytype _result)
    {
        // [ amount, description ]
        consumptionPriceSet.add(_result);
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return consumptionPriceSet.pack();
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedValues)
    {
        consumptionPriceSet = _packedValues == conNull() ? new Set(Types::Container) : Set::create(_packedValues);
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getChargedValues</Name>
				<Source><![CDATA[
    public Set getChargedValues()
    {
        SetEnumerator enumerator = consumptionPriceSet.getEnumerator();
        Set ret = new Set(Types::Container);
        Counter idx;

        while (enumerator.moveNext())
        {
            FINRentalAccountType accountType = FINRentalAccountType::Consumption;
            AmountCur amount;
            Description description;

            [amount, description] = enumerator.current();

            if (amount)
            {
                boolean hasCreditAccountType; // Default is false
                idx += 1;
                ret.add([accountType, amount, description, hasCreditAccountType, 0, idx]);
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>