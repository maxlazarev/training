<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINVendEditInvoiceForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(VendEditInvoice))]
public final class FINVendEditInvoiceForm_Extension
{
    private boolean isSubRentalPosting;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    // chain-of-command wrapper methods
    void init()
    {
        next init();

        //repeated to have the same result for the local variable parmid as in the original code.
        ParmId parmId = purchFormLetter.parmId();
        VendInvoiceInfoTable    vendInvoiceInfoTableLocal;

        select firstOnly vendInvoiceInfoTableLocal
        where vendInvoiceInfoTableLocal.ParmId == parmId;

        PurchFormLetterContract purchFormLetterContract = purchFormLetter.getPurchFormLetterContract();
        purchFormLetterContract.FINparmPendingVendInvoiceInfoTable(vendInvoiceInfoTableLocal);

        isSubRentalPosting = purchFormLetterContract.RORIsSubRentalPosting();

        FINRentalInvoiceDetail.visible(isSubRentalPosting);
        VendInvoiceInfoLine_FINLineAmount.visible(isSubRentalPosting);
        this.design().controlName(formControlStr(VendEditInvoice, PurchParmLine_LineAmount)).visible(!isSubRentalPosting);
        this.design().controlName(formControlStr(VendEditInvoice, VendInvoiceInfoLine_FINEditAjustedLineAmount)).visible(isSubRentalPosting);

        FormDataSource vendInvoiceInfoLine_ds = this.dataSource(formDataSourceStr(VendEditInvoice, VendInvoiceInfoLine));
        vendInvoiceInfoLine_ds.object(fieldNum(VendInvoiceInfoLine, FINVariance)).visible(isSubRentalPosting);
        PurchParmUpdate_ds.object(fieldNum(PurchParmUpdate, FINForceInvoiceUntilPoint)).visible(isSubRentalPosting);

        if (isSubRentalPosting)
        {
            FINRentalOrderTimezoneCheck::check(purchFormLetter.purchTable(), FINTimezoneCheckProcess::Invoice);
        } 
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    void close(boolean _saveAndClose)
    {
        next close(_saveAndClose);
        
        if (isSubRentalPosting)
        {
            runAsync(classNum(FINInvoiceServiceController_SubRentalInvoice), staticMethodStr(FINInvoiceServiceController_SubRentalInvoice,  cleanUpOrphanCalcParmAsync), [PurchParmUpdate.ParmId]);
        }
    }

]]></Source>
			</Method>			
			<Method>
				<Name>DNREvent_PurchParmUpdateDS_FINForceInvoiceUntilPoint_OnModified</Name>
				<Source><![CDATA[
    // event handler methods

    [FormDataFieldEventHandler(formDataFieldStr(VendEditInvoice, PurchParmUpdate, FINForceInvoiceUntilPoint), FormDataFieldEventType::Modified)]
    public static void DNREvent_PurchParmUpdateDS_FINForceInvoiceUntilPoint_OnModified(FormDataObject _sender, FormDataFieldEventArgs _eventArgs)
    {
        Object formRunObj = _sender.datasource().formRun() as Object;
        formRunObj.updateDocWithSpecQty();
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_VendInvoiceInfoLineDS_OnActivated</Name>
				<Source><![CDATA[
    [FormDataSourceEventHandler(formDataSourceStr(VendEditInvoice, VendInvoiceInfoLine), FormDataSourceEventType::Activated)]
    public static void DNREvent_VendInvoiceInfoLineDS_OnActivated(FormDataSource _sender, FormDataSourceEventArgs _eventArgs)
    {
        VendInvoiceInfoLine vendInvoiceInfoLine = _sender.cursor() as VendInvoiceInfoLine;
        PurchLine purchLine = vendInvoiceInfoLine.purchLine();
        boolean isRental = (purchLine.RORTradeType == RORTradeType::Rental || purchLine.RORTradeType == RORTradeType::SubRental);

        _sender.formRun().design().controlName(formControlStr(VendEditInvoice, FINRentalInvoiceDetail)).enabled(isRental);
        _sender.formRun().design().controlName(formControlStr(VendEditInvoice, FINVendInvoiceTransPeriods)).enabled(isRental);
        _sender.formRun().design().controlName(formControlStr(VendEditInvoice, VendInvoiceInfoLine_FINEditAjustedLineAmount)).allowEdit(isRental);
        
        _sender.object(fieldNum(VendInvoiceInfoLine, FINLineAmount)).allowEdit(!isRental);
        _sender.object(fieldNum(VendInvoiceInfoLine, FINVariance)).allowEdit(isRental);
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_VendInvoiceInfoLine_FINEditAjustedLineAmountCTRL_OnModified</Name>
				<Source><![CDATA[
    [FormControlEventHandler(formControlStr(VendEditInvoice, VendInvoiceInfoLine_FINEditAjustedLineAmount), FormControlEventType::Modified)]
    public static void DNREvent_VendInvoiceInfoLine_FINEditAjustedLineAmountCTRL_OnModified(FormControl _sender, FormControlEventArgs _e)
    {
        Object formRunObj = _sender.formRun() as Object;
        formRunObj.checkIfMatchedAndRefresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_VendInvoiceInfoLineDS_FINVariance_OnModified</Name>
				<Source><![CDATA[
    [FormDataFieldEventHandler(formDataFieldStr(VendEditInvoice, VendInvoiceInfoLine, FINVariance), FormDataFieldEventType::Modified)]
    public static void DNREvent_VendInvoiceInfoLineDS_FINVariance_OnModified(FormDataObject _sender, FormDataFieldEventArgs _e)
    {
        Object formRunObj = _sender.datasource().formRun() as Object;
        formRunObj.checkIfMatchedAndRefresh();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>