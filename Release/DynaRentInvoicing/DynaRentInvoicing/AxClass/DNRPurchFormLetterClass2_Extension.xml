<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRPurchFormLetterClass2_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(PurchFormLetter))]
public final class DNRPurchFormLetterClass2_Extension
{
    private DocumentStatus documentStatus;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>reSelect</Name>
				<Source><![CDATA[
    public void  reSelect(PurchParmUpdate  _purchParmUpdate, InventLocationId _inventLocationId)
    {
        container outputContainer;
        PurchParmUpdate purchParmUpdate = this.purchParmUpdate();

        if (purchParmUpdate.SpecQty         != _purchParmUpdate.SpecQty
        ||  purchParmUpdate.CreditRemaining != _purchParmUpdate.CreditRemaining
        // <GEEPL>
        ||  this.parmInventLocationId_PL()  != _inventLocationId
        // </GEEPL>
        )
        {
            // do only standard code
        }
        else if (this.FINMustReSelect(purchParmUpdate, _purchParmUpdate))
        {
            purchParmUpdate = _purchParmUpdate;
            this.purchParmUpdate(purchParmUpdate);
            this.creditRemaining(purchParmUpdate.CreditRemaining);
            // <GEEPL>
            this.parmInventLocationId_PL(_inventLocationId);
            // </GEEPL>

            outputContainer = PurchFormletterParmData::reSelectServer(this.packDataContract(purchFormLetterContract));
            this.getValuesFormletterParmData(this.unpackFormletterParmDataOutputContract(outputContainer));
        }

        next reSelect(_purchParmUpdate, _inventLocationId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>FINMustReSelect</Name>
				<Source><![CDATA[
    // extension methods

    public boolean FINMustReSelect(PurchParmUpdate  _purchParmUpdatePrevious, PurchParmUpdate  _purchParmUpdate)
    {
        boolean ret;

        if (_purchParmUpdatePrevious.INVCalculationDateTime     != _purchParmUpdate.INVCalculationDateTime
        ||  _purchParmUpdatePrevious.INVIncludeCredits          != _purchParmUpdate.INVIncludeCredits
        ||  _purchParmUpdatePrevious.INVIncludeUninvoiced       != _purchParmUpdate.INVIncludeUninvoiced
        ||  _purchParmUpdatePrevious.FINForceInvoiceUntilPoint  != _purchParmUpdate.FINForceInvoiceUntilPoint)
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>FINSetInvoicingOption</Name>
				<Source><![CDATA[
    public void  FINSetInvoicingOption(FINInvoicingOptions _invoicingOption)
    {
        PurchParmUpdate purchParmUpdate = this.purchParmUpdate();
        purchParmUpdate.INVIncludeUninvoiced = _invoicingOption.includeUninvoiced;
        purchParmUpdate.INVIncludeCredits = _invoicingOption.includeCredited;
        purchParmUpdate.INVCalculationDateTime = _invoicingOption.calculationDateTime;
        purchParmUpdate.FINForceInvoiceUntilPoint = _invoicingOption.forceUntilCalculationPoint;
        purchParmUpdate.FINIsCreditPreview = _invoicingOption.isCreditPreview;
        this.purchParmUpdate(purchParmUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>FINParmCalcEstimation</Name>
				<Source><![CDATA[
    public boolean FINParmCalcEstimation(boolean _calcEstimation = this.getPurchFormLetterContract().FINParmIsEstimation())
    {

        return (prmIsDefault(_calcEstimation) ?
                this.getPurchFormLetterContract().FINParmIsEstimation() :
                this.getPurchFormLetterContract().FINParmIsEstimation(_calcEstimation));
    }

]]></Source>
			</Method>
			<Method>
				<Name>FINParmDocumentStatus</Name>
				<Source><![CDATA[
    public DocumentStatus FINParmDocumentStatus(DocumentStatus _documentStatus = documentStatus)
    {
        documentStatus = _documentStatus;
        return documentStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>chooseLines</Name>
				<Source><![CDATA[
    public void chooseLines(boolean _processAdditional, VendDocumentTableMap _parmTable, boolean _append)
    {
        purchFormLetterContract.parmDNRDocumentStatus(this.FINParmDocumentStatus());

        next chooseLines(_processAdditional, _parmTable, _append);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>