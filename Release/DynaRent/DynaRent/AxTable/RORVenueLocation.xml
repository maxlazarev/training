<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RORVenueLocation</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RORVenueLocation extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addEntityLocation</Name>
				<Source><![CDATA[
    public server RORVenueLocation addEntityLocation(container _roles = conNull(), boolean _replaceRoles = false)
    {
        return this.LogisticsEntityLocationMap::addEntityLocation(_roles, _replaceRoles);
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        this.LogisticsEntityLocationMap::delete();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        ttsbegin;

        super();
    
        this.updatePrimaryLocation();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>locationRoleNames</Name>
				<Source><![CDATA[
    public display DirPartyLocationRoleNames locationRoleNames()
    {
        #Characters
        return con2Str(conPeek(this.locationRoles(), 2), #SEMICOLON);
    }

]]></Source>
			</Method>
			<Method>
				<Name>locationRoles</Name>
				<Source><![CDATA[
    public server container locationRoles()
    {
        return this.LogisticsEntityLocationMap::locationRoles();
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        ttsbegin;

        super();
    
        this.updatePrimaryLocation();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePrimaryLocation</Name>
				<Source><![CDATA[
    public void updatePrimaryLocation(boolean _isCallerReplicated = false)
    {
        this.LogisticsEntityLocationMap::updatePrimaryLocation(_isCallerReplicated);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        return this.LogisticsEntityLocationMap::validateDelete();
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByVenueLocation</Name>
				<Source><![CDATA[
    public static RORVenueLocation findByVenueLocation(RefRecId _venue, LogisticsLocationRecId _location, boolean _forupdate = false)
    {
        RORVenueLocation venueLocation;
        venueLocation = LogisticsEntityLocationMap::find(tableNum(RORVenueLocation), _venue, _location, _forupdate);
        return venueLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByVenueLocationRole</Name>
				<Source><![CDATA[
    public static RORVenueLocation findByVenueLocationRole(RefRecId _venue, LogisticsLocationRoleRecId _role, LogisticsLocationIsPostal _isPostal = NoYes::Yes, boolean _forupdate = false)
    {
        RORVenueLocation        venueLocation = null;
        RORVenueLocationRole    venueLocationRole;
    
        if (_venue && _role)
        {
            venueLocation.selectForUpdate(_forupdate);
    
            select firstonly venueLocation
                exists join venueLocationRole
                where venueLocation.Venue == _venue
                &&    venueLocation.IsPostalAddress == _isPostal
                &&    venueLocationRole.VenueLocation == venueLocation.RecId
                &&    venueLocationRole.LocationRole == _role;
        }
    
        return venueLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPrimaryVenueLocation</Name>
				<Source><![CDATA[
    public static RORVenueLocation findPrimaryVenueLocation(RefRecId _venue, boolean _isPostal = true, LogisticsElectronicAddressMethodType _type = LogisticsElectronicAddressMethodType::None, boolean _forupdate = false)
    {
        RORVenueLocation venueLocation;
        venueLocation = LogisticsEntityLocationMap::findPrimaryEntityLocation(tableNum(RORVenueLocation), _venue, _isPostal, _type, _forupdate);
        return venueLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRec</Name>
				<Source><![CDATA[
    public static RORVenueLocation findRec(recId _venueLocationRecId, boolean _forupdate = false)
    {
        RORVenueLocation venueLocation;
        venueLocation = LogisticsEntityLocationMap::findRec(tableNum(RORVenueLocation), _venueLocationRecId, _forupdate);
        return venueLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEntityLocationRoleTableId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the table id of the entity's related location role table.
    /// </summary>
    /// <returns>The location role table id related to the current entity, which is <c>RORVenueLocationRole</c>.</returns>
    public TableId getEntityLocationRoleTableId()
    {
        return tableNum(RORVenueLocationRole);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEntityLocationTableId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the table id of the entity's related location table.
    /// </summary>
    /// <returns>The location table id related to the current entity, otherwise the id of <c>DirPartyLocation</c>
    /// if the entity is mapped to <c>DirPartyMap<c></returns>
    public TableId getEntityLocationTableId()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>logisticsEntityLocationMapInterface</Name>
				<Source><![CDATA[
    public LogisticsEntityLocationMapInterface logisticsEntityLocationMapInterface()
    {
        return LogisticsEntityLocationMapInterface::createInstance(this);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<FormRef>RORVenueTable</FormRef>
	<Label>@DNR6708</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>Venue</TitleField1>
	<TitleField2>Location</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>RORVenueLocation_AK1</ClusteredIndex>
	<PrimaryIndex>RORVenueLocation_AK1</PrimaryIndex>
	<ReplacementKey>RORVenueLocation_AK1</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Venue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Location</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AttentionToAddressLine</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Venue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Location</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@sys80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Venue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Location</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AttentionToAddressLine</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsPostalAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsPrimary</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsPrivate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AttentionToAddressLine</Name>
			<ExtendedDataType>LogisticsAttentionToAddressLine</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsPostalAddress</Name>
			<ExtendedDataType>LogisticsLocationIsPostal</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsPrimary</Name>
			<ExtendedDataType>LogisticsIsPrimary</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsPrivate</Name>
			<ExtendedDataType>LogisticsIsPrivate</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Location</Name>
			<ExtendedDataType>LogisticsLocationRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Venue</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RORVenueLocation_AK1</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Venue</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Location</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PrimaryIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>IsPostalAddress</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>IsPrimary</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LocationIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Location</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>LogisticsEntityLocationMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Entity</MapField>
					<MapFieldTo>Venue</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Location</MapField>
					<MapFieldTo>Location</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IsPostalAddress</MapField>
					<MapFieldTo>IsPostalAddress</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IsPrimary</MapField>
					<MapFieldTo>IsPrimary</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IsPrivate</MapField>
					<MapFieldTo>IsPrivate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>EntityLocation</MapField>
					<MapFieldTo>RecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IsPrimaryTaxRegistration</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation>
			<Name>LogisticsLocation_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>LogisticsLocation</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Location</Name>
					<Field>Location</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RORVenueTable_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>RORVenueTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Venue</Name>
					<Field>Venue</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>