<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BOBRentalType</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BOBRentalType extends Common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>editBusObjAttributeField1</Name>
				<Source><![CDATA[
    edit DFMName editBusObjAttributeField1(boolean  _set,
                                           DFMName  _name)
    {
        DFMName                 nameFound;
        DFMFieldId              fieldId;
        DFMFieldTable           fieldTable;
        DFMFieldGroupContents   fieldGroupContents;
    
        if (_set)
        {
            if (_name)
            {
                fieldId = this.BusObjAttributeField[1];
                select firstOnly FieldId from fieldGroupContents
                where fieldGroupContents.FieldGroupId == this.BusObjAttrFldGrpId
                    join Name from fieldTable
                    where fieldTable.FieldId == fieldGroupContents.FieldId
                    &&    fieldTable.Name like _name;
    
                if (fieldGroupContents)
                {
                    this.BusObjAttributeField[1] = fieldGroupContents.FieldId;
                    nameFound = fieldTable.Name;
                }
                else
                {
                    error(strFmt("@DNR6089", _name,
                                             fieldId2pname(tableNum(BOBRentalType), fieldNum(BOBRentalType, BusObjAttributeField), 1),
                                             tableId2pname(tableNum(DFMFieldTable))));
                }
            }
            else
            {
                this.BusObjAttributeField[1] = '';
            }
        }
        else
        {
            nameFound = DFMFieldTable::find(this.BusObjAttributeField[1]).Name;
        }
    
        return nameFound;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editBusObjAttributeField2</Name>
				<Source><![CDATA[
    edit DFMName editBusObjAttributeField2(boolean  _set,
                                           DFMName  _name)
    {
        DFMName                 nameFound;
        DFMFieldId              fieldId;
        DFMFieldTable           fieldTable;
        DFMFieldGroupContents   fieldGroupContents;
    
        if (_set)
        {
            if (_name)
            {
                fieldId = this.BusObjAttributeField[2];
                select firstOnly FieldId from fieldGroupContents
                where fieldGroupContents.FieldGroupId == this.BusObjAttrFldGrpId
                    join Name from fieldTable
                    where fieldTable.FieldId == fieldGroupContents.FieldId
                    &&    fieldTable.Name like _name;
    
                if (fieldGroupContents)
                {
                    this.BusObjAttributeField[2] = fieldGroupContents.FieldId;
                    nameFound = fieldTable.Name;
                }
                else
                {
                    error(strFmt("@DNR6089", _name,
                                             fieldId2pname(tableNum(BOBRentalType), fieldNum(BOBRentalType, BusObjAttributeField), 2),
                                             tableId2pname(tableNum(DFMFieldTable))));
                }
            }
            else
            {
                this.BusObjAttributeField[2] = '';
            }
        }
        else
        {
            nameFound = DFMFieldTable::find(this.BusObjAttributeField[2]).Name;
        }
    
        return nameFound;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editBusObjAttributeField3</Name>
				<Source><![CDATA[
    edit DFMName editBusObjAttributeField3(boolean  _set,
                                           DFMName  _name)
    {
        DFMName                 nameFound;
        DFMFieldId              fieldId;
        DFMFieldTable           fieldTable;
        DFMFieldGroupContents   fieldGroupContents;
    
        if (_set)
        {
            if (_name)
            {
                fieldId = this.BusObjAttributeField[3];
                select firstOnly FieldId from fieldGroupContents
                where fieldGroupContents.FieldGroupId == this.BusObjAttrFldGrpId
                    join Name from fieldTable
                    where fieldTable.FieldId == fieldGroupContents.FieldId
                    &&    fieldTable.Name like _name;
    
                if (fieldGroupContents)
                {
                    this.BusObjAttributeField[3] = fieldGroupContents.FieldId;
                    nameFound = fieldTable.Name;
                }
                else
                {
                    error(strFmt("@DNR6089", _name,
                                             fieldId2pname(tableNum(BOBRentalType), fieldNum(BOBRentalType, BusObjAttributeField), 3),
                                             tableId2pname(tableNum(DFMFieldTable))));
                }
            }
            else
            {
                this.BusObjAttributeField[3] = '';
            }
        }
        else
        {
            nameFound = DFMFieldTable::find(this.BusObjAttributeField[3]).Name;
        }
    
        return nameFound;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();
    
        this.BusObjAttrFldGrpId = BOBParameters::find().BusObjAttrFldGrpId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    [SuppressBPWarningAttribute("BPCheckSkipStatementValidation", "Cannot use skip method without altering functional behavior")]
    public void insert()
    {
        EcoResProduct ecoResProduct;

        ttsbegin;

        super();
    
        update_recordset ecoResProduct
        setting BOBRentalTypeId = this.RentalTypeId
        where ecoResProduct.DisplayProductNumber == this.RentalTypeId;
        
        // copy business object attribute defaults from the parameters to this new rental type
        if(this.BusObjAttrFldGrpId)
        {
            DFMValueTrans::copyValues(this, this, this.BusObjAttrFldGrpId);
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        BOBRentalType rentalTypeOrig;
    
        rentalTypeOrig = this.orig();
    
        super(_fieldId);
    
        switch (_fieldId)
        {
            case fieldNum(BOBRentalType, BusObjAttrFldGrpId):
                if (this.BusObjAttrFldGrpId != rentalTypeOrig.BusObjAttrFldGrpId)
                {
                    this.BusObjAttributeField[1] = '';
                    this.BusObjAttributeField[2] = '';
                    this.BusObjAttributeField[3] = '';
                }
                break;
    
            case fieldNum(BOBRentalType, RentalTypeId):
                
                if (this.RentalTypeId)
                {
                    EcoResProduct                       ecoResProduct;
                    EcoResTrackingDimensionGroupProduct ecoResTrackingDimensionGroupProduct;

                    select firstonly RecId from ecoResProduct
                    where ecoResProduct.DisplayProductNumber == this.RentalTypeId
                        exists join ecoResTrackingDimensionGroupProduct
                        where ecoResTrackingDimensionGroupProduct.Product == ecoResProduct.RecId;

                    if (ecoResProduct.RecId)
                    {
                        this.Classification = BOBRentalTypeClassification::Serialized;
                    }
                    else
                    {
                        
                        this.Classification = BOBRentalTypeClassification::Bulk;
                    }
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean         ret;
        BOBRentalType   rentalTypeOrig;

    
        ret = super(_fieldIdToCheck);
    
        switch (_fieldIdToCheck)
        {
            case fieldNum(BOBRentalType, RentalTypeId):
                ret = this.validateRentalType();
                break;

            case fieldNum(BOBRentalType, Classification):
                
                rentalTypeOrig = this.orig();

                if (this.RecId
                &&  this.Classification != rentalTypeOrig.Classification
                &&  BOBObjectTable::existRentalTypeId(this.RentalTypeId))
                {
                    ret = checkFailed(strFmt("@DNR6513", "@DNR152", this.RentalTypeId));
                }

                if(ret && this.Classification != rentalTypeOrig.Classification && this.Classification == BOBRentalTypeClassification::Serialized)
                {
                    ret = checkFailed(strFmt("@DNR10180", rentalTypeOrig.Classification, this.Classification)); 
                }
                break;
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateRentalType</Name>
				<Source><![CDATA[
    public boolean validateRentalType()
    {
        boolean         ret = true;
        EcoResProduct   ecoResProduct;
        InventTable     inventTable;
        EcoResStorageDimensionGroupProduct storageDimensionGroupProduct;

        select firstonly crosscompany RecId from ecoResProduct
        where ecoResProduct.DisplayProductNumber == this.RentalTypeId
        &&    ecoResProduct.BOBRentalTypeId == ''
            join TableId from storageDimensionGroupProduct
            where storageDimensionGroupProduct.Product == ecoResProduct.RecId
                notexists join inventTable
                where inventTable.Product == ecoResProduct.RecId;
                    
        if(!ecoResProduct.RecId)
        {
            ret = checkFailed("@DNR10181"); 
        }
            
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static BOBRentalType find(BOBRentalTypeId _rentalTypeId, boolean _forUpdate = false)
    {
        BOBRentalType ret;
    
        if(_rentalTypeId)
        {
            if(_forUpdate)
            {
                ret.selectForUpdate(true);
            }
    
            select firstOnly ret
            where ret.RentalTypeId == _rentalTypeId;
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(BOBRentalTypeId _rentalTypeId)
    {
        return _rentalTypeId && (select firstonly RecId from bobRentalType
                                 where bobRentalType.RentalTypeId == _rentalTypeId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFromItemId</Name>
				<Source><![CDATA[
    public static BOBRentalType findFromItemId(ItemId _itemId, boolean _forUpdate = false)
    {       
        BOBRentalType ret;
  
        if (_itemId)
        {
            EcoResProduct   ecoResProduct;
            InventTable     inventTable;

            ret.selectForUpdate(_forUpdate);

            select firstonly ret
                exists join ecoResProduct
                where ecoResProduct.BOBRentalTypeId == ret.RentalTypeId
                    join TableId from inventTable
                    where inventTable.ItemId == _itemId
                    &&    inventTable.Product == ecoResProduct.RecId;
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkContainsObjGroupSubGroup</Name>
				<Source><![CDATA[
    public static boolean checkContainsObjGroupSubGroup(BOBRentalTypeId _rentalType, BOBObjectGroupId _objectGroupId, BOBObjectSubGroupId _objectSubGroupId)
    {
        BOBRentalType       rentalType;
        boolean             containsGroup;
    
        containsGroup = false;
    
        if (_rentalType && (_objectGroupId || _objectSubGroupId))
        {
            select firstOnly RecId from rentalType
            where rentalType.RentalTypeId == _rentalType
            && (!_objectGroupId     || _objectGroupId    == rentalType.ObjectGroupId)
            && (!_objectSubGroupId  || _objectSubGroupId == rentalType.ObjectSubGroupId);
            
            if(rentalType.RecId)
            {
                containsGroup = true;
            }
        }
    
        return containsGroup;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@DNR7578</DeveloperDocumentation>
	<Label>@DNR4420</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>RentalTypeId</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>TypeIdx</ClusteredIndex>
	<PrimaryIndex>TypeIdx</PrimaryIndex>
	<ReplacementKey>TypeIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Classification</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostingPolicyRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RAGRentalTypeGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RentalTypeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RentalTypeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BusObjAttribute</Name>
			<Label>@DNR6192</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BusObjAttrFldGrpId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BusObjAttributeField</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>editBusObjAttributeField1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>editBusObjAttributeField2</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>editBusObjAttributeField3</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS53631</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RentalTypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InvoicingOptions</Name>
			<Label>@DNR10076</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>INVInvoiceProfileId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>RAGRentalAgreements</Name>
			<Label>@DNR2486</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RAGRentalTypeGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>RORPricing</Name>
			<Label>@DNR6268</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RORReplacementCost</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Setup</Name>
			<Label>@SYS12687</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Classification</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostingPolicyRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ObjectGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ObjectSubGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Rental</Name>
			<Label>@DNR5038</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RORIsMainComponent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RORKitStandalone</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>RentalInvoicing</Name>
			<Label>@DNR867</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>INVInvoiceProfileId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DNRRentalCalendarId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RORPriceTimeUnit</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BusObjAttrFldGrpId</Name>
			<ExtendedDataType>DFMFieldGroupId</ExtendedDataType>
			<Label>@DFM98</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BusObjAttributeField</Name>
			<ExtendedDataType>BOBBusObjAttributeField</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Classification</Name>
			<AllowEdit>No</AllowEdit>
			<EnumType>BOBRentalTypeClassification</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InvoiceProjectHours</Name>
			<ConfigurationKey>DNRDeletedObjects10</ConfigurationKey>
			<HelpText>@DNR8697</HelpText>
			<IsObsolete>Yes</IsObsolete>
			<Label>@DNR5617</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InvoiceRentalOrderLines</Name>
			<ConfigurationKey>DNRDeletedObjects10</ConfigurationKey>
			<HelpText>@DNR8696</HelpText>
			<IsObsolete>Yes</IsObsolete>
			<Label>@DNR5966</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>MonthsWarranty</Name>
			<ConfigurationKey>DNRDeletedObjects72</ConfigurationKey>
			<ExtendedDataType>Months</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
			<Label>@DNR5952</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PostingPolicyRecId</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@DNR6048</HelpText>
			<Label>@DNR6047</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PrimaryItemId</Name>
			<ConfigurationKey>DNRDeletedObjects72</ConfigurationKey>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
			<Label>@DNR5865</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RAGRentalTypeGroupId</Name>
			<ExtendedDataType>RAGRentalTypeGroupId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RentalTypeId</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>BOBRentalTypeId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RORReplacementCost</Name>
			<ExtendedDataType>RORReplacementCost</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RORPriceTimeUnit</Name>
			<ExtendedDataType>RORPriceTimeUnit</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RORIsMainComponent</Name>
			<ExtendedDataType>RORIsMainComponent</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RORKitStandalone</Name>
			<EnumType>RORKitStandalone</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>INVInvoiceProfileId</Name>
			<ExtendedDataType>INVInvoiceProfileId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ObjectGroupId</Name>
			<ExtendedDataType>BOBObjectGroupId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ObjectSubGroupId</Name>
			<ExtendedDataType>BOBObjectSubGroupId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DNRRentalCalendarId</Name>
			<ExtendedDataType>RORCalendarId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TypeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>RentalTypeId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PostingPolicyIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PostingPolicyRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BOBPostingPolicy</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>BOBPostingPolicy</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PostingPolicyRecId</Name>
					<Field>PostingPolicyRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DFMFieldGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>DFMFieldGroup</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BusObjAttrFldGrpId</Name>
					<SourceEDT>DFMFieldGroupId</SourceEDT>
					<Field>BusObjAttrFldGrpId</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>GroupIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RAGRentalTypeGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>RAGRentalTypeGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RAGRentalTypeGroupId</Name>
					<SourceEDT>RAGRentalTypeGroupId</SourceEDT>
					<Field>RAGRentalTypeGroupId</Field>
					<RelatedField>RentalTypeGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>GroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>UnitOfMeasure_RORPriceTimeUnit</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PriceTimeUnit</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>UnitOfMeasureClass</Name>
					<RelatedField>UnitOfMeasureClass</RelatedField>
					<ValueStr>UnitOfMeasureClass::Time</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RORPriceTimeUnit</Name>
					<Field>RORPriceTimeUnit</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>BOBObjectGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>BOBObjectGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ObjectGroupId</Name>
					<Field>ObjectGroupId</Field>
					<RelatedField>ObjectGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>BOBObjectSubGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>BOBObjectSubGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ObjectGroupId</Name>
					<Field>ObjectGroupId</Field>
					<RelatedField>ObjectGroupId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ObjectSubGroupId</Name>
					<Field>ObjectSubGroupId</Field>
					<RelatedField>ObjectSubGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DNRCalendarTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>DNRCalendarTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DNRRentalCalendarId</Name>
					<SourceEDT>RORCalendarId</SourceEDT>
					<Field>DNRRentalCalendarId</Field>
					<RelatedField>CalendarId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CalendarIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResProduct</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>EcoResProduct</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RentalTypeId</Name>
					<Field>RentalTypeId</Field>
					<RelatedField>DisplayProductNumber</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>FINRentalInvoiceProfile</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>FINRentalInvoiceProfile</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>INVInvoiceProfileId</Name>
					<SourceEDT>INVInvoiceProfileId</SourceEDT>
					<Field>INVInvoiceProfileId</Field>
					<RelatedField>InvoiceProfileId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>