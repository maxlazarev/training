<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RAGTmpContractLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RAGTmpContractLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>deleteAgreement</Name>
				<Source><![CDATA[
    public void deleteAgreement(RAGAgreementType _agmtType2Delete, Range _contractIdRange)
    {
        Query                   query;
        QueryBuildDataSource    qbdsContractLine;
        QueryRun                queryRun;
        RAGContractLine         contractLine;
        str                     complexRange;
        ;
    
        // delete underlying contract line(s) from the database
        delete_from contractLine
        where contractLine.ContractId           == this.ContractId
        &&    contractLine.ContractLevel        == this.ContractLevel
        &&    contractLine.RentalTypeRelation   == this.RentalTypeRelation
        &&    contractLine.AgreementType        == _agmtType2Delete;
    
        // find a contract line in the database to replace the relevant contract agreement info on the temporary record
        query = RAGContractLine::buildQuery(_contractIdRange, SortOrder::Descending, true, RAGContractLineQueryType::All);
        qbdsContractLine = query.dataSourceTable(tableNum(RAGContractLine));
        qbdsContractLine.addRange(fieldNum(RAGContractLine, AgreementType)).value(SysQuery::value(_agmtType2Delete));
    
        switch (this.ContractLevel)
        {
            case RAGContractLevel::Contract:
                complexRange = strFmt('(%1 == %2)', fieldStr(RAGContractLine, ContractLevel), any2int(RAGContractLevel::Contract));
                break;
    
            case RAGContractLevel::Group:
                complexRange = strFmt('(((%1 == %2) && (%3 == "%4")) || (%1 == %5))',
                                       fieldStr(RAGContractLine, ContractLevel),
                                       any2int(RAGContractLevel::Group),
                                       fieldStr(RAGContractLine, RentalTypeRelation),
                                       this.RentalTypeRelation,
                                       any2int(RAGContractLevel::Contract));
                break;
    
            case RAGContractLevel::RentalType:
                complexRange = strFmt('(((%1 == %2) && (%3 == "%4")) || ((%1 == %5) && (%3 == "%6")) || (%1 == %7))',
                                      fieldStr(RAGContractLine, ContractLevel),
                                      any2int(RAGContractLevel::RentalType),
                                      fieldStr(RAGContractLine, RentalTypeRelation),
                                      this.RentalTypeRelation,
                                      any2int(RAGContractLevel::Group),
                                      BOBRentalType::find(this.RentalTypeRelation).RAGRentalTypeGroupId,
                                      any2int(RAGContractLevel::Contract));
                break;
    
            default:
                throw error(Error::wrongUseOfFunction(funcName()));
        }
    
        qbdsContractLine.addRange(fieldNum(RAGContractLine, DataAreaId)).value(complexRange);
    
        queryRun = new QueryRun(query);
        queryRun.next();
    
        // apply contract agreement info
        contractLine = queryRun.get(tableNum(RAGContractLine));
        contractLine.AgreementType = _agmtType2Delete; // in case no applicable contract lines were found
        this.setValues(contractLine, true);
        this.update();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getModifications</Name>
				<Source><![CDATA[
    public Map getModifications()
    {
        RAGTmpContractLine  orig = this.orig();
        Map                 modifications = new Map(Types::Enum, Types::Enum); // RAGAgreementType, RAGContractLineModification
        ;
    
        if (this.GrossPrice_Price != orig.GrossPrice_Price
        ||  this.GrossPrice_TimeUnit != orig.GrossPrice_TimeUnit)
        {
            modifications.insert(RAGAgreementType::GrossPrice, this.GrossPrice_isOverridden ?
                                                               RAGContractLineModification::Update :
                                                               RAGContractLineModification::Insert);
        }
    
        if (this.Discount_Percentage != orig.Discount_Percentage)
        {
            modifications.insert(RAGAgreementType::Discount, this.Discount_isOverridden ?
                                                             RAGContractLineModification::Update :
                                                             RAGContractLineModification::Insert);
        }
    
        if (this.NetPrice_Price != orig.NetPrice_Price
        ||  this.NetPrice_TimeUnit != orig.NetPrice_TimeUnit)
        {
            modifications.insert(RAGAgreementType::NetPrice, this.NetPrice_isOverridden ?
                                                             RAGContractLineModification::Update :
                                                             RAGContractLineModification::Insert);
        }
    
        if (this.Insurance_AddInsurance      != orig.Insurance_AddInsurance
        ||  this.Insurance_InsureHireStops   != orig.Insurance_InsureHireStops
        ||  this.Insurance_CalcBasis         != orig.Insurance_CalcBasis)
        {
            modifications.insert(RAGAgreementType::Insurance, this.Insurance_isOverridden ?
                                                              RAGContractLineModification::Update :
                                                              RAGContractLineModification::Insert);
        }
    
        if (this.InsurancePct_Percentage != orig.InsurancePct_Percentage)
        {
            modifications.insert(RAGAgreementType::InsurancePct, this.InsurancePct_isOverridden ?
                                                                 RAGContractLineModification::Update :
                                                                 RAGContractLineModification::Insert);
        }
    
        if (this.Transport_AddTransport  != orig.Transport_AddTransport
        ||  this.Transport_Price         != orig.Transport_Price
        ||  this.Transport_MinQty        != orig.Transport_MinQty
        ||  this.Transport_MaxQty        != orig.Transport_MaxQty
        ||  this.Transport_MustApplyMaxQty != orig.Transport_MustApplyMaxQty
        ||  this.Transport_UseRentalTypePrice != orig.Transport_UseRentalTypePrice)
        {
            modifications.insert(RAGAgreementType::Transport, this.Transport_isOverridden ?
                                                              RAGContractLineModification::Update :
                                                              RAGContractLineModification::Insert);
        }
    
        if (this.ReturnTransport_AddTransport   != orig.ReturnTransport_AddTransport
        ||  this.ReturnTransport_Price          != orig.ReturnTransport_Price
        ||  this.ReturnTransport_MinQty         != orig.ReturnTransport_MinQty
        ||  this.ReturnTransport_MaxQty         != orig.ReturnTransport_MaxQty
        ||  this.ReturnTransport_MustApplyMaxQty  != orig.ReturnTransport_MustApplyMaxQty
        ||  this.ReturnTransport_UseRentalTypePrice   != orig.ReturnTransport_UseRentalTypePrice)
        {
            modifications.insert(RAGAgreementType::ReturnTransport, this.ReturnTransport_isOverridden ?
                                                                    RAGContractLineModification::Update :
                                                                    RAGContractLineModification::Insert);
        }
    
        if (this.Warranty_AddWarranty != orig.Warranty_AddWarranty
        ||  this.Warranty_Price != orig.Warranty_Price)
        {
            modifications.insert(RAGAgreementType::Warranty, this.Warranty_isOverridden ?
                                                             RAGContractLineModification::Update :
                                                             RAGContractLineModification::Insert);
        }
    
        if (this.MinQty_Qty != orig.MinQty_Qty
        ||  this.MinQty_TimeUnit != orig.MinQty_TimeUnit)
        {
            modifications.insert(RAGAgreementType::MinQty, this.MinQty_isOverridden ?
                                                           RAGContractLineModification::Update :
                                                           RAGContractLineModification::Insert);
        }
    
        if (this.MaxQty_Qty != orig.MaxQty_Qty
        ||  this.MaxQty_TimeUnit != orig.MaxQty_TimeUnit
        || this.MaxQty_MustApplyMaxQty != orig.MaxQty_MustApplyMaxQty)
        {
            modifications.insert(RAGAgreementType::MaxQty, this.MaxQty_isOverridden ?
                                                           RAGContractLineModification::Update :
                                                           RAGContractLineModification::Insert);
        }
    
        if (this.Rigging_Price != orig.Rigging_Price
        ||  this.Rigging_TimeUnit != orig.Rigging_TimeUnit
        ||  this.Rigging_MinQty != orig.Rigging_MinQty
        ||  this.Rigging_MaxQty != orig.Rigging_MaxQty
        ||  this.Rigging_MustApplyMaxQty  != orig.Rigging_MustApplyMaxQty
        ||  this.Rigging_UseRentalTypePrice   != orig.Rigging_UseRentalTypePrice)
        {
            modifications.insert(RAGAgreementType::Rigging, this.Rigging_isOverridden ?
                                                            RAGContractLineModification::Update :
                                                            RAGContractLineModification::Insert);
        }
    
        return modifications;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getValues</Name>
				<Source><![CDATA[
    public container getValues(RAGAgreementType _agmtType)
    {
        container con;
        ;
    
        switch(_agmtType)
        {
            case RAGAgreementType::GrossPrice:
                con = [ this.GrossPrice_Price, this.GrossPrice_TimeUnit ];
                break;
    
            case RAGAgreementType::Discount:
                con = [ this.Discount_Percentage ];
                break;
    
            case RAGAgreementType::NetPrice:
                con = [ this.NetPrice_Price, this.NetPrice_TimeUnit ];
                break;
    
            case RAGAgreementType::PriceTier:
                con = conNull();
                break;
    
            case RAGAgreementType::Insurance:
                con = [ this.Insurance_AddInsurance, this.Insurance_InsureHireStops, this.Insurance_CalcBasis ];
                break;
    
            case RAGAgreementType::InsurancePct:
                con = [ this.InsurancePct_Percentage ];
                break;
    
            case RAGAgreementType::Transport:
                con = [ this.Transport_AddTransport, this.Transport_Price, this.Transport_MinQty, this.Transport_MaxQty, this.Transport_MustApplyMaxQty, this.Transport_UseRentalTypePrice];
                break;
    
            case RAGAgreementType::ReturnTransport:
                con = [ this.ReturnTransport_AddTransport, this.ReturnTransport_Price, this.ReturnTransport_MinQty, this.ReturnTransport_MaxQty,this.ReturnTransport_MustApplyMaxQty,this.ReturnTransport_UseRentalTypePrice];
                break;
    
            case RAGAgreementType::TransportTier:
                con = conNull();
                break;
    
            case RAGAgreementType::Warranty:
                con = [ this.Warranty_AddWarranty, this.Warranty_Price ];
                break;
    
            case RAGAgreementType::MinQty:
                con = [ this.MinQty_Qty, this.MinQty_TimeUnit ];
                break;
    
            case RAGAgreementType::MaxQty:
                con = [ this.MaxQty_Qty, this.MaxQty_TimeUnit,this.MaxQty_MustApplyMaxQty];
                break;
    
            case RAGAgreementType::Rigging:
                con = [ this.Rigging_Price, this.Rigging_TimeUnit, this.Rigging_MinQty, this.Rigging_MaxQty,this.Rigging_MustApplyMaxQty, this.Rigging_UseRentalTypePrice];
                break;
    
            default:
                con = conNull();
                break;
        }
    
        return con;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromRORRentalEditorLine</Name>
				<Source><![CDATA[
    public void initFromRORRentalEditorLine(RORRentalEditorLine  _rentalEditorLine)
    {
        /*this.Insurance_AddInsurance         = _rentalEditorLine.InsurancePercentage != 0;
        this.Insurance_InsureHireStops      = _rentalEditorLine.InsureRentalStops;
        this.Insurance_CalcBasis            = _rentalEditorLine.InsuranceCalcBasis;
        this.InsurancePct_Percentage        = _rentalEditorLine.InsurancePercentage;
        this.Transport_AddTransport         = _rentalEditorLine.TransportPrice != 0;
        this.Transport_Price                = _rentalEditorLine.TransportPrice;
        this.ReturnTransport_AddTransport   = _rentalEditorLine.ReturnTransportPrice != 0;
        this.ReturnTransport_Price          = _rentalEditorLine.ReturnTransportPrice;
        */this.Warranty_AddWarranty           = _rentalEditorLine.WarrantyPrice != 0;
        this.Warranty_Price                 = _rentalEditorLine.WarrantyPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifyTmpContractLine</Name>
				<Source><![CDATA[
    public void modifyTmpContractLine()
    {
        RAGContractLine             contractLineDB;
        RecordInsertList            insertList;
        MapEnumerator               enumerator;
        RAGAgreementType            agmtType;
        RAGContractLineModification modification;
        FormDataSource              dataSource;
        Map                         lineModifications;
        RAGContractLevel            currentLevel = this.ContractLevel;
        RAGRentalTypeRelation       currentRelation = this.RentalTypeRelation;
        ;
    
        if (FormDataUtil::isFormDataSource(this))
        {
            dataSource = FormDataUtil::getFormDataSource(this);
        }
    
        ttsbegin;
    
        insertList = new RecordInsertList(tableNum(RAGContractLine));
        lineModifications = this.getModifications();
        enumerator = lineModifications.getEnumerator();
    
        while (enumerator.moveNext())
        {
            agmtType = enumerator.currentKey();
            modification = enumerator.currentValue();
    
            switch (modification)
            {
                case RAGContractLineModification::DoNothing:
                    break;
    
                case RAGContractLineModification::Insert:
    
                    // create a new contract line in the database
                    contractLineDB.clear();
                    contractLineDB.ContractId           = this.ContractId;
                    contractLineDB.ContractLevel        = this.ContractLevel;
                    contractLineDB.RentalTypeRelation   = this.RentalTypeRelation;
                    contractLineDB.AgreementType        = agmtType;
                    contractLineDB.Value                = this.getValues(agmtType);
                    insertList.add(contractLineDB);
    
                    if(contractLineDB.ContractLevel == RAGContractLevel::RentalType && dataSource)
                    {
                        // synchronize current record in form
                        this.setValues(contractLineDB, true);
                        this.update();
                    }
                    break;
    
                case RAGContractLineModification::Update:
    
                    // update the relevant contract line in the database
                    select forupdate firstonly contractLineDB
                    where contractLineDB.ContractId         == this.ContractId
                    &&    contractLineDB.ContractLevel      == this.ContractLevel
                    &&    contractLineDB.RentalTypeRelation == this.RentalTypeRelation
                    &&    contractLineDB.AgreementType      == agmtType;
    
                    contractLineDB.Value = this.getValues(agmtType);
                    contractLineDB.update();
    
                    if (contractLineDB.ContractLevel == RAGContractLevel::RentalType && dataSource)
                    {
                        // synchronize current record in the form
                        this.setValues(contractLineDB, true);
                        this.update();
                    }
                    break;
            }
        }
    
        insertList.insertDatabase();
    
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetOverridden</Name>
				<Source><![CDATA[
    public void resetOverridden()
    {
        this.Discount_isOverridden          = NoYes::No;
        this.GrossPrice_isOverridden        = NoYes::No;
        this.Insurance_isOverridden         = NoYes::No;
        this.InsurancePct_isOverridden      = NoYes::No;
        this.MaxQty_isOverridden            = NoYes::No;
        this.MinQty_isOverridden            = NoYes::No;
        this.NetPrice_isOverridden          = NoYes::No;
        this.Rigging_isOverridden           = NoYes::No;
        this.Transport_isOverridden         = NoYes::No;
        this.ReturnTransport_isOverridden   = NoYes::No;
        this.Warranty_isOverridden          = NoYes::No;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setValues</Name>
				<Source><![CDATA[
    public void setValues(RAGContractLine _contractLine, boolean _forceValues = false)
    {
        boolean isOverridden = (_contractLine.ContractId == this.ContractId &&
                                _contractLine.ContractLevel == this.ContractLevel &&
                                _contractLine.RentalTypeRelation == this.RentalTypeRelation);
        ;
    
        switch(_contractLine.AgreementType)
        {
            case RAGAgreementType::Discount:
                if (!this.Discount_ContractLineSource || _forceValues)
                {
                    if (_contractLine.Value == conNull())
                    {
                        this.Discount_Percentage = 0;
                    }
                    else
                    {
                        [ this.Discount_Percentage ] = _contractLine.Value;
                    }
    
                    this.Discount_ContractIdSource = _contractLine.ContractId;
                    this.Discount_ContractLineSource = _contractLine.RecId;
                    this.Discount_isOverridden = isOverridden;
                }
                break;
    
            case RAGAgreementType::GrossPrice:
                if (!this.GrossPrice_ContractLineSource || _forceValues)
                {
                    if (_contractLine.Value == conNull())
                    {
                        this.GrossPrice_Price = 0;
                        this.GrossPrice_TimeUnit = 0;
                    }
                    else
                    {
                        [ this.GrossPrice_Price, this.GrossPrice_TimeUnit ] = _contractLine.Value;
                    }
    
                    this.GrossPrice_ContractIdSource = _contractLine.ContractId;
                    this.GrossPrice_ContractLineSource = _contractLine.RecId;
                    this.GrossPrice_isOverridden = isOverridden;
                }
                break;
    
            case RAGAgreementType::NetPrice:
                if (!this.NetPrice_ContractLineSource || _forceValues)
                {
                    if (_contractLine.Value == conNull())
                    {
                        this.NetPrice_Price = 0;
                        this.NetPrice_TimeUnit = 0;
                    }
                    else
                    {
                        [ this.NetPrice_Price, this.NetPrice_TimeUnit ] = _contractLine.Value;
                    }
    
                    this.NetPrice_ContractIdSource = _contractLine.ContractId;
                    this.NetPrice_ContractLineSource = _contractLine.RecId;
                    this.NetPrice_isOverridden = isOverridden;
                }
                break;
    
            case RAGAgreementType::Insurance:
                if (!this.Insurance_ContractLineSource || _forceValues)
                {
                    if (_contractLine.Value == conNull())
                    {
                        this.Insurance_AddInsurance = NoYes::No;
                        this.Insurance_InsureHireStops = NoYes::No;
                        this.Insurance_CalcBasis = RORInsuranceCalcBasis::Net;
                    }
                    else
                    {
                        [ this.Insurance_AddInsurance,
                          this.Insurance_InsureHireStops,
                          this.Insurance_CalcBasis ] = _contractLine.Value;
                    }
    
                    this.Insurance_ContractIdSource = _contractLine.ContractId;
                    this.Insurance_ContractLineSource = _contractLine.RecId;
                    this.Insurance_isOverridden = isOverridden;
                }
                break;
    
            case RAGAgreementType::InsurancePct:
                if (!this.InsurancePct_ContractLineSource || _forceValues)
                {
                    if (_contractLine.Value == conNull())
                    {
                        this.InsurancePct_Percentage = 0;
                    }
                    else
                    {
                        [ this.InsurancePct_Percentage ] = _contractLine.Value;
                    }
    
                    this.InsurancePct_ContractIdSource = _contractLine.ContractId;
                    this.InsurancePct_ContractLineSource = _contractLine.RecId;
                    this.InsurancePct_isOverridden = isOverridden;
                }
                break;
    
            case RAGAgreementType::Transport:
                if (!this.Transport_ContractLineSource || _forceValues)
                {
                    if (_contractLine.Value == conNull())
                    {
                        this.Transport_AddTransport = NoYes::No;
                        this.Transport_Price = 0;
                        this.Transport_MinQty = 0;
                        this.Transport_MaxQty = 0;
                        this.Transport_MustApplyMaxQty = false;
                        this.Transport_UseRentalTypePrice = false;
                    }
                    else
                    {
                        [ this.Transport_AddTransport,
                          this.Transport_Price,
                          this.Transport_MinQty,
                          this.Transport_MaxQty,
                          this.Transport_MustApplyMaxQty,
                          this.Transport_UseRentalTypePrice] = _contractLine.Value;
                    }
    
                    this.Transport_ContractIdSource = _contractLine.ContractId;
                    this.Transport_ContractLineSource = _contractLine.RecId;
                    this.Transport_isOverridden = isOverridden;
                }
                break;
    
            case RAGAgreementType::ReturnTransport:
                if (!this.ReturnTransport_ContractLineSource || _forceValues)
                {
                    if (_contractLine.Value == conNull())
                    {
                        this.ReturnTransport_AddTransport = NoYes::No;
                        this.ReturnTransport_Price = 0;
                        this.ReturnTransport_MinQty = 0;
                        this.ReturnTransport_MaxQty = 0;
                        this.ReturnTransport_MustApplyMaxQty = false;
                        this.ReturnTransport_UseRentalTypePrice = false;
                    }
                    else
                    {
                        [ this.ReturnTransport_AddTransport,
                          this.ReturnTransport_Price,
                          this.ReturnTransport_MinQty,
                          this.ReturnTransport_MaxQty,
                          this.ReturnTransport_MustApplyMaxQty,
                          this.ReturnTransport_UseRentalTypePrice] = _contractLine.Value;
                    }
    
                    this.ReturnTransport_ContractIdSource = _contractLine.ContractId;
                    this.ReturnTransport_ContractLineSource = _contractLine.RecId;
                    this.ReturnTransport_isOverridden = isOverridden;
                }
                break;
    
            case RAGAgreementType::Warranty:
                if (!this.Warranty_ContractLineSource || _forceValues)
                {
                    if (_contractLine.Value == conNull())
                    {
                        this.Warranty_AddWarranty = NoYes::No;
                        this.Warranty_Price = 0;
                    }
                    else
                    {
                        [ this.Warranty_AddWarranty, this.Warranty_Price ] = _contractLine.Value;
                    }
    
                    this.Warranty_ContractIdSource = _contractLine.ContractId;
                    this.Warranty_ContractLineSource = _contractLine.RecId;
                    this.Warranty_isOverridden = isOverridden;
                }
                break;
    
            case RAGAgreementType::MinQty:
                if (!this.MinQty_ContractLineSource || _forceValues)
                {
                    if (_contractLine.Value == conNull())
                    {
                        this.MinQty_Qty = 0;
                        this.MinQty_TimeUnit = 0;
                    }
                    else
                    {
                        [ this.MinQty_Qty, this.MinQty_TimeUnit ] = _contractLine.Value;
                    }
    
                    this.MinQty_ContractIdSource = _contractLine.ContractId;
                    this.MinQty_ContractLineSource = _contractLine.RecId;
                    this.MinQty_isOverridden = isOverridden;
                }
                break;
    
            case RAGAgreementType::MaxQty:
                if (!this.MaxQty_ContractLineSource || _forceValues)
                {
                    if (_contractLine.Value == conNull())
                    {
                        this.MaxQty_Qty = 0;
                        this.MaxQty_TimeUnit = 0;
                        this.MaxQty_MustApplyMaxQty = false;
                    }
                    else
                    {
                        [ this.MaxQty_Qty, this.MaxQty_TimeUnit, this.MaxQty_MustApplyMaxQty] = _contractLine.Value;
                    }
    
                    this.MaxQty_ContractIdSource = _contractLine.ContractId;
                    this.MaxQty_ContractLineSource = _contractLine.RecId;
                    this.MaxQty_isOverridden = isOverridden;
                }
                break;
    
            case RAGAgreementType::Rigging:
                if (!this.Rigging_ContractLineSource || _forceValues)
                {
                    if (_contractLine.Value == conNull())
                    {
                        this.Rigging_Price      = 0;
                        this.Rigging_TimeUnit   = 0;
                        this.Rigging_MinQty     = 0;
                        this.Rigging_MaxQty     = 0;
                        this.Rigging_MustApplyMaxQty = false;
                        this.Rigging_UseRentalTypePrice = false;
                    }
                    else
                    {
                        [ this.Rigging_Price,
                          this.Rigging_TimeUnit,
                          this.Rigging_MinQty,
                          this.Rigging_MaxQty,
                          this.Rigging_MustApplyMaxQty,
                          this.Rigging_UseRentalTypePrice] = _contractLine.Value;
                    }
    
                    this.Rigging_ContractIdSource = _contractLine.ContractId;
                    this.Rigging_ContractLineSource = _contractLine.RecId;
                    this.Rigging_isOverridden = isOverridden;
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret = super(_fieldIdToCheck);
        ;
    
        if(ret)
        {
            switch(_fieldIdToCheck)
            {
                case fieldNum(RAGTmpContractLine, GrossPrice_TimeUnit),
                     fieldNum(RAGTmpContractLine, NetPrice_TimeUnit),
                     fieldNum(RAGTmpContractLine, MinQty_TimeUnit),
                     fieldNum(RAGTmpContractLine, MaxQty_TimeUnit),
                     fieldNum(RAGTmpContractLine, Rigging_TimeUnit):
                    if(this.(_fieldIdToCheck))
                    {
                        ret = UnitOfMeasure::find(this.(_fieldIdToCheck)).belongsToUnitOfMeasureClass(UnitOfMeasureClass::Time);
                    }
                    break;
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();
    
        void checkXOR(DictField _field1, DictField _field2)
        {
            if(this.getFieldValue(_field1.name()) && !this.getFieldValue(_field2.name()))
            {
                ret = checkFailed(strFmt("@SYS128228", _field2.label(), _field1.label()));
            }
            else if(this.getFieldValue(_field2.name()) && !this.getFieldValue(_field1.name()))
            {
                ret = checkFailed(strFmt("@SYS128228", _field1.label(), _field2.label()));
            }
        }
        ;
    
        if(ret)
        {
            if(this.GrossPrice_Price ^ this.GrossPrice_TimeUnit)
            {
                checkXor(new DictField(this.TableId, fieldNum(RAGTmpContractLine, GrossPrice_Price)),
                         new DictField(this.TableId, fieldNum(RAGTmpContractLine, GrossPrice_TimeUnit)));
            }
            if(this.NetPrice_Price ^ this.NetPrice_TimeUnit)
            {
                checkXor(new DictField(this.TableId, fieldNum(RAGTmpContractLine, NetPrice_Price)),
                         new DictField(this.TableId, fieldNum(RAGTmpContractLine, NetPrice_TimeUnit)));
            }
            if(this.MinQty_Qty ^ this.MinQty_TimeUnit)
            {
                checkXor(new DictField(this.TableId, fieldNum(RAGTmpContractLine, MinQty_Qty)),
                         new DictField(this.TableId, fieldNum(RAGTmpContractLine, MinQty_TimeUnit)));
            }
            if(this.MaxQty_Qty ^ this.MaxQty_TimeUnit)
            {
                checkXor(new DictField(this.TableId, fieldNum(RAGTmpContractLine, MaxQty_Qty)),
                         new DictField(this.TableId, fieldNum(RAGTmpContractLine, MaxQty_TimeUnit)));
            }
            if(this.Rigging_Price ^ this.Rigging_TimeUnit)
            {
                checkXor(new DictField(this.TableId, fieldNum(RAGTmpContractLine, Rigging_Price)),
                         new DictField(this.TableId, fieldNum(RAGTmpContractLine, Rigging_TimeUnit)));
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>agmtTypeFieldIdsMap</Name>
				<Source><![CDATA[
    public static client Map agmtTypeFieldIdsMap()
    {
        Map ret = new Map(Types::Enum, Types::Container); // { RAGAgreementType, [ FieldId1, FieldId2, ...  ] }
        container fieldIds;
        ;
    
        fieldIds = [ fieldNum(RAGTmpContractLine, GrossPrice_Price),
                     fieldNum(RAGTmpContractLine, GrossPrice_TimeUnit) ];
    
        ret.insert(RAGAgreementType::GrossPrice, fieldIds);
    
        fieldIds = [ fieldNum(RAGTmpContractLine, Discount_Percentage) ];
    
        ret.insert(RAGAgreementType::Discount, fieldIds);
    
        fieldIds = [ fieldNum(RAGTmpContractLine, NetPrice_Price),
                     fieldNum(RAGTmpContractLine, NetPrice_TimeUnit) ];
    
        ret.insert(RAGAgreementType::NetPrice, fieldIds);
    
        fieldIds = [ fieldNum(RAGTmpContractLine, Insurance_AddInsurance),
                     fieldNum(RAGTmpContractLine, Insurance_InsureHireStops),
                     fieldNum(RAGTmpContractLine, Insurance_CalcBasis) ];
    
        ret.insert(RAGAgreementType::Insurance, fieldIds);
    
        fieldIds = [ fieldNum(RAGTmpContractLine, InsurancePct_Percentage) ];
    
        ret.insert(RAGAgreementType::InsurancePct, fieldIds);
    
        fieldIds = [ fieldNum(RAGTmpContractLine, Transport_AddTransport),
                     fieldNum(RAGTmpContractLine, Transport_Price),
                     fieldNum(RAGTmpContractLine, Transport_MinQty),
                     fieldNum(RAGTmpContractLine, Transport_MaxQty) ];
    
        ret.insert(RAGAgreementType::Transport, fieldIds);
    
        fieldIds = [ fieldNum(RAGTmpContractLine, ReturnTransport_AddTransport),
                     fieldNum(RAGTmpContractLine, ReturnTransport_Price),
                     fieldNum(RAGTmpContractLine, ReturnTransport_MinQty),
                     fieldNum(RAGTmpContractLine, ReturnTransport_MaxQty) ];
    
        ret.insert(RAGAgreementType::ReturnTransport, fieldIds);
    
        fieldIds = [ fieldNum(RAGTmpContractLine, Warranty_AddWarranty),
                     fieldNum(RAGTmpContractLine, Warranty_Price) ];
    
        ret.insert(RAGAgreementType::Warranty, fieldIds);
    
        fieldIds = [ fieldNum(RAGTmpContractLine, MinQty_Qty),
                     fieldNum(RAGTmpContractLine, MinQty_TimeUnit) ];
    
        ret.insert(RAGAgreementType::MinQty, fieldIds);
    
        fieldIds = [ fieldNum(RAGTmpContractLine, MaxQty_Qty),
                     fieldNum(RAGTmpContractLine, MaxQty_TimeUnit) ];
    
        ret.insert(RAGAgreementType::MaxQty, fieldIds);
    
        fieldIds = [ fieldNum(RAGTmpContractLine, Rigging_Price),
                     fieldNum(RAGTmpContractLine, Rigging_TimeUnit),
                     fieldNum(RAGTmpContractLine, Rigging_MinQty),
                     fieldNum(RAGTmpContractLine, Rigging_MaxQty) ];
    
        ret.insert(RAGAgreementType::Rigging, fieldIds);
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static RAGTmpContractLine find(RAGTmpContractLine    _tmpBuffer,
                                          RAGContractId         _contractId,
                                          RAGContractLevel      _level,
                                          RAGRentalTypeRelation _relation,
                                          boolean               _forUpdate = false)
    {
        RAGTmpContractLine tmpContractLine;
        ;
    
        tmpContractLine.linkPhysicalTableInstance(_tmpBuffer);
    
        if(_forUpdate)
        {
            tmpContractLine.selectForUpdate(true);
        }
    
        select firstonly tmpContractLine
        where tmpContractLine.ContractLevel == _level
        &&    tmpContractLine.RentalTypeRelation == _relation;
    
        return tmpContractLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromContractLineCache</Name>
				<Source><![CDATA[
    public void initFromContractLineCache(RAGContractLineCache _contractLineCache)
    {
        Global::DNRbuf2bufByFieldName(_contractLineCache, this);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@DNR7578</DeveloperDocumentation>
	<Label>@DNR6598</Label>
	<TitleField1>ContractLevel</TitleField1>
	<TitleField2>RentalTypeRelation</TitleField2>
	<ClusteredIndex>ClusteredIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<PrimaryIndex>ContractLineIdx</PrimaryIndex>
	<TableType>TempDB</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Discount</Name>
			<Label>@SYS11829</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Discount_Percentage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Discount_ContractIdSource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Discount_isOverridden</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>GrossPrice</Name>
			<Label>@DNR314</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>GrossPrice_Price</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GrossPrice_ContractIdSource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GrossPrice_isOverridden</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ContractLevel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RentalTypeRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RentalTypeRelationName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Insurance</Name>
			<Label>@SYS67403</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Insurance_AddInsurance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Insurance_InsureHireStops</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Insurance_CalcBasis</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Insurance_ContractIdSource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Insurance_isOverridden</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InsurancePct</Name>
			<Label>@DNR208</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InsurancePct_Percentage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InsurancePct_ContractIdSource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InsurancePct_isOverridden</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>MaxQty</Name>
			<Label>@DNR1867</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MaxQty_Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaxQty_ContractIdSource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaxQty_isOverridden</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>MinQty</Name>
			<Label>@DNR1866</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MinQty_Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MinQty_ContractIdSource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MinQty_isOverridden</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>NetPrice</Name>
			<Label>@DNR315</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>NetPrice_Price</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NetPrice_ContractIdSource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NetPrice_isOverridden</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ReturnTransport</Name>
			<Label>@SYS50385</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReturnTransport_AddTransport</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReturnTransport_Price</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReturnTransport_MinQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReturnTransport_MaxQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReturnTransport_ContractIdSource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReturnTransport_isOverridden</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Rigging</Name>
			<Label>@DNR2901</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Rigging_Price</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Rigging_MinQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Rigging_MaxQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Rigging_ContractIdSource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Rigging_isOverridden</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Transport</Name>
			<Label>@SYS50385</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Transport_AddTransport</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Transport_Price</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Transport_MinQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Transport_MaxQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Transport_ContractIdSource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Transport_isOverridden</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Warranty</Name>
			<Label>@DNR491</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Warranty_AddWarranty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Warranty_Price</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Warranty_ContractIdSource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Warranty_isOverridden</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContractId</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RAGContractId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ContractLevel</Name>
			<AllowEdit>No</AllowEdit>
			<EnumType>RAGContractLevel</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContractName</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Discount_ContractIdSource</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RAGContractId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Discount_ContractLineSource</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Discount_isOverridden</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RAGIsOverridden</ExtendedDataType>
			<Label>@DNR1803</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Discount_Percentage</Name>
			<ExtendedDataType>RAGDiscPct</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>GrossPrice_ContractIdSource</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RAGContractId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>GrossPrice_ContractLineSource</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>GrossPrice_isOverridden</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RAGIsOverridden</ExtendedDataType>
			<Label>@DNR1802</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>GrossPrice_Price</Name>
			<ExtendedDataType>RAGGrossPrice</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>GrossPrice_TimeUnit</Name>
			<ExtendedDataType>RAGTimeUnit</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InsurancePct_ContractIdSource</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RAGContractId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InsurancePct_ContractLineSource</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InsurancePct_isOverridden</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RAGIsOverridden</ExtendedDataType>
			<Label>@DNR1806</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InsurancePct_Percentage</Name>
			<ExtendedDataType>RORInsurancePercentage</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Insurance_AddInsurance</Name>
			<ExtendedDataType>RAGMustAddInsurance</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Insurance_CalcBasis</Name>
			<EnumType>RORInsuranceCalcBasis</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Insurance_ContractIdSource</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RAGContractId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Insurance_ContractLineSource</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Insurance_InsureHireStops</Name>
			<ExtendedDataType>RORShouldInsureRentalStops</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Insurance_isOverridden</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RAGIsOverridden</ExtendedDataType>
			<Label>@DNR1805</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<ExtendedDataType>LineNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MaxQty_ContractIdSource</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RAGContractId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>MaxQty_ContractLineSource</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>MaxQty_isOverridden</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RAGIsOverridden</ExtendedDataType>
			<Label>@DNR1875</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>MaxQty_MustApplyMaxQty</Name>
			<ExtendedDataType>RAGMustApplyMaxQty</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MaxQty_Qty</Name>
			<ExtendedDataType>RAGMaxQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>MaxQty_TimeUnit</Name>
			<ExtendedDataType>RAGTimeUnit</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MinQty_ContractIdSource</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RAGContractId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>MinQty_ContractLineSource</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>MinQty_isOverridden</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RAGIsOverridden</ExtendedDataType>
			<Label>@DNR1874</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MinQty_Qty</Name>
			<ExtendedDataType>RAGMinQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>MinQty_TimeUnit</Name>
			<ExtendedDataType>RAGTimeUnit</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>NetPrice_ContractIdSource</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RAGContractId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>NetPrice_ContractLineSource</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>NetPrice_isOverridden</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RAGIsOverridden</ExtendedDataType>
			<Label>@DNR1804</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>NetPrice_Price</Name>
			<ExtendedDataType>RAGNetPrice</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>NetPrice_TimeUnit</Name>
			<ExtendedDataType>RAGTimeUnit</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RentalTypeRelation</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RAGRentalTypeRelation</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RentalTypeRelationName</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReturnTransport_AddTransport</Name>
			<ExtendedDataType>RAGMustAddTransport</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReturnTransport_ContractIdSource</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RAGContractId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ReturnTransport_ContractLineSource</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReturnTransport_isOverridden</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RAGIsOverridden</ExtendedDataType>
			<Label>@DNR1807</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReturnTransport_MaxQty</Name>
			<ExtendedDataType>RAGMaxQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReturnTransport_MinQty</Name>
			<ExtendedDataType>RAGMinQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReturnTransport_MustApplyMaxQty</Name>
			<ExtendedDataType>RAGMustApplyMaxQty</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReturnTransport_Price</Name>
			<ExtendedDataType>RAGTransportPrice</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReturnTransport_UseRentalTypePrice</Name>
			<ExtendedDataType>RAGUseRentalTypePrice</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Rigging_ContractIdSource</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RAGContractId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Rigging_ContractLineSource</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Rigging_isOverridden</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RAGIsOverridden</ExtendedDataType>
			<Label>@DNR2903</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Rigging_MaxQty</Name>
			<ExtendedDataType>RAGMaxQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Rigging_MinQty</Name>
			<ExtendedDataType>RAGMinQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Rigging_MustApplyMaxQty</Name>
			<ExtendedDataType>RAGMustApplyMaxQty</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Rigging_Price</Name>
			<ExtendedDataType>RAGRiggingPrice</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Rigging_TimeUnit</Name>
			<ExtendedDataType>RAGTimeUnit</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Rigging_UseRentalTypePrice</Name>
			<ExtendedDataType>RAGUseRentalTypePrice</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Transport_AddTransport</Name>
			<ExtendedDataType>RAGMustAddTransport</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Transport_ContractIdSource</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RAGContractId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Transport_ContractLineSource</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Transport_isOverridden</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RAGIsOverridden</ExtendedDataType>
			<Label>@DNR1807</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Transport_MaxQty</Name>
			<ExtendedDataType>RAGMaxQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Transport_MinQty</Name>
			<ExtendedDataType>RAGMinQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Transport_MustApplyMaxQty</Name>
			<ExtendedDataType>RAGMustApplyMaxQty</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Transport_Price</Name>
			<ExtendedDataType>RAGTransportPrice</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Transport_UseRentalTypePrice</Name>
			<ExtendedDataType>RAGUseRentalTypePrice</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Warranty_AddWarranty</Name>
			<ExtendedDataType>RAGMustAddWarranty</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Warranty_ContractIdSource</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RAGContractId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Warranty_ContractLineSource</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Warranty_isOverridden</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RAGIsOverridden</ExtendedDataType>
			<Label>@DNR1872</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Warranty_Price</Name>
			<ExtendedDataType>RAGWarrantyPrice</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ClusteredIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ContractId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ContractLevel</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNum</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RentalTypeRelation</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ContractLineIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ContractId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ContractLevel</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RentalTypeRelation</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>BOBRentalType</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BOBRentalType</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ContractLevel</Name>
					<Field>ContractLevel</Field>
					<ValueStr>RAGContractLevel::RentalType</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RentalTypeRelation</Name>
					<Field>RentalTypeRelation</Field>
					<RelatedField>RentalTypeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RAGContractTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RAGContractTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>RAGContractTable_ContractLine</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ContractId</Name>
					<SourceEDT>RAGContractId</SourceEDT>
					<Field>ContractId</Field>
					<RelatedField>ContractId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RAGContractTable1</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RAGContractTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RAGContractTable1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Rigging_ContractIdSource</Name>
					<SourceEDT>RAGContractId</SourceEDT>
					<Field>Rigging_ContractIdSource</Field>
					<RelatedField>ContractId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ContractIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RAGContractTable10</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RAGContractTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RAGContractTable10</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InsurancePct_ContractIdSource</Name>
					<SourceEDT>RAGContractId</SourceEDT>
					<Field>InsurancePct_ContractIdSource</Field>
					<RelatedField>ContractId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ContractIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RAGContractTable11</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RAGContractTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RAGContractTable11</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>NetPrice_ContractIdSource</Name>
					<SourceEDT>RAGContractId</SourceEDT>
					<Field>NetPrice_ContractIdSource</Field>
					<RelatedField>ContractId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ContractIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RAGContractTable2</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RAGContractTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RAGContractTable2</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Transport_ContractIdSource</Name>
					<SourceEDT>RAGContractId</SourceEDT>
					<Field>Transport_ContractIdSource</Field>
					<RelatedField>ContractId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ContractIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RAGContractTable3</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RAGContractTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RAGContractTable3</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Insurance_ContractIdSource</Name>
					<SourceEDT>RAGContractId</SourceEDT>
					<Field>Insurance_ContractIdSource</Field>
					<RelatedField>ContractId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ContractIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RAGContractTable4</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RAGContractTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RAGContractTable4</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReturnTransport_ContractIdSource</Name>
					<SourceEDT>RAGContractId</SourceEDT>
					<Field>ReturnTransport_ContractIdSource</Field>
					<RelatedField>ContractId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ContractIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RAGContractTable5</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RAGContractTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RAGContractTable5</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>GrossPrice_ContractIdSource</Name>
					<SourceEDT>RAGContractId</SourceEDT>
					<Field>GrossPrice_ContractIdSource</Field>
					<RelatedField>ContractId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ContractIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RAGContractTable6</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RAGContractTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RAGContractTable6</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MaxQty_ContractIdSource</Name>
					<SourceEDT>RAGContractId</SourceEDT>
					<Field>MaxQty_ContractIdSource</Field>
					<RelatedField>ContractId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ContractIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RAGContractTable7</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RAGContractTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RAGContractTable7</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Warranty_ContractIdSource</Name>
					<SourceEDT>RAGContractId</SourceEDT>
					<Field>Warranty_ContractIdSource</Field>
					<RelatedField>ContractId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ContractIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RAGContractTable8</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RAGContractTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RAGContractTable8</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Discount_ContractIdSource</Name>
					<SourceEDT>RAGContractId</SourceEDT>
					<Field>Discount_ContractIdSource</Field>
					<RelatedField>ContractId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ContractIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RAGContractTable9</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RAGContractTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RAGContractTable9</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MinQty_ContractIdSource</Name>
					<SourceEDT>RAGContractId</SourceEDT>
					<Field>MinQty_ContractIdSource</Field>
					<RelatedField>ContractId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ContractIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RAGRentalTypeGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RAGRentalTypeGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ContractLevel</Name>
					<Field>ContractLevel</Field>
					<ValueStr>RAGContractLevel::Group</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RentalTypeRelation</Name>
					<Field>RentalTypeRelation</Field>
					<RelatedField>RentalTypeGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>UnitOfMeasure_GrossPriceTimeUnit</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>GrossPriceTimeUnit</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>GrossPrice_TimeUnit</Name>
					<Field>GrossPrice_TimeUnit</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>UnitOfMeasure_MaxQtyTimeUnit</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>MaxQtyTimeUnit</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MaxQty_TimeUnit</Name>
					<Field>MaxQty_TimeUnit</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>UnitOfMeasure_MinQtyTimeUnit</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>MinQtyTimeUnit</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MinQty_TimeUnit</Name>
					<Field>MinQty_TimeUnit</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>UnitOfMeasure_NetPriceTimeUnit</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>NetPriceTimeUnit</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>NetPrice_TimeUnit</Name>
					<Field>NetPrice_TimeUnit</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>UnitOfMeasure_RiggingTimeUnit</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>RiggingTimeUnit</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Rigging_TimeUnit</Name>
					<Field>Rigging_TimeUnit</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>