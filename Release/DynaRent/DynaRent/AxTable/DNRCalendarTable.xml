<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRCalendarTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class DNRCalendarTable extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(DNRCalendarId _calendarId)
    {
        if(_calendarId && !DNRCalendarTable::exist(_calendarId))
        {
            return checkFailed(strFmt(DNRCalendarTable::txtNotExist(),_calendarId));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(DNRCalendarId _calendarId)
    {
        return _calendarId &&
            (select RecId from DNRCalendarTable
                where DNRCalendarTable.CalendarId == _calendarId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS25948";
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        if(_fieldIdToCheck == fieldNum(DNRCalendarTable, BasicCalendarId))
        {
            if (this.CalendarId == this.BasicCalendarId)
            {
                ret = ret && checkFailed("@SYS125533");
            }

            if(this.BasicCalendarId)
            {
                ret = ret && this.checkBaseCalendar();
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        #timeConstants
        boolean ret;

        ret = super();

        if(this.StandardWorkDayHours < 0 || this.StandardWorkDayHours > #hoursPerDay)
        {
            // Standard work day must be between 0 and 24 hours
            ret = ret && checkFailed("@SYS190257");
        }

        if(this.CalendarId == this.BasicCalendarId)
        {
            ret = ret && checkFailed("@SYS125533");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkBaseCalendar</Name>
				<Source><![CDATA[
    private boolean checkBaseCalendar()
    {
        boolean             ret = true;
        DNRCalendarTable    workCalendarTable;
        DNRCalendarId       baseCalendarId;
        Set                 calendarIdSet;
        ;

        if(this.BasicCalendarId)
        {
            calendarIdSet = new Set(Types::String);
            calendarIdSet.add(this.CalendarId);
            baseCalendarId = this.BasicCalendarId;

            while(baseCalendarId && ret)
            {
                select firstOnly workCalendarTable
                where workCalendarTable.CalendarId == baseCalendarId;

                baseCalendarId = workCalendarTable.BasicCalendarId;

                if(calendarIdSet.in(baseCalendarId))
                {
                    ret = checkFailed(strFmt("@DNR8450", this.BasicCalendarId));
                }
                else
                {
                    calendarIdSet.add(workCalendarTable.CalendarId);
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static DNRCalendarTable find(DNRCalendarId _calendarId, boolean _forUpdate = false)
    {
        DNRCalendarTable workCalendarTable;

        if(_calendarId)
        {
            workCalendarTable.selectForUpdate(_forUpdate);

            select firstonly workCalendarTable
                where workCalendarTable.CalendarId == _calendarId;
        }

        return workCalendarTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRecId</Name>
				<Source><![CDATA[
    public static DNRCalendarTable findByRecId(RecId   _recId, boolean _forUpdate = false)
    {
        DNRCalendarTable workCalendarTable;

        if(_recId)
        {
            workCalendarTable.selectForUpdate(_forUpdate);

            select firstonly crosscompany workCalendarTable
                where workCalendarTable.RecId == _recId;
        }

        return workCalendarTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSpecialCalendar</Name>
				<Source><![CDATA[
    public static boolean isSpecialCalendar(DNRCalendarId _calendarId)
    {
        boolean         ret;
        RORParameters   rorParameters;
        ;

        if(_calendarId)
        {
            rorParameters = RORParameters::find();

            if(_calendarId == rorParameters.RentalActiveCalendar
            || _calendarId == rorParameters.RentalStopCalendar)
            {
                ret = true;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<FormRef>DNRCalendarTable</FormRef>
	<Label>@SYS11839</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Group</TableGroup>
	<TitleField1>CalendarId</TitleField1>
	<TitleField2>Name</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>CalendarIdx</ClusteredIndex>
	<PrimaryIndex>CalendarIdx</PrimaryIndex>
	<ReplacementKey>CalendarIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CalendarId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CalendarId</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>DNRCalendarId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<ExtendedDataType>CalendarName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BasicCalendarId</Name>
			<ExtendedDataType>DNRBasicCalendarId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>StandardWorkDayHours</Name>
			<ExtendedDataType>StandardWorkDayHours</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CalendarIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>CalendarId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>BaseCalendarTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>DNRCalendarTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>BaseWorkCalendarTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WorkCalendarTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BasicCalendarId</Name>
					<Field>BasicCalendarId</Field>
					<RelatedField>CalendarId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CalendarTable</Name>
			<EntityRelationshipRole>Self relation</EntityRelationshipRole>
			<RelatedTable>DNRCalendarTable</RelatedTable>
			<RelationshipType>Link</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CalendarId</Name>
					<Field>CalendarId</Field>
					<RelatedField>CalendarId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>