<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LBAContractTerm</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LBAContractTerm extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        LBAContractTable contractTable;
    
        super();
    
        contractTable = LBAContractTable::find(this.ContractNumInt, true);
    
        if (contractTable)
        {
            contractTable.ContractStatus = LBAContractStatus::Created;
            contractTable.update();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();
    
        if (!this.TermTransid)
        {
           this.TermTransid = NumberSeq::newGetNum(LBAParameters::numRefTermTransid()).num();
        }
    
        if (!this.TermType)
        {
            this.TermType = LBATermType::Standard;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exists</Name>
				<Source><![CDATA[
    static boolean exists (LBATermTransid _termTransid)
    {
        return(_termTransid && (select firstonly LBAContractTerm
                                where LBAContractTerm.TermTransid == _termTransid).RecId > 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static client server LBAContractTerm find(LBATermTransid _termTransid, boolean _forUpdate = false)
    {
        LBAContractTerm contractTerm;
    
        if (_termTransid)
        {
            contractTerm.selectForUpdate (_forUpdate);
    
            select firstonly contractTerm
            where contractTerm.TermTransid == _termTransid;
        }
    
        return contractTerm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustClearVouchers</Name>
				<Source><![CDATA[
    public static boolean mustClearVouchers()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateContract</Name>
				<Source><![CDATA[
    public static void updateContract(LedgerJournalTrans _trans)
    {
        LBAContractTable    contractTable;
        LBAContractTerm     contractTerm;
        AmountMST           interestAmount;
        VendTrans           vendTrans;
        VendTransOpen       vendTransOpen;
        SpecTrans           specTrans;
        
        LedgerJournalEngine ledgerJournalEngine;
        
        if (!LBAContractTerm::mustClearVouchers())
        {
            return;
        }

        ledgerJournalEngine = LedgerJournalEngine::construct(_trans.ledgerJournalTable().JournalType); //TODO: Need to refine later

        if (ledgerJournalEngine is LedgerJournalEngine_VendPayment)
        {
            update_recordset contractTerm
            setting VoucherPayment = _trans.Voucher
            where !contractTerm.VoucherPayment && contractTerm.VoucherInvoice
                exists join vendTrans
                where vendTrans.Voucher == contractTerm.VoucherInvoice
                    join TableId from vendTransOpen
                    where vendTransOpen.AccountNum  == vendTrans.AccountNum
                    &&    vendTransOpen.RefRecId    == vendTrans.RecId
                        join TableId from specTrans
                        where specTrans.RefTableId  == vendTransOpen.TableId
                        &&    specTrans.RefRecId    == vendTransOpen.RecId
                        &&    specTrans.SpecTableId == _trans.TableId
                        &&    specTrans.SpecRecId   == _trans.RecId;
        }
    
        if (_trans.LBATermTransId)
        {
            switch (_trans.LBATransType)
            {
                case LBATransType::Interest:
                    update_recordSet contractTerm
                    setting VoucherInterest = ''
                    where contractTerm.TermTransId == _trans.LBATermTransId;
                    break;
    
                case LBATransType::Redemption:
                    update_recordSet contractTerm
                    setting VoucherRedemption = ''
                    where contractTerm.TermTransId == _trans.LBATermTransId;
                    break;
    
                case LBATransType::Payment:
                    select firstOnly forUpdate contractTerm
                    where contractTerm.TermTransId == _trans.LBATermTransId
                        join VariableInterest from contractTable
                        where contractTerm.ContractNumInt == contractTerm.ContractNumInt;
    
                    if(contractTable.VariableInterest)
                    {
                        interestAmount = _trans.amount() - _trans.taxAmountInCostPrice() - contractTerm.TermAmountMST;
                        contractTerm.TermAmountMST      = contractTerm.TermAmountMST     + interestAmount;
                        contractTerm.InterestAmountMST  = contractTerm.InterestAmountMST + interestAmount;
                        contractTerm.update();
                    }
                    break;
            }
    
            if (_trans.TransactionType == LedgerTransType::LBAContractsCrediting)
            {
                if (_trans.LBATermTransId)
                {
                    switch (_trans.LBATransType)
                    {
                        case LBATransType::Interest:
                            update_recordSet contractTerm
                            setting VoucherInterest = ''
                            where contractTerm.TermTransId == _trans.LBATermTransId;
                            break;
    
                        case LBATransType::Invoice:
                            update_recordSet contractTerm
                            setting VoucherInvoice = ''
                            where contractTerm.TermTransId == _trans.LBATermTransId;
                            break;
    
                        case LBATransType::Payment:
                            update_recordSet contractTerm
                            setting VoucherPayment = ''
                            where contractTerm.TermTransId == _trans.LBATermTransId;
                            break;
    
                        case LBATransType::Redemption:
                            update_recordSet contractTerm
                            setting VoucherRedemption = ''
                            where contractTerm.TermTransId == _trans.LBATermTransId;
                            break;
    
                        default:
                            throw error("@DNR3049");
                    }
                }
                else
                {
                    throw error("@DNR3050");
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFinalTermTransDate</Name>
				<Source><![CDATA[
    public static TransDate getFinalTermTransDate(LBAContractNumInt _contractNumInt)
    {
        return nextMth((select maxOf(transDate) from LBAContractTerm
            where LBAContractTerm.ContractNumInt == _contractNumInt
            &&   (LBAContractTerm.VoucherInterest
            ||    LBAContractTerm.VoucherPayment
            ||    LBAContractTerm.VoucherRedemption)).TransDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVoucherValue</Name>
				<Source><![CDATA[
    public void setVoucherValue(FieldId _fieldId, Voucher _voucherValue)
    {
        this.(_fieldId) = _voucherValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasUnpostedVoucher</Name>
				<Source><![CDATA[
    public boolean hasUnpostedVoucher(FieldId _fieldId)
    {
        return (this.(_fieldId) != '');
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@DNR7578</DeveloperDocumentation>
	<Label>@DNR5636</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>ContractNumInt</TitleField1>
	<TitleField2>TransDate</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>TermTransIdIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<PrimaryIndex>TermTransIdIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ContractNumInt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InterestAmountMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RedemptionAmountMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Stopped</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TermAmountMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TermTransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TermType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VoucherInterest</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VoucherInvoice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VoucherPayment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VoucherRedemption</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amounts</Name>
			<Label>@SYS75670</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TermAmountMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InterestAmountMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RedemptionAmountMST</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@SYS19924</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TermType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Stopped</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Other</Name>
			<Label>@SYS69996</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ContractNumInt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TermTransId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS50012</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TermType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Stopped</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TermAmountMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InterestAmountMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RedemptionAmountMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VoucherInterest</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VoucherInvoice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VoucherPayment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VoucherRedemption</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Vouchers</Name>
			<Label>@SYS115715</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VoucherPayment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VoucherRedemption</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VoucherInterest</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VoucherInvoice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContractNumInt</Name>
			<ExtendedDataType>LBAContractNumInt</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InterestAmountMST</Name>
			<ExtendedDataType>LBAInterestAmountMST</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RedemptionAmountMST</Name>
			<ExtendedDataType>LBARedemptionAmountMST</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Stopped</Name>
			<ExtendedDataType>LBAStopped</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TermAmountMST</Name>
			<ExtendedDataType>LBATermAmountMST</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TermTransId</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>LBATermTransId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TermType</Name>
			<EnumType>LBATermType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VoucherInterest</Name>
			<ExtendedDataType>LBAVoucherInterest</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VoucherInvoice</Name>
			<ExtendedDataType>LBAVoucherInvoice</ExtendedDataType>
			<HelpText>@DNR5705</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VoucherPayment</Name>
			<ExtendedDataType>LBAVoucherPayment</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VoucherRedemption</Name>
			<ExtendedDataType>LBAVoucherRedemption</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LBCContractTermIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ContractNumInt</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TermType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TermTransIdIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>TermTransId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTransOrigin</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TermTransId</Name>
					<SourceEDT>LBATermTransId</SourceEDT>
					<Field>TermTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventTransIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LBAContractTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>LBAContractTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ContractNumInt</Name>
					<Field>ContractNumInt</Field>
					<RelatedField>ContractNumInt</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>