<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BOBConditionPriorities</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BOBConditionPriorities extends common
{
    #define.unknownEnumValue(255)

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setDescription</Name>
				<Source><![CDATA[
    private server void setDescription()
    {
        if ((this.SubStatusFrom == BOBRentalSubStatus::None    && this.SubStatusTo == BOBRentalSubStatus::None)
        ||  (this.SubStatusFrom == BOBRentalSubStatus::Ordered && this.SubStatusTo == BOBRentalSubStatus::Confirmed))
        {
            this.Description = strFmt("@DNR7052", this.ObjectCategory,
                                                  this.SubStatusFrom == BOBRentalSubStatus::None ? "@DNR7056" : "@SYS7623",
                                                  this.IsAvailable ? "@SYS30545" : "@DNR3205",
                                                  this.LocationType);
        }
        else
        if (this.SubStatusFrom == BOBRentalSubStatus::Picked
        &&  this.SubStatusTo == BOBRentalSubStatus::Outbound)
        {
            this.Description = "@DNR7050";
        }
        else
        {
            this.Description = "@DNR798";
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setImage</Name>
				<Source><![CDATA[
    private server void setImage()
    {
        #ResAppl

        if (this.SubStatusFrom == BOBRentalSubStatus::None && this.SubStatusTo == BOBRentalSubStatus::None)
        {
            this.Image = (this.IsAvailable ? #ImageOK : #ImageInfoLarge);
        }
        else if (this.SubStatusFrom == BOBRentalSubStatus::Ordered && this.SubStatusTo == BOBRentalSubStatus::Confirmed)
        {
            this.Image = #ImageWarningLarge;
        }
        else
        {
            this.Image = #ImageErrorLarge;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean                 ret;
        BOBConditionPriorities  conditionPriorities;
    
        ret = super();
    
        if (this.Priority > 0)
        {
            select firstonly RecId from conditionPriorities
            where conditionPriorities.Priority == this.Priority
            &&    conditionPriorities.RecId    != this.RecId;
    
            if (conditionPriorities)
            {
                ret = checkFailed(strFmt("@DNR7078", this.Priority));
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existAny</Name>
				<Source><![CDATA[
    public static client server boolean existAny()
    {
        return (select firstOnly RecId from BOBConditionPriorities).RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillTable</Name>
				<Source><![CDATA[
    public static server void fillTable()
    {
        BOBConditionPriorities  conditionPriorities;
        Counter                 cnt;
        Set                     objectCategories, subStatuses;
        SetEnumerator           categoryEnumerator, statusEnumerator;
        DictEnum                dictLocationType, dictNoYes;
        RecordInsertList        insertList;
        int                     i, j;
        BOBRentalSubStatus      subStatusTo;               
    
        dictLocationType = new DictEnum(enumNum(BOBLocationType));
        dictNoYes        = new DictEnum(enumNum(NoYes));
        insertList       = new RecordInsertList(tableNum(BOBConditionPriorities));
    
        objectCategories = new Set(Types::Enum);
        objectCategories.add(BOBObjectCategory::Rental);
        objectCategories.add(BOBObjectCategory::SubRental);
    
        subStatuses = new Set(Types::Enum);
        subStatuses.add(BOBRentalSubStatus::None);
        subStatuses.add(BOBRentalSubStatus::Ordered);
    
        statusEnumerator = subStatuses.getEnumerator();
    
        while (statusEnumerator.moveNext())
        {
            for (i = 0; i < dictLocationType.values(); i ++)
            {
                categoryEnumerator = objectCategories.getEnumerator();
    
                while (categoryEnumerator.moveNext())
                {
                    for (j = 0; j < dictNoYes.values(); j ++)
                    {
                        cnt ++;
    
                        subStatusTo = statusEnumerator.current();
                        conditionPriorities.clear();
                        conditionPriorities.Condition      = cnt;
                        conditionPriorities.ObjectCategory = categoryEnumerator.current();
                        conditionPriorities.IsAvailable    = dictNoYes.index2Value(j);
                        conditionPriorities.LocationType   = dictLocationType.index2Value(i);
                        conditionPriorities.SubStatusFrom  = statusEnumerator.current();
                        conditionPriorities.SubStatusTo    = conditionPriorities.SubStatusFrom == BOBRentalSubStatus::Ordered ?
                                                                BOBRentalSubStatus::Confirmed :
                                                                subStatusTo;
                        conditionPriorities.setImage();
                        conditionPriorities.setDescription();
                        insertList.add(conditionPriorities);
                    }
                }
            }
        }
    
        conditionPriorities.clear();
        conditionPriorities.Condition      = cnt + 1;
        conditionPriorities.ObjectCategory = #unknownEnumValue;
        conditionPriorities.LocationType   = #unknownEnumValue;
        conditionPriorities.SubStatusFrom  = BOBRentalSubStatus::Picked;
        conditionPriorities.SubStatusTo    = BOBRentalSubStatus::Outbound;
        conditionPriorities.setImage();
        conditionPriorities.setDescription();
        insertList.add(conditionPriorities);
    
        conditionPriorities.clear();
        conditionPriorities.Condition      = cnt + 2;
        conditionPriorities.ObjectCategory = #unknownEnumValue;
        conditionPriorities.LocationType   = #unknownEnumValue;
        conditionPriorities.SubStatusFrom  = BOBRentalSubStatus::Delivered;
        conditionPriorities.SubStatusTo    = BOBRentalSubStatus::Inbound;
        conditionPriorities.setImage();
        conditionPriorities.setDescription();
        insertList.add(conditionPriorities);
    
        insertList.insertDatabase();
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPriority</Name>
				<Source><![CDATA[
    public static client server BOBConditionPriorities findPriority(BOBPriority _priority,
                                                                    boolean     _forUpdate = false)
    {
        BOBConditionPriorities  conditionPriorities;
    
        if (_priority)
        {
            conditionPriorities.selectForUpdate(_forUpdate);
    
            select firstOnly conditionPriorities
            where conditionPriorities.Priority == _priority;
        }
    
        return conditionPriorities;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@DNR7578</DeveloperDocumentation>
	<Label>@DNR7049</Label>
	<TableGroup>Parameter</TableGroup>
	<TitleField1>SubStatusFrom</TitleField1>
	<TitleField2>IsAvailable</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>PriorityIdx</ClusteredIndex>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<SystemTable>Yes</SystemTable>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Condition</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ObjectCategory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsAvailable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LocationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubStatusFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubStatusTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Image</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Priority</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Condition</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ObjectCategory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsAvailable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LocationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubStatusFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubStatusTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Image</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Priority</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS50012</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Condition</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Image</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Priority</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Condition</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>BOBCondition</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>Description255</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Image</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>ImageRes</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsAvailable</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@DNR7053</HelpText>
			<Label>@SYS30545</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LocationType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<EnumType>BOBLocationType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ObjectCategory</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<EnumType>BOBObjectCategory</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Priority</Name>
			<ExtendedDataType>BOBPriority</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SubStatusFrom</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<EnumType>BOBRentalSubStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SubStatusTo</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<EnumType>BOBRentalSubStatus</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PriorityIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Priority</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>