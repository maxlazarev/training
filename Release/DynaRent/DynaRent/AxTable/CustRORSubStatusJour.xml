<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustRORSubStatusJour</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustRORSubStatusJour extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>amountCur2Euro</Name>
				<Source><![CDATA[
    AmountCur amountCur2Euro(AmountCur _amountCur)
    {
        CurrencyCode euroCurrencyCode;
    
        euroCurrencyCode = Currency::findEuroCurrencyCode();
    
        if (euroCurrencyCode == '')
        {
            return 0;
        }
    
        return CurrencyExchangeHelper::curAmount(CurrencyExchangeHelper::mstAmount(_amountCur,
                                                       this.CurrencyCode,
                                                       this.Date,
                                                       Currency::noYes2UnknownNoYes(this.Triangulation),
                                                       this.ExchRate,
                                                       this.ExchRateSecondary),
                                   euroCurrencyCode, this.Date);
    }

]]></Source>
			</Method>
			<Method>
				<Name>canXMLBeSent</Name>
				<Source><![CDATA[
    public boolean canXMLBeSent()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>cashDiscTxt</Name>
				<Source><![CDATA[
    display CashDiscFreeTxt  cashDiscTxt()
    {
        return CashDisc::cashDiscTxt(this.CashDiscCode,
                                     this.Date,
                                     CustParameters::find().CashDiscVAT,
                                     this.Amount,
                                     this.Amount - this.SumTax,
                                     this.CurrencyCode,
                                     dateNull(),
                                     0,
                                     this.LanguageId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>cashDiscTxt_LanguageId</Name>
				<Source><![CDATA[
    display CashDiscFreeTxt  cashDiscTxt_LanguageId()
    {
        return CashDisc::cashDiscTxt(this.CashDiscCode,
                                     this.Date,
                                     CustParameters::find().CashDiscVAT,
                                     this.Amount,
                                     this.Amount - this.SumTax,
                                     this.CurrencyCode,
                                     dateNull(),
                                     0,
                                     this.LanguageId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>confirmAmount</Name>
				<Source><![CDATA[
    public AmountCur confirmAmount()
    {
        return (this.SalesBalance - this.EndDisc + this.SumMarkup);
    }

]]></Source>
			</Method>
			<Method>
				<Name>confirmAmountEuro</Name>
				<Source><![CDATA[
    display AmountCur confirmAmountEuro()
    {
        return this.amountCur2Euro(this.Amount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a dimension set that can be applied to the <c>defaultDimension</c> field on this table.
    /// </summary>
    /// <param name="_defaultDimension">
    /// A dimension set to apply to the <c>defaultDimension</c> field on this table.
    /// </param>
    /// <param name="_dimensionCopy">
    /// A <c>dimensionCopy</c> object that was previously initialized using the current buffer; optional.
    /// </param>
    /// <returns>
    /// A dimension set that can be applied to the <c>defaultDimension</c> field on this table.
    /// </returns>
    /// <remarks>
    /// This method makes sure that potential linked dimensions are not overwritten.
    /// </remarks>
    
    public DimensionDefault copyDimension(
        DimensionDefault _defaultDimension,
        DimensionCopy    _dimensionCopy = DimensionCopy::newFromTable(this, CompanyInfo::findDataArea(this.DataAreaId).RecId)
        )
    {
        return _dimensionCopy.copy(_defaultDimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>deliveryAddress</Name>
				<Source><![CDATA[
    display LogisticsAddressing deliveryAddress()
    {
        return this.postalAddress().Address;
    }

]]></Source>
			</Method>
			<Method>
				<Name>endDiscEuro</Name>
				<Source><![CDATA[
    display SalesEndDiscAmount endDiscEuro()
    {
        return this.amountCur2Euro(this.EndDisc);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSalesTable</Name>
				<Source><![CDATA[
    void  initFromSalesTable(SalesTable _salesTable)
    {
    
        this.SalesId               = _salesTable.SalesId;
        this.OrderAccount          = _salesTable.CustAccount;
        this.InvoiceAccount        = _salesTable.InvoiceAccount;
    
        this.DeliveryName          = _salesTable.DeliveryName ;
        this.DeliveryPostalAddress = _salesTable.DeliveryPostalAddress;
    
        this.PurchaseOrder         = _salesTable.PurchOrderFormNum;
        this.CustomerRef           = _salesTable.CustomerRef;
        this.DlvTerm               = _salesTable.DlvTerm;
        this.DlvMode               = _salesTable.DlvMode;
        this.CustGroup             = _salesTable.CustGroup;
        this.WorkerSalesTaker      = _salesTable.WorkerSalesTaker;
        this.LanguageId            = _salesTable.LanguageId;
        this.Payment               = _salesTable.Payment;
        this.FixedDueDate          = _salesTable.FixedDueDate;
        this.CashDiscCode          = _salesTable.CashDisc;
    
        if(TaxParameters::find().CashDiscOnInvoice)
        {
            this.CashDiscPercent   = _salesTable.CashDiscPercent;
        }
    
        this.Qty                   = 0;
        this.Volume                = 0;
        this.Weight                = 0;
        this.CostValue             = 0;
        this.SumLineDisc           = 0;
        this.SumMarkup             = 0;
        this.SalesBalance          = 0;
        this.EndDisc               = 0;
        this.RoundOff              = 0;
        this.Amount                = 0;
        this.CurrencyCode          = _salesTable.CurrencyCode;
    
        this.Triangulation         = _salesTable.euroTriangulation(this.Date);
        this.ExchRate              = _salesTable.exchRate(this.Date);
        this.ExchRateSecondary     = _salesTable.exchRateSecondary(this.Date);
        this.DefaultDimension      = this.copyDimension(_salesTable.DefaultDimension);
        this.Deadline              = _salesTable.Deadline;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isProforma</Name>
				<Source><![CDATA[
    public boolean isProforma()
    {
        return !this.SubStatusId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSummaryUpdated</Name>
				<Source><![CDATA[
    public boolean isSummaryUpdated()
    {
        Query       query = this.queryCustConfirmSalesLink();
        QueryRun    queryRun;
    
        query.dataSourceTable(tableNum(CustConfirmSalesLink)).firstOnly(true);
        query.dataSourceTable(tableNum(CustConfirmSalesLink)).addRange(fieldNum(CustConfirmSalesLink, OrigSalesId)).value(SysQuery::valueNot(queryValue(this.SalesId)));
    
        queryRun = new QueryRun(query);
    
        return queryRun.next();
    }

]]></Source>
			</Method>
			<Method>
				<Name>mergeDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a dimension set that holds the merged combination of the current <c>defaultDimension</c>
    /// field on this table and the provided dimension set.
    /// </summary>
    /// <param name="_primaryDefaultDimension">
    /// A first dimension set to merge with the current <c>defaultDimension</c> field on this table.
    /// </param>
    /// <param name="_secondaryDefaultDimension">
    /// A second dimension set to merge with the current <c>defaultDimension</c> field on this table;
    /// optional.
    /// </param>
    /// <param name="_dimensionMerge">
    /// A <c>dimensionMerge</c> object that was previously initialized using the current buffer; optional.
    /// </param>
    /// <returns>
    /// A dimension set that holds the merged combination of the current <c>defaultDimension</c> field on
    /// this table and the provided dimension set.
    /// </returns>
    /// <remarks>
    /// This method makes sure that potential linked dimensions are not overwritten when they are merged.
    /// </remarks>
    
    public DimensionDefault mergeDimension(
        DimensionDefault _primaryDefaultDimension,
        DimensionDefault _secondaryDefaultDimension = 0,
        DimensionMerge   _dimensionMerge = DimensionMerge::newFromTable(this, CompanyInfo::findDataArea(this.DataAreaId).RecId)
        )
    {
        return _dimensionMerge.merge(_primaryDefaultDimension, _secondaryDefaultDimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>netAmount</Name>
				<Source><![CDATA[
    display AmountCurNet netAmount()
    {
        return (this.SalesBalance - this.EndDisc + this.SumMarkup);
    }

]]></Source>
			</Method>
			<Method>
				<Name>netAmountEuro</Name>
				<Source><![CDATA[
    display AmountCurNet netAmountEuro()
    {
        return this.amountCur2Euro(this.netAmount());
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymentCondition</Name>
				<Source><![CDATA[
    display PaymTxt paymentCondition()
    {
        PaymTxt paymCondition;
    
        if (this.FixedDueDate)
        {
            paymCondition = date2StrUsr(this.FixedDueDate, DateFlags::FormatAll);
        }
        else
        {
            paymCondition = PaymTerm::txt(this.Payment, this.LanguageId);
        }
    
        return paymCondition;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postalAddress</Name>
				<Source><![CDATA[
    LogisticsPostalAddress postalAddress()
    {
        return LogisticsPostalAddress::findRecId(this.DeliveryPostalAddress);
    }

]]></Source>
			</Method>
			<Method>
				<Name>printJournal</Name>
				<Source><![CDATA[
    void printJournal(FormletterJournalPrint    formletterJournalPrint  = null,
                      RecordSortedList          journalList             = null)
    {
        Args         parameters = new Args();
        MenuFunction salesConfirmMenu;
    
        salesConfirmMenu = new MenuFunction(menuitemOutputStr(SalesConfirmation), MenuItemType::Output);
    
        parameters.caller(formletterJournalPrint);
    
        if (journalList)
        {
            parameters.object(journalList);
        }
        else
        {
            parameters.record(this);
        }
    
        salesConfirmMenu.run(parameters);
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryCustConfirmSalesLink</Name>
				<Source><![CDATA[
    Query queryCustConfirmSalesLink()
    {
        return SysQuery::queryFromTableRelation(this, tableNum(CustConfirmSalesLink));
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryTaxJournalTrans</Name>
				<Source><![CDATA[
    Query queryTaxJournalTrans(boolean _update = false)
    {
        DictRelation    dictRelation;
        DictField       externdictField;
        DictField       dictField;
        Query           query = new Query();
        Counter         c;
    
        query.addDataSource(tableNum(TaxJournalTrans));
    
        dictRelation = new DictRelation(tableNum(TaxJournalTrans));
        dictRelation.loadTableRelation(this.TableId);
    
        if (dictRelation.lines())
        {
            for (c=1; c <= dictRelation.lines(); c++)
            {
                externdictField = new DictField(this.TableId,dictRelation.lineExternTableValue(c));
                dictField       = new DictField(tableNum(TaxJournalTrans),dictRelation.lineTableValue(c));
                query.dataSourceTable(tableNum(TaxJournalTrans)).addRange(dictField.id()).value(queryValue(this.(externdictField.id())));
            }
        }
    
        query.dataSourceTable(tableNum(TaxJournalTrans)).update(_update);
        query.dataSourceTable(tableNum(TaxJournalTrans)).addRange(fieldNum(TaxJournalTrans, TaxOrigin)).value(SysQuery::valueNot(TaxOrigin::TaxReversed));
    
        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryTmpTaxWorkTrans</Name>
				<Source><![CDATA[
    Query queryTmpTaxWorkTrans(boolean _update = false)
    {
        Query   query = new Query();
    
        query.addDataSource(tableNum(TmpTaxWorkTrans));
    
        query.dataSourceTable(tableNum(TmpTaxWorkTrans)).update(_update);
        query.dataSourceTable(tableNum(TmpTaxWorkTrans)).addRange(fieldNum(TmpTaxWorkTrans, TaxOrigin)).value(SysQuery::valueNot(TaxOrigin::TaxReversed));
    
        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORsmmBusRelTable</Name>
				<Source><![CDATA[
    public smmBusRelTable RORsmmBusRelTable()
    {
        return smmBusRelTable::findByParty(CustTable::find(this.OrderAccount).Party);
    }

]]></Source>
			</Method>
			<Method>
				<Name>roundOffEuro</Name>
				<Source><![CDATA[
    display RoundOff roundOffEuro()
    {
        return this.amountCur2Euro(this.RoundOff);
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesBalanceEuro</Name>
				<Source><![CDATA[
    display AmountCur salesBalanceEuro()
    {
        return this.amountCur2Euro(this.SalesBalance);
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesTable</Name>
				<Source><![CDATA[
    SalesTable salesTable(boolean  _update = false)
    {
        SalesTable          salesTable = SalesTable::find(this.SalesId, _update);
        SalesTableDelete    salesTableDelete;
    
        if (!salesTable && this.SalesId)
        {
            salesTableDelete = SalesTableDelete::find(this.SalesId);
            if (salesTableDelete.SalesTable)
            {
                [salesTable] = salesTableDelete.SalesTable;
            }
        }
    
        return salesTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDocNum</Name>
				<Source><![CDATA[
    void  setDocNum(SalesTable  source)
    {
        this.SubStatusDocNum = strFmt('%1-%2', this.SalesId, CustRORSubStatusJour::numberOfConfirm(source)+1);
    }

]]></Source>
			</Method>
			<Method>
				<Name>sumMarkupEuro</Name>
				<Source><![CDATA[
    display MarkupSumSales  sumMarkupEuro()
    {
        return this.amountCur2Euro(this.SumMarkup);
    }

]]></Source>
			</Method>
			<Method>
				<Name>sumTaxEuro</Name>
				<Source><![CDATA[
    display TaxAmountCur  sumTaxEuro()
    {
        return this.amountCur2Euro(this.SumTax);
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxableBalance</Name>
				<Source><![CDATA[
    server display TaxTaxableAmountCur taxableBalance(TmpTaxWorkTrans _tmpTaxWorkTrans = null)
    {
        TaxJournalTrans taxJournalTrans;
        TmpTaxWorkTrans tmpTaxWorkTrans;
        QueryRun        queryRun;
        TaxBaseCur      taxBaseCur;
        TaxBaseCur      sourceBaseAmountCur;
        TaxExemptTax    taxExemptTax;
    
        if (_tmpTaxWorkTrans)
        {
            queryRun = new QueryRun(this.queryTmpTaxWorkTrans());
            queryRun.setCursor(_tmpTaxWorkTrans);
        }
        else
        {
            queryRun = new QueryRun(this.queryTaxJournalTrans());
        }
        while (queryRun.next())
        {
            if (_tmpTaxWorkTrans)
            {
                tmpTaxWorkTrans = queryRun.get(tableNum(TmpTaxWorkTrans));
                if (tmpTaxWorkTrans)
                {
                    taxExemptTax        = tmpTaxWorkTrans.ExemptTax;
                    sourceBaseAmountCur = tmpTaxWorkTrans.SourceBaseAmountCur;
                }
            }
            else
            {
                taxJournalTrans = queryRun.get(tableNum(TaxJournalTrans));
                if (taxJournalTrans)
                {
                    taxExemptTax        = taxJournalTrans.ExemptTax;
                    sourceBaseAmountCur = taxJournalTrans.SourceBaseAmountCur;
    
                }
            }
    
            if (taxExemptTax == NoYes::No)
            {
                taxBaseCur += sourceBaseAmountCur;
            }
        }
    
        return -taxBaseCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxableBalanceEuro</Name>
				<Source><![CDATA[
    server display TaxTaxableAmountCur taxableBalanceEuro(TmpTaxWorkTrans _tmpTaxWorkTrans = null)
    {
        return this.amountCur2Euro(this.taxableBalance(_tmpTaxWorkTrans));
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxFreeBalance</Name>
				<Source><![CDATA[
    display TaxTaxFreeAmountCur taxFreeBalance(TmpTaxWorkTrans _tmpTaxWorkTrans = null)
    {
        return this.netAmount() - this.taxableBalance(_tmpTaxWorkTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxFreeBalanceEuro</Name>
				<Source><![CDATA[
    display TaxTaxFreeAmountCur taxFreeBalanceEuro(TmpTaxWorkTrans _tmpTaxWorkTrans = null)
    {
        return this.amountCur2Euro(this.taxFreeBalance(_tmpTaxWorkTrans));
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean  exist(SalesId  salesId)
    {
        return salesId && (select CustRORSubStatusJour
                where CustRORSubStatusJour.SalesId == salesId
               ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFromCustRORSubStatusTrans</Name>
				<Source><![CDATA[
    static CustRORSubStatusJour findFromCustRORSubStatusTrans(SalesId               _salesId,
                                                              RORSubStatusId_Rental _subStatusId,
                                                              TransDate             _date,
                                                              boolean               _update = false)
    {
        CustRORSubStatusJour  subStatusJour;
    
        if (_subStatusId)
        {
            subStatusJour.selectForUpdate(_update);
    
            select firstonly subStatusJour
            where subStatusJour.SalesId       == _salesId
            &&    subStatusJour.SubStatusId   == _subStatusId
            &&    subStatusJour.Date   == _date;
        }
    
        return subStatusJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    static CustRORSubStatusJour findRecId(recId recId, boolean update = false)
    {
        CustRORSubStatusJour subStatusJour;
    
        subStatusJour.selectForUpdate(update);
    
        select firstonly subStatusJour
        where subStatusJour.RecId == recId;
    
        return subStatusJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfConfirm</Name>
				<Source><![CDATA[
    static int numberOfConfirm(SalesTable _source)
    {
        CustConfirmJour  custConfirmJour;
    
        select count(RecId) from custConfirmJour
        where custConfirmJour.SalesId == _source.SalesId;

        CustRORSubStatusJour  subStatusJour;
    
        select count(RecId) from subStatusJour
        where subStatusJour.SalesId == _source.SalesId;
    
        return any2int(custConfirmJour.RecId) + any2int(subStatusJour.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>sendElectronically</Name>
				<Source><![CDATA[
    public void sendElectronically(PrintCopyOriginal _printCopyOriginal, boolean _showWarning = true)
    {
        if (this.canXMLBeSent())
        {
            Args args = new Args();
            args.parmEnumType(enumnum(PrintCopyOriginal));
            args.parmEnum(_printCopyOriginal);
            args.record(this);
                    
            new MenuFunction(menuitemOutputStr(EInvoiceGeneration), MenuItemType::Output).run(args);

            info("@SYS344889");
        }
        else
        {
            if (_showWarning)
            {
                warning (strFmt("@SYS100814", this.InvoiceAccount));
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@DNR7578</DeveloperDocumentation>
	<Label>@DNR6206</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>SubStatusId</TitleField1>
	<TitleField2>ParmId</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BOBRentalSubStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CashDiscCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CashDiscPercent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustomerRef</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Date</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Deadline</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryPostalAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DlvMode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DlvTerm</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDisc</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExchRate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExchRateSecondary</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FixedDueDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ParmId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Payment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchaseOrder</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoundOff</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesBalance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubStatusDocNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubStatusId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumLineDisc</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumMarkup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumTax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Triangulation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Volume</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Weight</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkerSalesTaker</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@SYS35893</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BOBRentalSubStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CashDiscCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CashDiscPercent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustomerRef</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Date</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Deadline</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryPostalAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DlvMode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DlvTerm</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDisc</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExchRate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExchRateSecondary</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FixedDueDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ParmId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Payment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchaseOrder</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoundOff</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesBalance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubStatusDocNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubStatusId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumLineDisc</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumMarkup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumTax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Triangulation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Volume</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Weight</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkerSalesTaker</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InterCompany</Name>
			<Label>@SYS74106</Label>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Amount</Name>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<HelpText>@SYS9392</HelpText>
			<Label>@SYS12227</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BOBRentalSubStatus</Name>
			<EnumType>BOBRentalSubStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CashDiscCode</Name>
			<ExtendedDataType>CustCashDiscCode</ExtendedDataType>
			<HelpText>@SYS1392</HelpText>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CashDiscPercent</Name>
			<CountryRegionCodes>ES</CountryRegionCodes>
			<ExtendedDataType>DiscPct</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CostValue</Name>
			<ExtendedDataType>SalesCostValue</ExtendedDataType>
			<HelpText>@SYS14871</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<ExtendedDataType>CustCurrencyCode</ExtendedDataType>
			<HelpText>@SYS20781</HelpText>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustGroup</Name>
			<ExtendedDataType>CustGroupId</ExtendedDataType>
			<HelpText>@SYS16731</HelpText>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@SYS3815</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustomerRef</Name>
			<ExtendedDataType>CustRef</ExtendedDataType>
			<Label>@SYS12056</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>Date</Name>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<HelpText>@SYS10051</HelpText>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>Deadline</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>SalesDeadline</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimension</Name>
			<ExtendedDataType>DimensionDefault</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DeliveryName</Name>
			<ExtendedDataType>CustName</ExtendedDataType>
			<HelpText>@SYS17217</HelpText>
			<Label>@SYS22058</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DeliveryPostalAddress</Name>
			<ExtendedDataType>LogisticsPostalAddressRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DlvMode</Name>
			<ExtendedDataType>CustDlvModeId</ExtendedDataType>
			<HelpText>@SYS971</HelpText>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DlvTerm</Name>
			<ExtendedDataType>CustDlvTermId</ExtendedDataType>
			<HelpText>@SYS13498</HelpText>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>EndDisc</Name>
			<ExtendedDataType>SalesEndDiscAmount</ExtendedDataType>
			<HelpText>@SYS16032</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExchRate</Name>
			<ExtendedDataType>CustExchRate</ExtendedDataType>
			<HelpText>@SYS16317</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExchRateSecondary</Name>
			<ExtendedDataType>ExchrateSecondary</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>FixedDueDate</Name>
			<ExtendedDataType>SalesFixedDueDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InvoiceAccount</Name>
			<ExtendedDataType>CustInvoiceAccount</ExtendedDataType>
			<HelpText>@SYS9396</HelpText>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LanguageId</Name>
			<ExtendedDataType>CustLanguageId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LedgerVoucher</Name>
			<ExtendedDataType>Voucher</ExtendedDataType>
			<HelpText>@SYS15846</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OrderAccount</Name>
			<ExtendedDataType>CustAccount</ExtendedDataType>
			<HelpText>@SYS15261</HelpText>
			<Label>@SYS22016</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ParmId</Name>
			<ExtendedDataType>ParmId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Payment</Name>
			<ExtendedDataType>CustPaymTermId</ExtendedDataType>
			<HelpText>@SYS7636</HelpText>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PurchaseOrder</Name>
			<ExtendedDataType>CustPurchaseOrder</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Qty</Name>
			<ExtendedDataType>SalesQty</ExtendedDataType>
			<HelpText>@SYS13107</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RoundOff</Name>
			<ExtendedDataType>RoundOff</ExtendedDataType>
			<HelpText>@SYS5914</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SalesBalance</Name>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<HelpText>@SYS612</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SalesId</Name>
			<ExtendedDataType>SalesIdBase</ExtendedDataType>
			<HelpText>@SYS15098</HelpText>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@DNR1539</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SubStatusDocNum</Name>
			<ExtendedDataType>RORCustSubStatusDocNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SubStatusId</Name>
			<ExtendedDataType>RORSubStatusId_Rental</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SumLineDisc</Name>
			<ExtendedDataType>SalesSumLineDiscAmount</ExtendedDataType>
			<HelpText>@SYS1095</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SumMarkup</Name>
			<ExtendedDataType>MarkupSumSales</ExtendedDataType>
			<HelpText>@SYS20583</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SumTax</Name>
			<ExtendedDataType>TaxAmountCur</ExtendedDataType>
			<HelpText>@SYS15116</HelpText>
			<Label>@SYS5878</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Triangulation</Name>
			<ExtendedDataType>EUROTriangulation</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Volume</Name>
			<ExtendedDataType>Volume</ExtendedDataType>
			<HelpText>@SYS5756</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Weight</Name>
			<ExtendedDataType>Weight</ExtendedDataType>
			<HelpText>@SYS4291</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>WorkerSalesTaker</Name>
			<ExtendedDataType>SalesTaker</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SalesIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SalesId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Date</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SubStatusId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SubStatusIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SubStatusId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Date</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CustIndex</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>OrderAccount</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Date</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SubStatusId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SubStatusDocNumIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SubStatusDocNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ParmIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ParmId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>DimensionDefaultMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>DefaultDimension</MapField>
					<MapFieldTo>DefaultDimension</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>FormletterJournal</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>OrderId</MapField>
					<MapFieldTo>SalesId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JournalId</MapField>
					<MapFieldTo>SubStatusId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InternalJournalId</MapField>
					<MapFieldTo>SubStatusId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransDate</MapField>
					<MapFieldTo>Date</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>NumberSequenceGroup</MapField>
					<MapFieldTo>SubStatusId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>EndDisc</MapField>
					<MapFieldTo>EndDisc</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CurrencyCode</MapField>
					<MapFieldTo>CurrencyCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExchrateSecondary</MapField>
					<MapFieldTo>ExchRateSecondary</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExchRate</MapField>
					<MapFieldTo>ExchRate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Triangulation</MapField>
					<MapFieldTo>Triangulation</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>RoundOff</MapField>
					<MapFieldTo>RoundOff</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ParmId</MapField>
					<MapFieldTo>ParmId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DefaultDimension</MapField>
					<MapFieldTo>DefaultDimension</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>RORRentalDateTimesHost</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>HeaderId</MapField>
					<MapFieldTo>ParmId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CalendarId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IsModified</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>RORRentalHeader</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>HeaderId</MapField>
					<MapFieldTo>ParmId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CalendarId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>INVInvoiceProfileId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ProjId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VenueCode</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PriceTimeUnit</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventLocationId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSiteId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CustVendAccount</MapField>
					<MapFieldTo>OrderAccount</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CashDisc</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CashDisc</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CashDiscCode</Name>
					<Field>CashDiscCode</Field>
					<RelatedField>CashDiscCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustGroup</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustGroup</Name>
					<Field>CustGroup</Field>
					<RelatedField>CustGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DimensionAttributeValueSet</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DimensionAttributeValueSet_CustConfirmJour</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDimension</Name>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DeliveryPostalAddress_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsPostalAddress</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LogisticsPostalAddress</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LogisticsPostalAddress_CustConfirmJour</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DeliveryPostalAddress</Name>
					<Field>DeliveryPostalAddress</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DlvMode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DlvMode</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DlvMode</Name>
					<Field>DlvMode</Field>
					<RelatedField>Code</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DlvTerm</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DlvTerm</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DlvTerm</Name>
					<Field>DlvTerm</Field>
					<RelatedField>Code</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InvoiceCustomer</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>InvoiceCustomer</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustConfirmJour</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InvoiceAccount</Name>
					<SourceEDT>CustInvoiceAccount</SourceEDT>
					<Field>InvoiceAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LanguageTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LanguageTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LanguageId</Name>
					<Field>LanguageId</Field>
					<RelatedField>LanguageId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>LabelFile</Name>
					<RelatedField>LabelFile</RelatedField>
					<ValueStr>NoYes::Yes</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OrderCustomer</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>OrderCustomer</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustConfirmJour</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OrderAccount</Name>
					<SourceEDT>CustAccount</SourceEDT>
					<Field>OrderAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PaymTerm</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PaymTerm</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Payment</Name>
					<Field>Payment</Field>
					<RelatedField>PaymTermId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesId</Name>
					<Field>SalesId</Field>
					<RelatedField>SalesId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SalesIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WorkerSalesTaker_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>HcmWorker</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>HcmWorker_CustConfirmJour</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WorkerSalesTaker</Name>
					<Field>WorkerSalesTaker</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>