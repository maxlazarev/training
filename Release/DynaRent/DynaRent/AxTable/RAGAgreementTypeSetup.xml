<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RAGAgreementTypeSetup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RAGAgreementTypeSetup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkCreateData</Name>
				<Source><![CDATA[
    public static server void checkCreateData()
    {
        Counter                 enumCounter;
        RAGAgreementTypeSetup   agmtTypeSetup;
        DictEnum                dictEnum;
        RecordInsertList        recordInsertList;
        ;
    
        if((select count(RecId) from RAGAgreementTypeSetup).RecId == 0)
        {
            dictEnum = new DictEnum(enumNum(RAGAgreementType));
            recordInsertList = new RecordInsertList(tableNum(RAGAgreementTypeSetup));
    
            for (enumCounter = 0; enumCounter < dictEnum.values(); enumCounter ++)
            {
                if (dictEnum.index2ConfigurationKey(enumCounter) != configurationKeyNum(DNRDeletedObjects2012))
                {
                    agmtTypeSetup.AgreementType = dictEnum.index2Value(enumCounter);
                    recordInsertList.add(agmtTypeSetup);
                }
            }
    
            recordInsertList.insertDatabase();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static client server RAGAgreementTypeSetup find(RAGAgreementType _agmtType)
    {
        RAGAgreementTypeSetup ret;
        ;
    
        select firstonly ret
        where ret.AgreementType == _agmtType;
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isActive</Name>
				<Source><![CDATA[
    public static client boolean isActive(RAGAgreementType _agmtType, RAGContractLevel _level)
    {
        boolean ret;
        ;
    
        switch (_level)
        {
            case RAGContractLevel::Contract:
                ret = (select firstOnly RecId from RAGAgreementTypeSetup
                       where RAGAgreementTypeSetup.AgreementType == _agmtType
                       &&    RAGAgreementTypeSetup.IsActiveForContract).RecId != 0;
                break;
    
            case RAGContractLevel::Group:
                ret = (select firstOnly RecId from RAGAgreementTypeSetup
                       where RAGAgreementTypeSetup.AgreementType == _agmtType
                       &&    RAGAgreementTypeSetup.IsActiveForGroup).RecId != 0;
    
                break;
    
            case RAGContractLevel::RentalType:
                ret = (select firstOnly RecId from RAGAgreementTypeSetup
                       where RAGAgreementTypeSetup.AgreementType == _agmtType
                       &&    RAGAgreementTypeSetup.IsActiveForRentalType).RecId != 0;
    
                break;
        }
    
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@DNR7578</DeveloperDocumentation>
	<Label>@DNR6582</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>AgreementType</TitleField1>
	<TitleField2>dataAreaId</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>AgreementTypeIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<PrimaryIndex>AgreementTypeIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AgreementType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsActiveForContract</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsActiveForGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsActiveForRentalType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS11887</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AgreementType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsActiveForContract</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsActiveForGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsActiveForRentalType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AgreementType</Name>
			<AllowEdit>No</AllowEdit>
			<EnumType>RAGAgreementType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsActiveForContract</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@DNR6427</HelpText>
			<Label>@DNR6632</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsActiveForGroup</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@DNR6427</HelpText>
			<Label>@SYS40804</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsActiveForRentalType</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@DNR6427</HelpText>
			<Label>@DNR4420</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>AgreementTypeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>AgreementType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>