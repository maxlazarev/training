<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BOBObjectOwnershipLog</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BOBObjectOwnershipLog extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createNewLogEntry</Name>
				<Source><![CDATA[
    public void createNewLogEntry()
    {
        BOBObjectOwnershipLog   newLogEntry;
        BOBObjectView           objectView; // holds current ownership details
        Counter                 retryCount = 3;
        ;
    
        if(this.ObjectId)
        {
            select firstonly objectView
            where objectView.ObjectId == this.ObjectId;
    
            if(objectView)
            {
                newLogEntry.initFromObjectView(objectView);
                newLogEntry.initFromObjectOwnershipLog(this);
    
                if(newLogEntry.validateWrite())
                {
                    // The primary index of this table includes CreatedDateTime.
                    // There are some processes however that change a business object's
                    // ownership in quick succession. So in order to prevent any
                    // duplicate index violations here, we try the insert sereral times.
    
                    try
                    {
                        ttsbegin;

                        newLogEntry.insert();

                        if (isConfigurationkeyEnabled(configurationKeyNum(DNRBusinessObjectViewV2)))
                        {
                            BOBObjectCurrentInfo::updateOwnershipData(newLogEntry);
                        }

                        ttscommit;
                    }
                    catch(Exception::DuplicateKeyException)
                    {
                        if(xSession::currentRetryCount() >= retryCount)
                        {
                            throw Exception::DuplicateKeyExceptionNotRecovered;
                        }
                        else
                        {
                            sleep(1000);
                            retry;
                        }
                    }
                }
                else
                {
                    throw error(strFmt("@DNR6079"));
                }
            }
            else
            {
                throw error(strFmt("@DNR5937", this.ObjectId));
            }
        }
        else
        {
            throw error(Error::missingParameter(null));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromObjectOwnershipLog</Name>
				<Source><![CDATA[
    public void initFromObjectOwnershipLog(BOBObjectOwnershipLog _ownershipParm)
    {
        if(_ownershipParm.FinancialOwnerFlag)
        {
            this.FinancialOwner = _ownershipParm.FinancialOwner;
        }
        if(_ownershipParm.PhysicalOwnerFlag)
        {
            this.PhysicalOwner = _ownershipParm.PhysicalOwner;
        }
        if(_ownershipParm.FirstOnRentDateFlag)
        {
            this.FirstOnRentDate = _ownershipParm.FirstOnRentDate;
        }
        if(_ownershipParm.LastOnRentDateFlag)
        {
            this.LastOnRentDate = _ownershipParm.LastOnRentDate;
        }
        if(_ownershipParm.DepotFlag)
        {
            this.Depot = _ownershipParm.Depot;
        }
        if(_ownershipParm.DepotStartDateFlag)
        {
            this.DepotStartDate = _ownershipParm.DepotStartDate;
        }
        if(_ownershipParm.DepotEndDateFlag)
        {
            this.DepotEndDate = _ownershipParm.DepotEndDate;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromObjectView</Name>
				<Source><![CDATA[
    public void initFromObjectView(BOBObjectView _objectView)
    {
        this.ObjectId           = _objectView.ObjectId;
        this.FinancialOwner     = _objectView.FinancialOwner;
        this.PhysicalOwner      = _objectView.PhysicalOwner;
        this.FirstOnRentDate    = _objectView.FirstOnRentDate;
        this.LastOnRentDate     = _objectView.LastOnRentDate;
        this.Depot              = _objectView.Depot;
        this.DepotStartDate     = _objectView.DepotStartDate;
        this.DepotEndDate       = _objectView.DepotEndDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDepotData</Name>
				<Source><![CDATA[
    private boolean validateDepotData()
    {
        BOBObjectOwnershipLog   prevLog;
        BOBObjectView           objectView; // holds current ownership details
        boolean                 ret;
        boolean                 changeDepot;
        boolean                 changeStartDate;
        boolean                 changeEndDate;
        ;
    
        select firstonly FinancialOwner, PhysicalOwner, FirstOnRentDate, LastOnRentDate, Depot, DepotStartDate, DepotEndDate, Category from objectView
        where objectView.ObjectId == this.ObjectId;
    
        ret = true;
        changeDepot = (this.Depot != objectView.Depot);
        changeStartDate = (this.DepotStartDate != objectView.DepotStartDate);
        changeEndDate = (this.DepotEndDate != objectView.DepotEndDate);
    
        // check if a depot change is allowed
        if(changeDepot || changeStartDate || changeEndDate)
        {
            if(!objectView.PhysicalOwner || !objectView.FirstOnRentDate)
            {
                ret = checkFailed(strFmt("@DNR6097", "@DNR6121", "@DNR5886", "@DNR3769"));
            }
            if(objectView.Category == BOBObjectCategory::Internal || objectView.Category == BOBObjectCategory::External)
            {
                ret = checkFailed(strFmt("@DNR6120", "@DNR6121", BOBObjectCategory::Internal, BOBObjectCategory::External));
            }
        }
    
        // check if all necessary fields have been completed
        if(!this.Depot && (this.DepotStartDate || this.DepotEndDate))
        {
            ret = checkFailed(strFmt("@DNR1166", (this.DepotStartDate ? "@DNR6090" : "@DNR6091"), "@DNR4173"));
        }
        if(this.Depot && !this.DepotStartDate) // 4, 6, 16, 17d, 18, 20d, 20e
        {
            ret = checkFailed(strFmt("@DNR1166", "@DNR4173", "@DNR6090"));
        }
    
        // check if the depot dates conflict with the on rent dates
        if(this.DepotStartDate && this.DepotEndDate && this.DepotEndDate < this.DepotStartDate)
        {
            ret = checkFailed(strFmt("@SYS71085", "@DNR6090", "@DNR6091"));
        }
        if(this.DepotStartDate && this.DepotStartDate < this.FirstOnRentDate)
        {
            ret = checkFailed(strFmt("@SYS50105", "@DNR6090", "@DNR3769"));
        }
        if(this.DepotStartDate && this.LastOnRentDate && this.DepotStartDate > this.LastOnRentDate)
        {
            ret = checkFailed(strFmt("@SYS71085", "@DNR6090", "@DNR3771"));
        }
        if(this.LastOnRentDate && this.DepotEndDate > this.LastOnRentDate)
        {
            ret = checkFailed(strFmt("@SYS71085", "@DNR6091", "@DNR3771"));
        }
    
        // check if the combination of changed depot fields is valid
        if(changeDepot && !changeStartDate && !changeEndDate) // 1, 2, 3
        {
            ret = checkFailed(strFmt("@DNR6181", "@DNR4173", "@DNR6090"));
        }
        if (!changeDepot
        && ((changeStartDate && !changeEndDate) || (!changeStartDate && changeEndDate))
        && (!objectView.Depot || !objectView.DepotStartDate)) // 5, 7, 8, 9
        {
            ret = checkFailed(strFmt("@DNR6097", (changeStartDate ? "@DNR6090" : "@DNR6091"), "@DNR4173", "@DNR6090"));
        }
        if(changeDepot && changeStartDate && !changeEndDate)
        {
            if(objectView.DepotEndDate) // 10, 11
            {
                ret = checkFailed("@DNR6182");
            }
            if(!this.Depot && !this.DepotStartDate && (!objectView.Depot || !objectView.DepotStartDate || objectView.DepotEndDate)) // 12
            {
                ret = checkFailed("@DNR6191");
            }
        }
        if(changeDepot && !changeStartDate && changeEndDate) // 13, 14, 15
        {
            ret = checkFailed("@DNR6183");
        }
        if(!changeDepot && changeStartDate && changeEndDate && (!objectView.Depot || !objectView.DepotStartDate || !objectView.DepotEndDate)) // 17
        {
            ret = checkFailed("@DNR6184");
    
        }
        if (changeDepot && changeStartDate && changeEndDate
        && ( objectView.Depot ||  objectView.DepotStartDate ||  objectView.DepotEndDate)
        && (!objectView.Depot || !objectView.DepotStartDate || !objectView.DepotEndDate)) // 19, 20, 21
        {
            ret = checkFailed("@DNR6185");
        }
    
        // check for date overlap
        if(ret)
        {
            select firstonly prevLog
            order by CreatedDateTime desc
            where prevLog.ObjectId == this.ObjectId
            &&    prevLog.Depot
            &&    prevLog.DepotStartDate
            &&    prevLog.DepotEndDate;
    
            if(prevLog && changeStartDate && this.DepotStartDate && this.DepotStartDate <= prevLog.DepotEndDate)
            {
                ret = checkFailed(strFmt("@SYS50105", "@DNR6090", prevLog.DepotEndDate));
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;
    
        ret = super(_fieldIdToCheck);
    
        if (_fieldIdToCheck == fieldNum(BOBObjectOwnershipLog, FirstOnRentDate)
        ||  _fieldIdToCheck == fieldNum(BOBObjectOwnershipLog, LastOnRentDate))
        {
    
            ret = ((!this.FirstOnRentDate && !this.LastOnRentDate)
            || ( this.FirstOnRentDate && !this.LastOnRentDate)
            || ( this.FirstOnRentDate &&  this.LastOnRentDate && this.LastOnRentDate >= this.FirstOnRentDate));
    
            if (!ret)
            {
                ret = checkFailed(strFmt("@SYS71085", "@DNR3769", "@DNR3771"));
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateOnRentDates</Name>
				<Source><![CDATA[
    private boolean validateOnRentDates()
    {
        boolean ret;
        BOBObjectOwnershipLog prevLog;
        BOBObjectView objectView; // holds current ownership details
        ;
    
        ret = ((!this.FirstOnRentDate && !this.LastOnRentDate)
            || ( this.FirstOnRentDate && !this.LastOnRentDate)
            || ( this.FirstOnRentDate &&  this.LastOnRentDate && this.LastOnRentDate >= this.FirstOnRentDate));
    
        if(!ret)
        {
            ret = checkFailed(strFmt("@SYS71085", "@DNR3769", "@DNR3771"));
        }
    
        select firstOnly FirstOnRentDate, LastOnRentDate, Depot, DepotEndDate from objectView
        where objectView.ObjectId == this.ObjectId;
    
        if(!objectView.FirstOnRentDate && this.FirstOnRentDate && !this.PhysicalOwner)
        {
            ret = checkFailed(strFmt("@DNR6096", "@DNR3769", "@DNR5886"));
        }
        if(objectView.LastOnRentDate != this.LastOnRentDate && objectView.Depot)
        {
            if(!objectView.DepotEndDate)
            {
                ret = checkFailed(strFmt("@DNR6096", "@DNR3771", "@DNR6091"));
            }
            if(this.DepotStartDate && this.LastOnRentDate && this.DepotStartDate > this.LastOnRentDate)
            {
                ret = checkFailed(strFmt("@SYS71085", "@DNR3771", "@DNR6090"));
            }
        }
    
        // check for date overlap
        if(ret)
        {
            select firstonly prevLog
            order by CreatedDateTime desc
            where prevLog.ObjectId == this.ObjectId
            &&    prevLog.PhysicalOwner
            &&    prevLog.FirstOnRentDate
            &&    prevLog.LastOnRentDate;
    
            if(prevLog
            && this.FirstOnRentDate != objectView.FirstOnRentDate
            && this.FirstOnRentDate
            && this.FirstOnRentDate <= prevLog.LastOnRentDate)
            {
                ret = checkFailed(strFmt("@SYS50105", "@DNR3769", prevLog.LastOnRentDate));
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validatePhysicalOwner</Name>
				<Source><![CDATA[
    private boolean validatePhysicalOwner()
    {
        BOBObjectView objectView; // holds current ownership details
        boolean ret = true;
        ;
    
        select firstOnly PhysicalOwner, FirstOnRentDate, LastOnRentDate, Depot, DepotEndDate from objectView
        where objectView.ObjectId == this.ObjectId;
    
        if(objectView.PhysicalOwner != this.PhysicalOwner)
        {
            if(!this.PhysicalOwner && (objectView.FirstOnRentDate || objectView.Depot))
            {
                ret = checkFailed(strFmt("@SYS50104", "@DNR5886"));
            }
            if(( objectView.FirstOnRentDate && !objectView.LastOnRentDate)
            || (!objectView.FirstOnRentDate &&  objectView.LastOnRentDate))
            {
                ret = checkFailed("@DNR6069");
            }
            if(objectView.Depot && !objectView.DepotEndDate)
            {
                ret = checkFailed("@DNR6180");
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;
        ;
    
        ret = super()
           && this.validatePhysicalOwner()
           && this.validateOnRentDates()
           && this.validateDepotData();
    
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@DNR7578</DeveloperDocumentation>
	<Label>@DNR5888</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>ObjectId</TitleField1>
	<TitleField2>FirstOnRentDate</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ObjectId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DepotFlag</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Depot</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DepotEndDateFlag</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DepotEndDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DepotStartDateFlag</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DepotStartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FinancialOwnerFlag</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FinancialOwner</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FirstOnRentDateFlag</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FirstOnRentDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LastOnRentDateFlag</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LastOnRentDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PhysicalOwnerFlag</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PhysicalOwner</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Flags</Name>
			<Label>@SYS76421</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DepotEndDateFlag</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DepotFlag</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DepotStartDateFlag</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FinancialOwnerFlag</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FirstOnRentDateFlag</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LastOnRentDateFlag</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PhysicalOwnerFlag</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>LegalEntities</Name>
			<Label>@SYS303247</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PhysicalOwner</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FinancialOwner</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FirstOnRentDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LastOnRentDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Log</Name>
			<Label>@SYS2515</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>createdBy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>createdDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS50012</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ObjectId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>createdDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Warehouse</Name>
			<Label>@SYS6437</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Depot</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DepotStartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DepotEndDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Depot</Name>
			<ExtendedDataType>InventLocationId</ExtendedDataType>
			<Label>@DNR4173</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DepotEndDate</Name>
			<ExtendedDataType>BOBDepotEndDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DepotEndDateFlag</Name>
			<HelpText>@DNR6126</HelpText>
			<Label>@DNR6125</Label>
			<SaveContents>No</SaveContents>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DepotFlag</Name>
			<HelpText>@DNR6127</HelpText>
			<Label>@DNR6093</Label>
			<SaveContents>No</SaveContents>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DepotStartDate</Name>
			<ExtendedDataType>BOBDepotStartDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DepotStartDateFlag</Name>
			<HelpText>@DNR6129</HelpText>
			<Label>@DNR6128</Label>
			<SaveContents>No</SaveContents>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FinancialOwner</Name>
			<ExtendedDataType>CompanyId</ExtendedDataType>
			<HelpText>@DNR5885</HelpText>
			<Label>@DNR5884</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FinancialOwnerFlag</Name>
			<HelpText>@DNR6131</HelpText>
			<Label>@DNR6130</Label>
			<SaveContents>No</SaveContents>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>FirstOnRentDate</Name>
			<ExtendedDataType>BOBFirstOnRentDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FirstOnRentDateFlag</Name>
			<HelpText>@DNR6133</HelpText>
			<Label>@DNR6132</Label>
			<SaveContents>No</SaveContents>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>LastOnRentDate</Name>
			<ExtendedDataType>BOBLastOnRentDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LastOnRentDateFlag</Name>
			<HelpText>@DNR6135</HelpText>
			<Label>@DNR6134</Label>
			<SaveContents>No</SaveContents>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ObjectId</Name>
			<ExtendedDataType>BOBObjectId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PhysicalOwner</Name>
			<ExtendedDataType>CompanyId</ExtendedDataType>
			<HelpText>@DNR5887</HelpText>
			<Label>@DNR5886</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PhysicalOwnerFlag</Name>
			<HelpText>@DNR6137</HelpText>
			<Label>@DNR6136</Label>
			<SaveContents>No</SaveContents>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>InventLocationIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Depot</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>OwnershipIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ObjectId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>createdDateTime</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BOBObjectTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>BOBObjectTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ObjectId</Name>
					<Field>ObjectId</Field>
					<RelatedField>ObjectId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ObjectIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DataArea_Financial</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>DataArea</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>DataArea_Financial</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FinancialOwner</Name>
					<SourceEDT>CompanyId</SourceEDT>
					<Field>FinancialOwner</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>isVirtual</Name>
					<SourceEDT>CompanyId</SourceEDT>
					<RelatedField>isVirtual</RelatedField>
					<ValueStr>boolean::false</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Id</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DataArea_Physical</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>DataArea</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>DataArea_Physical</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PhysicalOwner</Name>
					<SourceEDT>CompanyId</SourceEDT>
					<Field>PhysicalOwner</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>isVirtual</Name>
					<SourceEDT>CompanyId</SourceEDT>
					<RelatedField>isVirtual</RelatedField>
					<ValueStr>boolean::false</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Id</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Depot</Name>
					<SourceEDT>InventLocationId</SourceEDT>
					<Field>Depot</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventLocationIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>