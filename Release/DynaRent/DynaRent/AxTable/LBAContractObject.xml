<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LBAContractObject</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LBAContractObject extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        LBAContractTable  contractTable;
        LBAContractObject contractObject;
    
        boolean ret = super();
    
        select firstOnly contractObject
        where contractObject.BOBObjectId    == this.BOBObjectId
        &&    contractObject.ContractNumInt != this.ContractNumInt
            exists join contractTable
            where contractTable.ContractNumInt == contractObject.ContractNumInt
            &&    contractTable.ContractStatus != LBAContractstatus::Closed
            &&    contractTable.Stopped        == NoYes::No;
    
        if (contractObject)
        {
            ret = checkFailed(strFmt("@DNR6903", contractObject.BOBObjectId, contractObject.ContractNumInt));
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(LBAContractNumInt _contractNumInt, BOBObjectId _objectId)
    {
        return(_contractNumInt && _objectId && (select firstonly LBAContractObject
                                                where LBAContractObject.ContractNumInt == _contractNumInt
                                                &&    LBAContractObject.BOBObjectId    == _objectId).RecId > 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static LBAContractObject find(LBAContractNumInt _contractNumInt, BOBObjectId _objectId, boolean _forUpdate = false)
    {
        LBAContractObject contractObject;
    
        if (_contractNumInt && _objectId)
        {
            contractObject.selectForUpdate(_forUpdate);
    
            select firstonly contractObject
            where contractObject.ContractNumInt == _contractNumInt
            &&    contractObject.BOBObjectId    == _objectId;
        }
    
        return contractObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>performLookup</Name>
				<Source><![CDATA[
    public static void performLookup(FormControl _formControl, LBAContractTable _contractTable = null)
    {
        Query query = new query();
        QueryBuildDataSource qbds;
        SysTableLookup lookup;
    
        qbds = query.addDataSource(tablenum(BOBObjectTable));
        qbds = qbds.addDataSource(tableNum(LBAContractObject));
        qbds.addDynalink(fieldNum(LBAContractObject, ContractNumInt), _contractTable, fieldNum(LBAContractTable, ContractNumInt));
        qbds.addLink(fieldNum(LBAContractObject, BOBObjectId), fieldNum(BOBObjectTable, ObjectId));
        qbds.joinMode(JoinMode::NoExistsJoin);
    
        lookup = SysTableLookup::newParameters(tablenum(BOBObjectTable), _formControl);
        lookup.addLookupfield(fieldnum(BOBObjectTable, ObjectId));
        //lookup.addLookupfield(fieldnum(BOBObjectTable, DEL_AssetId));
        lookup.addLookupfield(fieldnum(BOBObjectTable, InventSerialId));
        lookup.addLookupfield(fieldnum(BOBObjectTable, RentalTypeId));
        lookup.addLookupfield(fieldnum(BOBObjectTable, FleetNumber));
        lookup.parmQuery(query);
        lookup.performFormLookup();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@DNR7578</DeveloperDocumentation>
	<Label>@DNR5633</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>ContractNumInt</TitleField1>
	<TitleField2>BOBObjectId</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>LBCContractObjectIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<PrimaryIndex>LBCContractObjectIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BOBObjectId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContractNumInt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@SYS19924</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ContractNumInt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BOBObjectId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS50012</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ContractNumInt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BOBObjectId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BOBObjectId</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>BOBObjectId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContractNumInt</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>LBAContractNumInt</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LBCContractObjectIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ContractNumInt</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BOBObjectId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>BOBObjectIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>BOBObjectId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>BOBObjectTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BOBObjectTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BOBObjectId</Name>
					<Field>BOBObjectId</Field>
					<RelatedField>ObjectId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LBAContractTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>LBAContractTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ContractNumInt</Name>
					<Field>ContractNumInt</Field>
					<RelatedField>ContractNumInt</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>