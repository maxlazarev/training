<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DFMButtonSetup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class DFMButtonSetup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>editTableName</Name>
				<Source><![CDATA[
    client server edit TableName editTableName(boolean _set, TableName _tableName)
    {
        TableName       name = _tableName;
        UtilIdElements  elements;
        ;
    
        if(hasFieldAccess(this.TableId, fieldNum(DFMButtonSetup, RefTableId), AccessType::View))
        {
            if(_set && hasFieldAccess(this.TableId, fieldNum(DFMButtonSetup, RefTableId), AccessType::Edit))
            {
                if(name)
                {
                    select firstonly Id, Name from elements
                    where elements.recordType == UtilElementType::Table
                    &&    elements.name == name;
    
                    this.RefTableId = elements.Id;
    
                    if(this.RefTableId)
                    {
                        name = elements.Name;
                    }
                }
                else
                {
                    this.RefTableId = 0;
                }
            }
            else
            {
                select firstonly Name from elements
                where elements.recordType == UtilElementType::Table
                &&    elements.Id == this.RefTableId;
    
                name = elements.Name;
            }
        }
        else
        {
            name = '';
        }
    
        return name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean         ret;
        Form            form;
        DFMButtonSetup  orig = this.orig();
        ;
    
        ret = super();
    
        if(this.FormName != orig.FormName)
        {
            form = new Form(this.FormName);
    
            if(!DFMButtonSetup::isValidForm(form, this.RefTableId))
            {
                warning(strFmt("@DFM19", this.FormName, tableId2Name(this.RefTableId)));
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAllFormsSet</Name>
				<Source><![CDATA[
    public static server Set getAllFormsSet()
    {
        Set ret = new Set(Types::String);
        System.Collections.Specialized.StringEnumerator strEnum = Microsoft.Dynamics.Ax.Xpp.MetadataSupport::FormNames();

        while(strEnum.MoveNext())
        {
            ret.add(strEnum.get_Current());
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSelectedFormsSet</Name>
				<Source><![CDATA[
    public static server Set getSelectedFormsSet(TableId _tableId)
    {
        DFMButtonSetup setup;
        Set ret = new Set(Types::String);
        ;
    
        while select FormName from setup
        where setup.RefTableId == _tableId
        {
            ret.add(setup.FormName);
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isValidForm</Name>
				<Source><![CDATA[
    public static server boolean isValidForm(Form _form, TableId _tableId)
    {
        FormBuildDataSource dataSource;
        boolean             ret;
        int                 i;
        ;
    
        for(i = 1; i <= _form.dataSourceCount(); i ++)
        {
            dataSource = _form.dataSource(i);
    
            if(dataSource.table() == _tableId)
            {
                ret = true;
                break;
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret = super(_fieldIdToCheck);
        ;

        if(_fieldIdToCheck == fieldNum(DFMButtonSetup, FormName) && this.FormName && this.FormName != this.orig().FormName)
        {
            ret = DFMManager::validateFormName(this.FormName);
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>DFMDynamicFieldManagement</ConfigurationKey>
	<DeveloperDocumentation>@DNR7578</DeveloperDocumentation>
	<Label>@DFM4</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>RefTableId</TitleField1>
	<TitleField2>FormName</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>TableFormIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<PrimaryIndex>TableFormIdx</PrimaryIndex>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>editTableName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FormName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@SYS19924</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FormName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>editTableName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>System</Name>
			<Label>@SYS74783</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RefTableId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FormName</Name>
			<ExtendedDataType>FormName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RefTableId</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TableFormIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>RefTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FormName</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>TmpTableName</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TmpTableName</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>RefTableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>