<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BOBTmpRentalInventOnHand</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BOBTmpRentalInventOnHand extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calculateNotYetDelivered</Name>
				<Source><![CDATA[
    public InventQty calculateNotYetDelivered(
        BOBRentalTypeId   _rentalTypeId,
        InventLocationId  _inventLocationId,
        TransDate         _tranDate)
    {
        BOBRentalTrans  rentalTrans;
    
        #DNRConstants
        ;
    
        select sum(Qty) from rentalTrans
        where rentalTrans.RentalTypeId     == _rentalTypeId
           && rentalTrans.InventLocationId == _inventLocationId
           && rentalTrans.TransType == BOBRentalTransType::Sales
           && (rentalTrans.ToDateTime > DateTimeUtil::newDateTime(_tranDate, 0, DateTimeUtil::getUserPreferredTimeZone()) || rentalTrans.CertaintyTo == BOBDateTimeCertainty::Tentative)
           && rentalTrans.FromDateTime <= DateTimeUtil::newDateTime(_tranDate, #INVTimeMax, DateTimeUtil::getUserPreferredTimeZone())
           && rentalTrans.SubStatus < BOBRentalSubStatus::Delivered
           && rentalTrans.Active == BOBRentalTransActive::Active;
    
    
        return rentalTrans.Qty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateNotYetReturned</Name>
				<Source><![CDATA[
    public InventQty calculateNotYetReturned(
        BOBRentalTypeId   _rentalTypeId,
        InventLocationId  _inventLocationId,
        TransDate         _tranDate)
    {
        BOBRentalTrans  rentalTrans;
    
        #DNRConstants
        ;
    
        select sum(Qty) from rentalTrans
        where rentalTrans.RentalTypeId     == _rentalTypeId
           && rentalTrans.InventLocationId == _inventLocationId
           && rentalTrans.TransType == BOBRentalTransType::Sales
           && rentalTrans.ToDateTime <= DateTimeUtil::newDateTime(_tranDate, #INVTimeMax, DateTimeUtil::getUserPreferredTimeZone())
           && rentalTrans.CertaintyTo == BOBDateTimeCertainty::Firm
           && rentalTrans.SubStatus < BOBRentalSubStatus::Returned
           && rentalTrans.SubStatus > BOBRentalSubStatus::Delivered
           && rentalTrans.Active == BOBRentalTransActive::Active;
    
        return rentalTrans.Qty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayAvailableQty</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    display str 10 displayAvailableQty(BOBTmpRentalInventOnHand  _tmpRentalInventOnHand)
    {
        str 10 availableQty;
    
        if (hasFieldAccess(tableNum(BOBTmpRentalInventOnHand), fieldNum(BOBTmpRentalInventOnHand, Available), AccessType::View))
        {
            if (_tmpRentalInventOnHand.TransDate)
            {
                availableQty = strFmt("%1", _tmpRentalInventOnHand.Available);
            }
        }
    
        return availableQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayDateDayName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the weekday name.
    /// </summary>
    /// <param name="_tmpRentalInventOnHand">
    /// BOBTmpRentalInventOnHand buffer.
    /// </param>
    /// <returns>
    /// The weekday name.
    /// </returns>
    [SysClientCacheDataMethodAttribute(true)]
    display DateDayName displayDateDayName(BOBTmpRentalInventOnHand  _tmpRentalInventOnHand)
    {
        DateDayName dateDayName;
    
        if (hasFieldAccess(tableNum(BOBTmpRentalInventOnHand), fieldNum(BOBTmpRentalInventOnHand, TransDate), AccessType::View))
        {
            if (_tmpRentalInventOnHand.TransDate)
            {
                dateDayName = dayName(dayOfWk(_tmpRentalInventOnHand.TransDate));
            }
            else
            {
                dateDayName = '';
            }
        }
    
        return dateDayName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayNotYetDeliveredQty</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    display str 10 displayNotYetDeliveredQty(BOBTmpRentalInventOnHand  _tmpRentalInventOnHand)
    {
        str 10 availableQty;
    
        if (hasFieldAccess(tableNum(BOBTmpRentalInventOnHand), fieldNum(BOBTmpRentalInventOnHand, NotYetDelivered), AccessType::View))
        {
            if (_tmpRentalInventOnHand.TransDate)
            {
                availableQty = strFmt("%1", _tmpRentalInventOnHand.NotYetDelivered);
            }
        }
    
        return availableQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayNotYetReturnedQty</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    display str 10 displayNotYetReturnedQty(BOBTmpRentalInventOnHand  _tmpRentalInventOnHand)
    {
        str 10 availableQty;
    
        if (hasFieldAccess(tableNum(BOBTmpRentalInventOnHand), fieldNum(BOBTmpRentalInventOnHand, NotYetReturned), AccessType::View))
        {
            if (_tmpRentalInventOnHand.TransDate)
            {
                availableQty = strFmt("%1", _tmpRentalInventOnHand.NotYetReturned);
            }
        }
    
        return availableQty;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@DNR7578</DeveloperDocumentation>
	<Label>@DNR5790</Label>
	<TitleField1>TransDate</TitleField1>
	<TitleField2>Available</TitleField2>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RentalTypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Available</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AvailableInclOrder</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS50012</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>displayDateDayName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RentalTypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Available</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AvailableInclOrder</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Available</Name>
			<ExtendedDataType>Qty</ExtendedDataType>
			<Label>@SYS5014</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AvailableInclOrder</Name>
			<ExtendedDataType>Qty</ExtendedDataType>
			<Label>@DNR7117</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventLocationId</Name>
			<ExtendedDataType>InventLocationId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>LineNum</ExtendedDataType>
			<HelpText>@SYS4691</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>NotYetDelivered</Name>
			<ExtendedDataType>Qty</ExtendedDataType>
			<Label>@DNR8246</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>NotYetReturned</Name>
			<ExtendedDataType>Qty</ExtendedDataType>
			<Label>@DNR8245</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RentalTypeId</Name>
			<ExtendedDataType>BOBRentalTypeId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LineNumIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>LineNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventLocationId</Name>
					<SourceEDT>InventLocationId</SourceEDT>
					<Field>InventLocationId</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventLocationIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>