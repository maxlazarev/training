<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RORRentalDatesSetup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RORRentalDatesSetup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkSelfReference</Name>
				<Source><![CDATA[
    private boolean checkSelfReference()
    {
        boolean ret = true;
        ;
    
        if (((this.SetupActionDate == RORRentalDateTimeSetupAction::Field) && (this.DateTimeTypeDateFrom == this.DateTimeType))
        ||  ((this.SetupActionTime == RORRentalDateTimeSetupAction::Field) && (this.DateTimeTypeTimeFrom == this.DateTimeType)))
        {
            ret = checkFailed("@DNR455");
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(fieldId _fieldId)
    {
        super(_fieldId);
    
        switch (_fieldId)
        {
            case fieldNum(RORRentalDatesSetup, SetupActionDate) :   this.modifiedSetupActionDate();
                                                                    break;
            case fieldNum(RORRentalDatesSetup, SetupActionTime) :   this.modifiedSetupActionTime();
                                                                    break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedSetupActionDate</Name>
				<Source><![CDATA[
    private void modifiedSetupActionDate()
    {
        switch (this.SetupActionDate)
        {
            case RORRentalDateTimeSetupAction::Blank:   this.DateFixed            = dateNull();
                                                        this.DateOffset           = 0;
                                                        this.DateUnit             = RORDateUnit::Day;
                                                        this.DateTimeTypeDateFrom = RORRentalDateTimeType::None;
                                                        break;
    
            case RORRentalDateTimeSetupAction::Fixed:   this.DateOffset           = 0;
                                                        this.DateUnit             = RORDateUnit::Day;
                                                        this.DateTimeTypeDateFrom = RORRentalDateTimeType::None;
                                                        break;
    
            case RORRentalDateTimeSetupAction::System:  this.DateFixed            = dateNull();
                                                        this.DateTimeTypeDateFrom = RORRentalDateTimeType::None;
                                                        break;
    
            case RORRentalDateTimeSetupAction::Field:   this.DateFixed            = dateNull();
                                                        break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedSetupActionTime</Name>
				<Source><![CDATA[
    private void modifiedSetupActionTime()
    {
        switch (this.SetupActionTime)
        {
            case RORRentalDateTimeSetupAction::Blank:   this.TimeFixed            = 0;
                                                        this.TimeOffset           = 0;
                                                        this.DateTimeTypeTimeFrom = RORRentalDateTimeType::None;
                                                        break;
    
            case RORRentalDateTimeSetupAction::Fixed:   this.TimeOffset           = 0;
                                                        this.TimeUnit             = RORTimeUnit::Second;
                                                        this.DateTimeTypeTimeFrom = RORRentalDateTimeType::None;
                                                        break;
    
            case RORRentalDateTimeSetupAction::System:  this.TimeFixed            = 0;
                                                        this.DateTimeTypeTimeFrom = RORRentalDateTimeType::None;
                                                        break;
    
            case RORRentalDateTimeSetupAction::Field:   this.TimeFixed            = 0;
                                                        break;
    
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean ret;
    
        ret = super(_fieldIdToCheck);
    
        switch (_fieldIdToCheck)
        {
            case fieldNum(RORRentalDatesSetup, DateTimeTypeDateFrom),
                 fieldNum(RORRentalDatesSetup, DateTimeTypeTimeFrom)    : ret = this.checkSelfReference() && ret;
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;
    
        ret = super();
    
        ret = this.checkSelfReference() && ret;
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkInitTable</Name>
				<Source><![CDATA[
    public server static void checkInitTable()
    {
        RORRentalDateTimeType   dateTimeType;
        RORRentalDatesSetup     rentalDatesSetup;
    
        DictEnum                dictEnum = new DictEnum(EnumNum(RORRentalDateTimeType));
        int                     elementCount = dictEnum.values();
        int                     elementIndex;
        ;
    
        // Ensure that all possible dates have a setup record
        while (elementIndex < elementCount)
        {
            dateTimeType = dictEnum.index2Value(elementIndex);
            if (dateTimeType != RORRentalDateTimeType::None)
            {
                if (isConfigurationkeyEnabled(dictEnum.index2ConfigurationKey(elementIndex)))
                {
                    if (!RORRentalDatesSetup::find(dateTimeType))
                    {
                        rentalDatesSetup.clear();
                        rentalDatesSetup.initValue();
                        rentalDatesSetup.DateTimeType       = dateTimeType;
                        rentalDatesSetup.SetupActionDate    = RORRentalDateTimeSetupAction::Blank;
                        rentalDatesSetup.modifiedField(fieldNum(RORRentalDatesSetup, SetupActionDate));
                        rentalDatesSetup.SetupActionTime    = RORRentalDateTimeSetupAction::Blank;
                        rentalDatesSetup.modifiedField(fieldNum(RORRentalDatesSetup, SetupActionTime));
                        rentalDatesSetup.insert();
                    }
                }
                else
                {
                    // Config key has been disabled so remove setup record
                    delete_from rentalDatesSetup
                    where rentalDatesSetup.DateTimeType     == dateTimeType;
                }
            }
            elementIndex++;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>RORRentalDateTimes</c> table.
    /// </summary>
    /// <param name="_dateTimeType">
    ///    The rental date type of the <c>RORRentalDatesSetup</c> record to find.
    /// </param>
    /// <param name="_forupdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    ///    The specified record in the <c>RORRentalDatesSetup</c> table; otherwise, an empty record.
    /// </returns>
    public static RORRentalDatesSetup find(
        RORRentalDateTimeType   _dateTimeType,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        RORRentalDatesSetup rentalDatesSetup;
        ;
    
        if (_dateTimeType)
        {
            rentalDatesSetup.selectForUpdate(_forupdate);
    
            if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
            {
                rentalDatesSetup.concurrencyModel(_concurrencyModel);
            }
    
            select firstonly rentalDatesSetup
            where rentalDatesSetup.DateTimeType == _dateTimeType;
        }
    
        return rentalDatesSetup;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@DNR7578</DeveloperDocumentation>
	<Label>@DNR284</Label>
	<TableGroup>Parameter</TableGroup>
	<TitleField1>DateTimeType</TitleField1>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>DateTimeType</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<PrimaryIndex>DateTimeType</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DateTimeType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SetupActionDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SetupActionTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DateGroup</Name>
			<Label>@DNR97</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SetupActionDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DateTimeTypeDateFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DateFixed</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DateOffset</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DateUnit</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@SYS19924</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DateTimeType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SetupActionDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DateTimeTypeDateFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DateFixed</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DateOffset</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DateUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SetupActionTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TimeFixed</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DateTimeTypeTimeFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TimeOffset</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TimeUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ClosedAction</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>GridGroup</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DateTimeType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ClosedAction</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Misc</Name>
			<Label>@SYS331686</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ClosedAction</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DateTimeType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SetupActionDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DateTimeTypeDateFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DateFixed</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DateOffset</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DateUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SetupActionTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DateTimeTypeTimeFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TimeFixed</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TimeOffset</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TimeUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ClosedAction</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TimeGroup</Name>
			<Label>@DNR96</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SetupActionTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DateTimeTypeTimeFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TimeFixed</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TimeOffset</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TimeUnit</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ClosedAction</Name>
			<EnumType>RORRentalDateClosedAction</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DateFixed</Name>
			<ExtendedDataType>RORRentalDateFixed</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>DateOffset</Name>
			<ExtendedDataType>ROROffset</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DateTimeType</Name>
			<AllowEdit>No</AllowEdit>
			<Mandatory>Yes</Mandatory>
			<EnumType>RORRentalDateTimeType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DateTimeTypeDateFrom</Name>
			<EnumType>RORRentalDateTimeType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DateTimeTypeTimeFrom</Name>
			<EnumType>RORRentalDateTimeType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DateUnit</Name>
			<EnumType>RORDateUnit</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SetupActionDate</Name>
			<Label>@DNR297</Label>
			<EnumType>RORRentalDateTimeSetupAction</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SetupActionTime</Name>
			<Label>@DNR298</Label>
			<EnumType>RORRentalDateTimeSetupAction</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>TimeFixed</Name>
			<ExtendedDataType>RORRentalTimeFixed</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>TimeOffset</Name>
			<ExtendedDataType>ROROffset</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TimeUnit</Name>
			<EnumType>RORTimeUnit</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>DateTimeType</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>DateTimeType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>