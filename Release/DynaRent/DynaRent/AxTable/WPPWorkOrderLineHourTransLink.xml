<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WPPWorkOrderLineHourTransLink</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WPPWorkOrderLineHourTransLink extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromProjEmplTrans</Name>
				<Source><![CDATA[
    public void initFromProjEmplTrans(ProjEmplTrans _projEmplTrans)
    {
        this.RefTableId = _projEmplTrans.TableId;
        this.RefRecId = _projEmplTrans.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromProjJournalTrans</Name>
				<Source><![CDATA[
    public void initFromProjJournalTrans(ProjJournalTrans _projJournalTrans)
    {
        this.RefTableId = _projJournalTrans.TableId;
        this.RefRecId = _projJournalTrans.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existReference</Name>
				<Source><![CDATA[
    public static boolean existReference(RefTableId _refTableId,
                                         RefRecId   _refRecId)
    {
        return _refTableId && _refRecId && (select firstOnly RecId from WPPWorkOrderLineHourTransLink
                                            where WPPWorkOrderLineHourTransLink.RefTableId == _refTableId
                                            &&    WPPWorkOrderLineHourTransLink.RefRecId   == _refRecId).RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static WPPWorkOrderLineHourTransLink find(WPPWorkOrderLineRecId  _workOrderLineRecId,
                                                     RefTableId             _refTableId,
                                                     RefRecId               _refRecId,
                                                     boolean                _forUpdate = false)
    {
        WPPWorkOrderLineHourTransLink   workOrderLineHourTransLink;
    
        if (_workOrderLineRecId && _refTableId && _refRecId)
        {
            workOrderLineHourTransLink.selectForUpdate(_forUpdate);
    
            select firstOnly workOrderLineHourTransLink
            where workOrderLineHourTransLink.WorkOrderLineRecId == _workOrderLineRecId
            &&    workOrderLineHourTransLink.RefTableId         == _refTableId
            &&    workOrderLineHourTransLink.RefRecId           == _refRecId;
        }
    
        return workOrderLineHourTransLink;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOriginalTransLinkFromJournalTrans</Name>
				<Source><![CDATA[
    public static WPPWorkOrderLineHourTransLink findOriginalTransLinkFromJournalTrans(ProjJournalId         _journalId,
                                                                                      RefRecId              _journalTransRecId,
                                                                                      ProjActivityNumber    _activityNumber = '',
                                                                                      ProjCategoryId        _categoryId = '')
    {
        WPPWorkOrderLineHourTransLink   workOrderLineHourTransLinkOrig;
        ProjJournalTrans                projJournalTrans;
    
        if (_journalId)
        {
            select firstOnly workOrderLineHourTransLinkOrig
            where workOrderLineHourTransLinkOrig.WorkOrderLineRecId
            &&    workOrderLineHourTransLinkOrig.RefRecId != _journalTransRecId
                exists join projJournalTrans
                where projJournalTrans.TableId   == workOrderLineHourTransLinkOrig.RefTableId
                &&    projJournalTrans.RecId     == workOrderLineHourTransLinkOrig.RefRecId
                &&    projJournalTrans.JournalId == _journalId
                &&  (!_activityNumber || projJournalTrans.ActivityNumber == _activityNumber)
                &&  (!_categoryId     || projJournalTrans.CategoryId     == _categoryId);
        }
    
        return workOrderLineHourTransLinkOrig;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findReference</Name>
				<Source><![CDATA[
    public static WPPWorkOrderLineHourTransLink findReference(RefTableId    _refTableId,
                                                              RefRecId      _refRecId,
                                                              boolean       _forUpdate = false)
    {
        WPPWorkOrderLineHourTransLink   workOrderLineHourTransLink;
    
        if (_refTableId && _refRecId)
        {
            workOrderLineHourTransLink.selectForUpdate(_forUpdate);
    
            select firstOnly workOrderLineHourTransLink
            where workOrderLineHourTransLink.RefTableId == _refTableId
            &&    workOrderLineHourTransLink.RefRecId   == _refRecId;
        }
    
        return workOrderLineHourTransLink;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@DNR7578</DeveloperDocumentation>
	<Label>@DNR10079</Label>
	<TableGroup>Reference</TableGroup>
	<TitleField1>WorkOrderLineRecId</TitleField1>
	<TitleField2>RefRecId</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<PrimaryIndex>ReferenceIdx</PrimaryIndex>
	<ReplacementKey>ReferenceIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WorkOrderLineRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RefTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@SYS35893</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WorkOrderLineRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>WorkOrderLine</Name>
			<Label>@DNR6467</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WorkOrderLineRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RefTableId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>WorkOrderLineRecId</Name>
			<ExtendedDataType>WPPWorkOrderLineRecId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ReferenceIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>RefTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RefRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>ProjEmplTrans</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>ProjEmplTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProjJournalTrans</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>ProjJournalTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WPPWorkOrderLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>WPPWorkOrderLine</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WorkOrderLineRecId</Name>
					<Field>WorkOrderLineRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>