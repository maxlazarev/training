<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINMDAPostingRuleTo</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class FINMDAPostingRuleTo extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getOperationsTax</Name>
				<Source><![CDATA[
    public OperationsTax getOperationsTax()
    {
        switch (this.PostingLayer)
        {
            case CurrentOperationsTax::Current:
                return OperationsTax::Current;
    
            case CurrentOperationsTax::Operations:
                return OperationsTax::Operations;
    
            case CurrentOperationsTax::Tax:
                return OperationsTax::Tax;
    
            default:
                throw error(Error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;
    
        ret = super();
    
        if (!this.CompanyId)
        {
            ret = checkFailed(strFmt("@SYS50104", fieldPName(FINMDAPostingRuleTo, CompanyId)));
        }
        else
        {
            changeCompany(this.CompanyId)
            {
                if (!DimensionAttributeValueCombination::exist(this.LedgerDimension))
                {
                    ret = checkFailed(strFmt("@SYS97692",
                        this.LedgerDimension,
                        fieldPName(FINMDAPostingRuleTo, LedgerDimension),
                        tablePName(DimensionAttributeValueCombination)));
                }
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupCompanyAccount</Name>
				<Source><![CDATA[
    client static void lookupCompanyAccount(FormStringControl _ctrl)
    {
        SysTableLookup sysTableLookup  = SysTableLookup::newParameters(tablenum(LedgerInterCompany), _ctrl);
        Query query = new Query();
        QueryBuildDataSource ledgerIntercompanyQBDS;
        DataAreaId currentCompany = curExt();

        ledgerIntercompanyQBDS = query.addDataSource(tableNum(LedgerInterCompany));
        ledgerIntercompanyQBDS.addRange(fieldNum(LedgerInterCompany, OriginatingCompany)).value(SysQuery::value(currentCompany));

        sysTableLookup.addLookupfield(fieldNum(LedgerInterCompany, DestinationCompany), true);
        sysTableLookup.addLookupfield(fieldNum(LedgerInterCompany, JournalName));
    
        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPostingRuleToCount</Name>
				<Source><![CDATA[
    public static Counter getPostingRuleToCount(FINMDAPostingRuleFrom _postingRuleFrom)
    {
        FINMDAPostingRuleTo         postingRuleTo;        
                Counter             postingRuleToCount;
        
        select count(RecId) from postingRuleTo
        where postingRuleTo.PostingRuleFrom == _postingRuleFrom.RecId
        &&    postingRuleTo.LedgerDimension
        &&  !(postingRuleTo.PostingLayer           == _postingRuleFrom.PostingLayer
              &&  postingRuleTo.LedgerDimension    == _postingRuleFrom.LedgerDimension
              &&  postingRuleTo.AllocatePct        == 100
              &&  postingRuleTo.CompanyId          == curExt()
              && (!postingRuleTo.DefaultDimension || postingRuleTo.DefaultDimension == _postingRuleFrom.DefaultDimension));
        
        postingRuleToCount = int642int(postingRuleTo.RecId);

        return postingRuleToCount;        
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPostingRuleRecIdToSkip</Name>
				<Source><![CDATA[
    public static RecId getPostingRuleRecIdToSkip(FINMDAPostingRuleFrom _postingRuleFrom)
    {
        FINMDAPostingRuleTo         postingRuleTo;
        RecId                       postingRuleRecIdToSkip;
        
        select firstonly RecId from postingRuleTo
        where postingRuleTo.PostingRuleFrom    == _postingRuleFrom.RecId
        &&    postingRuleTo.LedgerDimension
        &&    postingRuleTo.PostingLayer       == _postingRuleFrom.PostingLayer
        &&    postingRuleTo.LedgerDimension    == _postingRuleFrom.LedgerDimension
        &&    postingRuleTo.AllocatePct        == 100
        &&    postingRuleTo.CompanyId          == curExt()
        &&    (!postingRuleTo.DefaultDimension || postingRuleTo.DefaultDimension == _postingRuleFrom.DefaultDimension);
            
        // In case there is a "to" posting rule that exacly matches the "from" posting rule,
        // we don't need to first reverse the original ledger transaction and then repost it.
        postingRuleRecIdToSkip = postingRuleTo.RecId;  
      
        return postingRuleRecIdToSkip;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@DNR7578</DeveloperDocumentation>
	<Label>@DNR777</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>CompanyId</TitleField1>
	<TitleField2>PostingLayer</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CompanyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostingLayer</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AllocatePct</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@SYS19924</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CompanyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostingLayer</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AllocatePct</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Misc</Name>
			<Label>@SYS331686</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostingRuleFrom</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AllocatePct</Name>
			<ExtendedDataType>LedgerAllocatePct</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CompanyId</Name>
			<ExtendedDataType>CompanyId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimension</Name>
			<ExtendedDataType>DimensionDefault</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerDimension</Name>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PostingLayer</Name>
			<EnumType>CurrentOperationsTax</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PostingRuleFrom</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PostingRuleFromIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PostingRuleFrom</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DataArea</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>DataArea</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CompanyId</Name>
					<SourceEDT>CompanyId</SourceEDT>
					<Field>CompanyId</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>isVirtual</Name>
					<SourceEDT>CompanyId</SourceEDT>
					<RelatedField>isVirtual</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Id</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDimension</Name>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>FINMDAPostingRuleFrom</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>FINMDAPostingRuleFrom</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PostingRuleFrom</Name>
					<Field>PostingRuleFrom</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerDimension</Name>
					<Field>LedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>