<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WPPWorkOrderStatusSetup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WPPWorkOrderStatusSetup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkedStatus2WorkOrderLineStatus</Name>
				<Source><![CDATA[
    private WPPWorkOrderLineStatus checkedStatus2WorkOrderLineStatus(FieldId _checkedStatus)
    {
        WPPWorkOrderLineStatus  status;
    
        switch (_checkedStatus)
        {
            case fieldNum(WPPWorkOrderStatusSetup, StatusCreated):
                status = WPPWorkOrderLineStatus::Created;
                break;
    
            case fieldNum(WPPWorkOrderStatusSetup, StatusConfirmed):
                status = WPPWorkOrderLineStatus::Confirmed;
                break;
    
            case fieldNum(WPPWorkOrderStatusSetup, StatusPlanned):
                status = WPPWorkOrderLineStatus::Planned;
                break;
    
            case fieldNum(WPPWorkOrderStatusSetup, StatusReleased):
                status = WPPWorkOrderLineStatus::Released;
                break;
    
            case fieldNum(WPPWorkOrderStatusSetup, StatusInProgress):
                status = WPPWorkOrderLineStatus::InProgress;
                break;
    
            case fieldNum(WPPWorkOrderStatusSetup, StatusCompleted):
                status = WPPWorkOrderLineStatus::Completed;
                break;
    
            case fieldNum(WPPWorkOrderStatusSetup, StatusCheckedWorkshop):
                status = WPPWorkOrderLineStatus::CheckedWorkshop;
                break;
    
            case fieldNum(WPPWorkOrderStatusSetup, StatusCheckedAdmin):
                status = WPPWorkOrderLineStatus::CheckedAdmin;
                break;
    
            case fieldNum(WPPWorkOrderStatusSetup, StatusInvoiced):
                status = WPPWorkOrderLineStatus::Invoiced;
                break;
    
            case fieldNum(WPPWorkOrderStatusSetup, StatusClosed):
                status = WPPWorkOrderLineStatus::Closed;
                break;
    
            default:
                throw error(strFmt("@SYS318600", _checkedStatus));
        }
    
        return status;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean ret;
    
        ret = super();
    
        if (WPPWorkOrderStatusSetup::existStatusChecked(this.WorkOrderStatusGroupId, this.workOrderLineStatus2CheckedStatus(this.Status)))
        {
            ret = checkFailed(strFmt("@DNR8274", this.Status));
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean                 ret;
        WPPWorkOrderLineStatus  status;
    
        ret = super(_fieldIdToCheck);
    
        if (_fieldIdToCheck != fieldNum(WPPWorkOrderStatusSetup, Status)
        &&  _fieldIdToCheck != fieldNum(WPPWorkOrderStatusSetup, WorkOrderStatusGroupId))
        {
            if (this.(_fieldIdToCheck))
            {
                status = this.checkedStatus2WorkOrderLineStatus(_fieldIdToCheck);
                if (!WPPWorkOrderStatusSetup::exist(this.WorkOrderStatusGroupId, status))
                {
                    ret = checkFailed(strFmt("@DNR8273", status));
                }
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>workOrderLineStatus2CheckedStatus</Name>
				<Source><![CDATA[
    private FieldId workOrderLineStatus2CheckedStatus(WPPWorkOrderLineStatus _status)
    {
        FieldId checkedStatusFieldId;
    
        switch (_status)
        {
            case WPPWorkOrderLineStatus::Created:
                checkedStatusFieldId = fieldNum(WPPWorkOrderStatusSetup, StatusCreated);
                break;
    
            case WPPWorkOrderLineStatus::Confirmed:
                checkedStatusFieldId = fieldNum(WPPWorkOrderStatusSetup, StatusConfirmed);
                break;
    
            case WPPWorkOrderLineStatus::Planned:
                checkedStatusFieldId = fieldNum(WPPWorkOrderStatusSetup, StatusPlanned);
                break;
    
            case WPPWorkOrderLineStatus::Released:
                checkedStatusFieldId = fieldNum(WPPWorkOrderStatusSetup, StatusReleased);
                break;
    
            case WPPWorkOrderLineStatus::InProgress:
                checkedStatusFieldId = fieldNum(WPPWorkOrderStatusSetup, StatusInProgress);
                break;
    
            case WPPWorkOrderLineStatus::Completed:
                checkedStatusFieldId = fieldNum(WPPWorkOrderStatusSetup, StatusCompleted);
                break;
    
            case WPPWorkOrderLineStatus::CheckedWorkshop:
                checkedStatusFieldId = fieldNum(WPPWorkOrderStatusSetup, StatusCheckedWorkshop);
                break;
    
            case WPPWorkOrderLineStatus::CheckedAdmin:
                checkedStatusFieldId = fieldNum(WPPWorkOrderStatusSetup, StatusCheckedAdmin);
                break;
    
            case WPPWorkOrderLineStatus::Invoiced:
                checkedStatusFieldId = fieldNum(WPPWorkOrderStatusSetup, StatusInvoiced);
                break;
    
            case WPPWorkOrderLineStatus::Closed:
                checkedStatusFieldId = fieldNum(WPPWorkOrderStatusSetup, StatusClosed);
                break;
        }
    
        return checkedStatusFieldId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(WPPWorkOrderStatusGroupId   _groupId,
                                WPPWorkOrderLineStatus      _status)
    {
        return (_groupId && (select firstOnly RecId from WPPWorkOrderStatusSetup
                             where WPPWorkOrderStatusSetup.WorkOrderStatusGroupId == _groupId
                             &&    WPPWorkOrderStatusSetup.Status == _status).RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>existStatusChecked</Name>
				<Source><![CDATA[
    public static boolean existStatusChecked(WPPWorkOrderStatusGroupId  _groupId,
                                             FieldId                    _statusFieldId)
    {
        return (_groupId && (select firstOnly RecId from WPPWorkOrderStatusSetup
                             where WPPWorkOrderStatusSetup.WorkOrderStatusGroupId == _groupId
                             &&    WPPWorkOrderStatusSetup.(_statusFieldId)).RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPossibleWorkOrderStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create a map of possible statuses for the current work order line
    /// </summary>
    /// <param name="_workOrderStatusGroupId">The work order status group.</param>
    /// <param name="_workOrderLineStatus">The current status of the selected work order line.</param>
    /// <returns>a map of all possible statuses for the current work order line.</returns>
    public static server Map getPossibleWorkOrderStatus(WPPWorkOrderStatusGroupId _workOrderStatusGroupId,
                                                        WPPWorkOrderLineStatus    _workOrderLineStatus)
    {
        WPPWorkOrderStatusSetup workOrderStatusSetup;
        Map                     map;
    
        map = new Map(Types::Enum, Types::Enum);
    
        select firstOnly StatusCreated, StatusConfirmed, StatusPlanned, StatusReleased, StatusInProgress, StatusCompleted,
                         StatusCheckedWorkShop, StatusCheckedAdmin, StatusInvoiced, StatusClosed from workOrderStatusSetup
        where workOrderStatusSetup.WorkOrderStatusGroupId == _workOrderStatusGroupId
        &&    workOrderStatusSetup.Status                 == _workOrderLineStatus;
    
        map.insert(WPPWorkOrderLineStatus::Created,         workOrderStatusSetup.StatusCreated);
        map.insert(WPPWorkOrderLineStatus::Confirmed,       workOrderStatusSetup.StatusConfirmed);
        map.insert(WPPWorkOrderLineStatus::Planned,         workOrderStatusSetup.StatusPlanned);
        map.insert(WPPWorkOrderLineStatus::Released,        workOrderStatusSetup.StatusReleased);
        map.insert(WPPWorkOrderLineStatus::InProgress,      workOrderStatusSetup.StatusInProgress);
        map.insert(WPPWorkOrderLineStatus::Completed,       workOrderStatusSetup.StatusCompleted);
        map.insert(WPPWorkOrderLineStatus::CheckedWorkshop, workOrderStatusSetup.StatusCheckedWorkshop);
        map.insert(WPPWorkOrderLineStatus::CheckedAdmin,    workOrderStatusSetup.StatusCheckedAdmin);
        map.insert(WPPWorkOrderLineStatus::Invoiced,        workOrderStatusSetup.StatusInvoiced);
        map.insert(WPPWorkOrderLineStatus::Closed,          workOrderStatusSetup.StatusClosed);
    
        return map;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@DNR7578</DeveloperDocumentation>
	<Label>@DNR1390</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>WorkOrderStatusGroupId</TitleField1>
	<TitleField2>Status</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>WPPWorkOrderStatusGroupIdx</ClusteredIndex>
	<PrimaryIndex>WPPWorkOrderStatusGroupIdx</PrimaryIndex>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WorkOrderStatusGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS53631</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WorkOrderStatusGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Setup</Name>
			<Label>@SYS12687</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatusCheckedAdmin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatusCheckedWorkshop</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatusClosed</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatusCompleted</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatusCreated</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatusInProgress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatusInvoiced</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatusConfirmed</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatusPlanned</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatusReleased</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<AllowEdit>No</AllowEdit>
			<EnumType>WPPWorkOrderLineStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>StatusCheckedAdmin</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@DNR1387</HelpText>
			<Label>@DNR1377</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>StatusCheckedWorkshop</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@DNR1386</HelpText>
			<Label>@DNR1378</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>StatusClosed</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@DNR1385</HelpText>
			<Label>@SYS67267</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>StatusCompleted</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@DNR1384</HelpText>
			<Label>@SYS54623</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>StatusConfirmed</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@DNR1381</HelpText>
			<Label>@SYS8985</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>StatusCreated</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@DNR1380</HelpText>
			<Label>@SYS11408</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>StatusInProgress</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@DNR1383</HelpText>
			<Label>@SYS137068</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>StatusInvoiced</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@DNR1389</HelpText>
			<Label>@SYS14205</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>StatusPlanned</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@DNR1382</HelpText>
			<Label>@SYS32845</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>StatusReleased</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@DNR1388</HelpText>
			<Label>@SYS6966</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WorkOrderStatusGroupId</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>WPPWorkOrderStatusGroupId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>WPPWorkOrderStatusGroupIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>WorkOrderStatusGroupId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Status</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WPPWorkOrderStatusGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>WPPWorkOrderStatusGroup</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WorkOrderStatusGroupId</Name>
					<Field>WorkOrderStatusGroupId</Field>
					<RelatedField>WorkOrderStatusGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>WorkOrderStatusGroupIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>