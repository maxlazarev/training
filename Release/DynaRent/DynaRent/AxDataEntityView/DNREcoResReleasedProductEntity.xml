<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNREcoResReleasedProductEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class DNREcoResReleasedProductEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findEntityDataSource</Name>
				<Source><![CDATA[
    public Common findEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        Common ret;

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(DNREcoResReleasedProductEntity, IntrastatCommodity):
                if (this.IntrastatCommodityCode)
                {
                    ret = EcoResCategory::findByCode(this.IntrastatCommodityCode, IntrastatParameters::find().CommodityHierarchy);
                }
                break;

            default:
                ret = super(_entityCtx, _dataSourceCtx);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return [
            // [field that needs defaulting,
            //      [fields that affect the default value]]

            [fieldNum(DNREcoResReleasedProductEntity, BOMUnitSymbol),
                [fieldNum(DNREcoResReleasedProductEntity, ItemModelGroupId)]],

            [fieldNum(DNREcoResReleasedProductEntity, ApprovedVendorCheckMethod),
                [fieldNum(DNREcoResReleasedProductEntity, ItemModelGroupId)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(DNREcoResReleasedProductEntity, ApprovedVendorCheckMethod):
                if (this.ItemModelGroupId)
                {
                    var modelGroup = InventModelGroup::find(this.ItemModelGroupId);
                    this.ApprovedVendorCheckMethod = modelGroup.PdsVendorCheckItem;
                }
                break;

            case fieldNum(DNREcoResReleasedProductEntity, BOMUnitSymbol):
                if (this.ItemModelGroupId)
                {
                    var modelGroup = InventModelGroup::find(this.ItemModelGroupId);
                    if (!modelGroup.StockedProduct)
                    {
                        this.BOMUnitSymbol = "";
                    }
                }
                else
                {
                    //If itemModelGroup is not assigned than BOMUnitSymbol should be empty.
                    this.BOMUnitSymbol = "";
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultProductDimensionFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a collection with the field ids for default product dimension fields.
    /// </summary>
    /// <returns>The collection.</returns>
    protected Set defaultProductDimensionFields()
    {
        Set set = new Set(Types::Integer);
        
        set.add(fieldNum(DNREcoResReleasedProductEntity, DefaultProductConfigurationId));
        set.add(fieldNum(DNREcoResReleasedProductEntity, DefaultProductColorId));
        set.add(fieldNum(DNREcoResReleasedProductEntity, DefaultProductSizeId));
        set.add(fieldNum(DNREcoResReleasedProductEntity, DefaultProductStyleId));

        return set;
    }

]]></Source>
			</Method>
			<Method>
				<Name>alternativeProductDimensionFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a collection with the field ids for alternative product dimension fields.
    /// </summary>
    /// <returns>The collection.</returns>
    protected Set alternativeProductDimensionFields()
    {
        Set set = new Set(Types::Integer);
        
        set.add(fieldNum(DNREcoResReleasedProductEntity, AlternativeProductConfigurationId));
        set.add(fieldNum(DNREcoResReleasedProductEntity, AlternativeProductColorId));
        set.add(fieldNum(DNREcoResReleasedProductEntity, AlternativeProductSizeId));
        set.add(fieldNum(DNREcoResReleasedProductEntity, AlternativeProductStyleId));

        return set;
    }

]]></Source>
			</Method>
			<Method>
				<Name>determineVariantValidation</Name>
				<Source><![CDATA[
    private void determineVariantValidation()
    {
        Enumerator enum = this.defaultProductDimensionFields().getEnumerator();
        while (enum.moveNext())
        {
            if (this.skipDataSourceValidateField(enum.current()))
            {
                InventTable::skipStandardVariantValidationInCurrentTransactionScope(true);
                break;
            }
        }

        enum = this.alternativeProductDimensionFields().getEnumerator();
        while (enum.moveNext())
        {
            if (this.skipDataSourceValidateField(enum.current()))
            {
                InventTable::skipAlternativeVariantValidationInCurrentTransactionScope(true);
                break;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>persistEntity</Name>
				<Source><![CDATA[
    public void persistEntity(DataEntityRuntimeContext _entityCtx)
    {
        if (_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert)
        {
            var product = EcoResProduct::findByDisplayProductNumber(this.ProductNumber);
            EcoResProductReleaseManager::releaseProductWithLegalEntityData(
                        product.RecId,
                        CompanyInfo::findDataArea(this.DataAreaId).RecId,
                        this.ItemNumber,
                        this.SearchName);

            this.DefaultLedgerDimension = DimensionDefaultResolver::checkAndCreateSelfReference(tablenum(InventTable), this.ItemNumber, this.DefaultLedgerDimensionDisplayValue);
        }

        this.determineVariantValidation();

        // This validation is performed on the entity level so there is no need to perform it on the table level
        InventTable::skipProductVariantUnitConversionValidationInCurrentTransactionScope(true);

        this.skipDataSourceValidateField(fieldNum(DNREcoResReleasedProductEntity, POSRegistrationBlockedDate), true);

        super(_entityCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(DNREcoResReleasedProductEntity, InventTable):                
                if (_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert)
                {
                    // Reread the InventTable buffer that was inserted by EcoResProductReleaseManager in the persistEntity method
                    _dataSourceCtx.setBuffer(InventTable::find(this.ItemNumber, true));
                }
                break;

            case dataEntityDataSourceStr(DNREcoResReleasedProductEntity, InventItemGroupItem):
                if (this.ProductGroupId && this.isFieldSet(fieldNum(DNREcoResReleasedProductEntity, ProductGroupId)))
                {
                    InventItemGroupItem inventItemGroupItem = _dataSourceCtx.getBuffer();
                    inventItemGroupItem.ItemGroupDataAreaId = this.DataAreaId;
                }
                break;

            case dataEntityDataSourceStr(DNREcoResReleasedProductEntity, InventModelGroupItem):
                if (this.ItemModelGroupId && this.isFieldSet(fieldNum(DNREcoResReleasedProductEntity, ItemModelGroupId)))
                {
                    InventModelGroupItem inventModelGroupItem = _dataSourceCtx.getBuffer();
                    inventModelGroupItem.ModelGroupDataAreaId = this.DataAreaId;
                }
                break;

            case dataEntityDataSourceStr(DNREcoResReleasedProductEntity, WHSReservationHierarchyItem):
                if (!this.InventoryReservationHierarchyName && this.isFieldSet(fieldNum(DNREcoResReleasedProductEntity, InventoryReservationHierarchyName)))
                {
                    this.skipDataSourceValidateField(fieldNum(DNREcoResReleasedProductEntity, ReservationHierarchyRecId), true);
                }
                break;

            case dataEntityDataSourceStr(DNREcoResReleasedProductEntity, EcoResStorageDimensionGroup):
                if (_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert)
                {
                    if (!this.StorageDimensionGroupName && !this.isFieldSet(fieldNum(DNREcoResReleasedProductEntity, StorageDimensionGroupName)))
                    {
                        //Field storageDimensionGroupName is not part of the import, it needs to be defaulted from the Product
                        EcoResProduct product = EcoResProduct::findByDisplayProductNumber(this.ProductNumber);
                        if (product.RecId)
                        {
                            EcoResStorageDimensionGroupProduct storageDimGroupProduct = EcoResStorageDimensionGroupProduct::findByProduct(product.RecId);
                            this.StorageDimensionGroupName = EcoResStorageDimensionGroup::find(storageDimGroupProduct.StorageDimensionGroup).Name;
                        }
                    }
                }
            break;

            case dataEntityDataSourceStr(DNREcoResReleasedProductEntity, EcoResTrackingDimensionGroup):
                if (_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert)
                {
                    if (!this.TrackingDimensionGroupName && !this.isFieldSet(fieldNum(DNREcoResReleasedProductEntity, TrackingDimensionGroupName)))
                    {
                        //Field trackingDimensionGroupName is not part of the import, it needs to be defaulted from the Product
                        EcoResProduct product = EcoResProduct::findByDisplayProductNumber(this.ProductNumber);
                        if (product.RecId)
                        {
                            EcoResTrackingDimensionGroupProduct trackingDimGroupProduct = EcoResTrackingDimensionGroupProduct::findByProduct(product.RecId);
                            this.TrackingDimensionGroupName = EcoResTrackingDimensionGroup::find(trackingDimGroupProduct.TrackingDimensionGroup).Name;
                        }
                    }
                }
                break;
        }

        super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(DNREcoResReleasedProductEntity, WHSInventTable):
                if (!this.isStorageDimensionGroupWarehouseManagementEnabled())
                {
                    if (_dataSourceCtx.isAnyFieldSetToNonDefaultValue(tableNum(DNREcoResReleasedProductEntity)))
                    {
                        warning("@SCM:CannotSetWarehouseManagementInfoForNonWHSItems");
                        this.throwUpdateHasBeenCancelled();
                    }

                    _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                }
                break;

            case dataEntityDataSourceStr(DNREcoResReleasedProductEntity, PdsCatchWeightItem):
                if (!EcoResProduct::findByDisplayProductNumber(this.ProductNumber).PdsCWProduct)
                {
                    if (_dataSourceCtx.isAnyFieldSetToNonDefaultValue(tableNum(DNREcoResReleasedProductEntity)))
                    {
                        warning("@SCM:CannotSetCatchWeightInfoForNonCatchWeightProducts");
                        this.throwUpdateHasBeenCancelled();
                    }

                    _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isStorageDimensionGroupWarehouseManagementEnabled</Name>
				<Source><![CDATA[
    private boolean isStorageDimensionGroupWarehouseManagementEnabled()
    {
        return this.StorageDimensionGroupName &&
                EcoResStorageDimensionGroup::findByDimensionGroupName(this.StorageDimensionGroupName).IsWarehouseWHSEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWriteInventTable</Name>
				<Source><![CDATA[
    private boolean validateWriteInventTable(InventTable _inventTable)
    {
        boolean ret = true;

        var crossTableData = this.crossTableDataAdaptor();

        if (_inventTable.Phantom && !_inventTable.canBePhantom(crossTableData))
        {
            ret = ret & checkFailed(strFmt("@SYS78966", fieldPName(InventTable, Phantom)));
        }

        if (_inventTable.AutoReportFinished && !_inventTable.isAutoReportAsFinishedAllowed(crossTableData))
        {
            ret = ret & checkFailed(strFmt("@SYS78966", fieldPName(InventTable, AutoReportFinished)));
        }

        if (!EcoResProductCrossTableManager::isItemStocked(this.ItemNumber, this.DataAreaId, crossTableData))
        {
            ret = ret & EcoResProductCrossTableManager::validateFieldsAreBlank(_inventTable, InventTable::stockedOnlyFields(), "@SCM:InventTableFieldMustBeBlankForNotStockedProduct");
        }

        if (ret && _inventTable.isProductVariantUnitConversionEnabled())
        {
            boolean isItemWHSEnabled = this.isStorageDimensionGroupWarehouseManagementEnabled();
            ret = _inventTable.validateProductVariantUnitConversion(this.InventoryUnitSymbol, this.PurchaseUnitSymbol, this.SalesUnitSymbol, isItemWHSEnabled);
        }

        ret = ret && EcoResProductCrossTableManager::validateReservationHierarchyForReleasedProduct(crossTableData);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWriteReleasedProduct</Name>
				<Source><![CDATA[
    private boolean validateWriteReleasedProduct(DataEntityRuntimeContext _entityCtx)
    {
        boolean ret = true;
        InventTable inventTable                     = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(DNREcoResReleasedProductEntity, InventTable)).getBuffer();
        InventTableModule inventTableModuleInvent   = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(DNREcoResReleasedProductEntity, InventTableModuleInvent)).getBuffer();
        InventTableModule inventTableModulePurch    = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(DNREcoResReleasedProductEntity, InventTableModulePurch)).getBuffer();
        InventTableModule inventTableModuleSales    = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(DNREcoResReleasedProductEntity, InventTableModuleSales)).getBuffer();
        InventModelGroupItem inventModelGroupItem   = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(DNREcoResReleasedProductEntity, InventModelGroupItem)).getBuffer();

        #EcoResProductDetailsExtended
        Map mapBuffers = new Map(Types::String, Types::Record);
        mapBuffers.insert(#InventTableDS, inventTable);
        mapBuffers.insert(#InventDS, inventTableModuleInvent);
        mapBuffers.insert(#PurchDS, inventTableModulePurch);
        mapBuffers.insert(#SalesDS, inventTableModuleSales);
        mapBuffers.insert(#InventModelGroupItemDS, inventModelGroupItem);

        EcoResReleasedProductFactory  releasedProductFactory = EcoResReleasedProductFactory::construct();
        EcoResReleasedProduct releasedProduct = releasedProductFactory.getReleasedProductFromMap(mapBuffers);
        ret = releasedProduct.validateWrite();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWriteInventTableModuleInvent</Name>
				<Source><![CDATA[
    private boolean validateWriteInventTableModuleInvent(InventTableModule _inventTableModuleInvent)
    {
        boolean ret = true;

        var crossTableData = this.crossTableDataAdaptor();

        if (!EcoResProductCrossTableManager::isItemStocked(this.ItemNumber, this.DataAreaId, crossTableData))
        {
            ret = ret & EcoResProductCrossTableManager::validateFieldsAreBlank(_inventTableModuleInvent, InventTableModule::inventStockedOnlyFields());
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWriteTMSInventEnabled</Name>
				<Source><![CDATA[
    private boolean validateWriteTMSInventEnabled()
    {
        if (!this.AreTransportationManagementProcessesEnabled
            && this.isFieldSet(fieldNum(DNREcoResReleasedProductEntity, AreTransportationManagementProcessesEnabled))
            && WHSInventEnabled::exist(this.ItemNumber))
        {
            return checkFailed("@SCM:CannotDisableTMSProcessesForWHSItem");
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWriteDataSource</Name>
				<Source><![CDATA[
    private boolean validateWriteDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (this.skipDataSourceValidateWrite())
        {
            return true;
        }

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(DNREcoResReleasedProductEntity, InventTable):
                return this.validateWriteInventTable(_dataSourceCtx.getBuffer()) && this.validateWriteReleasedProduct(_entityCtx);

            case dataEntityDataSourceStr(DNREcoResReleasedProductEntity, InventTableModuleInvent):
                return this.validateWriteInventTableModuleInvent(_dataSourceCtx.getBuffer());

            case dataEntityDataSourceStr(DNREcoResReleasedProductEntity, TMSInventEnabled):
                return this.validateWriteTMSInventEnabled();
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ignoreDataSource = false;
        Common buffer;

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(DNREcoResReleasedProductEntity, InventItemGroupItem):
                if (this.ProductGroupId)
                {
                    buffer = InventItemGroupItem::findByItemIdLegalEntity(this.ItemNumber, this.DataAreaId, true);
                }
                else
                {
                    ignoreDataSource = true;
                }
                break;

            case dataEntityDataSourceStr(DNREcoResReleasedProductEntity, InventModelGroupItem):
                if (this.ItemModelGroupId)
                {
                    buffer = InventModelGroupItem::findByItemIdLegalEntity(this.ItemNumber, this.DataAreaId, true);
                }
                else
                {
                    ignoreDataSource = true;
                }
                break;

            case dataEntityDataSourceStr(DNREcoResReleasedProductEntity, InventItemSetupSupplyType):
                buffer = InventItemSetupSupplyType::find(this.ItemNumber, this.DataAreaId, true);
                break;

            case dataEntityDataSourceStr(DNREcoResReleasedProductEntity, EcoResStorageDimensionGroupItem):
                buffer = EcoResStorageDimensionGroupItem::findByItem(this.DataAreaId, this.ItemNumber, true);
                break;

            case dataEntityDataSourceStr(DNREcoResReleasedProductEntity, EcoResTrackingDimensionGroupItem):
                buffer = EcoResTrackingDimensionGroupItem::findByItem(this.DataAreaId, this.ItemNumber, true);
                break;

            case dataEntityDataSourceStr(DNREcoResReleasedProductEntity, InventTableModuleInvent):
                buffer = InventTableModule::find(this.ItemNumber, ModuleInventPurchSales::Invent, true);
                break;

            case dataEntityDataSourceStr(DNREcoResReleasedProductEntity, InventTableModuleSales):
                buffer = InventTableModule::find(this.ItemNumber, ModuleInventPurchSales::Sales, true);
                break;

            case dataEntityDataSourceStr(DNREcoResReleasedProductEntity, InventTableModulePurch):
                buffer = InventTableModule::find(this.ItemNumber, ModuleInventPurchSales::Purch, true);
                break;

            case dataEntityDataSourceStr(DNREcoResReleasedProductEntity, RetailInventTable):
                buffer = RetailInventTable::find(this.ItemNumber, true);
                break;

            case dataEntityDataSourceStr(DNREcoResReleasedProductEntity, TMSInventEnabled):
                if (!this.isFieldSet(fieldNum(DNREcoResReleasedProductEntity, AreTransportationManagementProcessesEnabled)))
                {
                    ignoreDataSource = true;
                }
                else if (!this.AreTransportationManagementProcessesEnabled)
                {
                    _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::Delete);
                }
                break;

            default:
                EventHandlerResult bufferResult = new EventHandlerResult();
                this.insertEntityDataSourceDelegate(this, _entityCtx, _dataSourceCtx, bufferResult);
                
                if (bufferResult.hasResult())
                {
                    buffer = bufferResult.result();
                }
                break;
        }

        if (ignoreDataSource)
        {
            return true;
        }

        if (buffer)
        {
            _dataSourceCtx.setBuffer(buffer);
            _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::Update);
            this.mapEntityToDataSource(_entityCtx, _dataSourceCtx);
        }

        if (!this.validateWriteDataSource(_entityCtx, _dataSourceCtx))
        {
            this.throwUpdateHasBeenCancelled();
        }

        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSourceDelegate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delegate for handling any additional data sources to be inserted through the entity.
    /// </summary>
    /// <param name = "_this">Reference back to the entity.</param>
    /// <param name = "_entityCtx">Data entity runtime context.</param>
    /// <param name = "_dataSourceCtx">Data entity data source runtime context.</param>
    /// <param name = "_result">An instance of <c>EventHandlerResult</c> subscribers can use to return the corresponding record buffer.</param>
    delegate void insertEntityDataSourceDelegate(DNREcoResReleasedProductEntity _this, DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx, EventHandlerResult _result)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>throwUpdateHasBeenCancelled</Name>
				<Source><![CDATA[
    private void throwUpdateHasBeenCancelled()
    {
        throw error("@SYS18447");
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ignoreDataSource = false;

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(DNREcoResReleasedProductEntity, TMSInventEnabled):
                if (!this.isFieldSet(fieldNum(DNREcoResReleasedProductEntity, AreTransportationManagementProcessesEnabled)))
                {
                    ignoreDataSource = true;
                }
                else if (!this.AreTransportationManagementProcessesEnabled)
                {
                    _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::Delete);
                }
                break;

            case dataEntityDataSourceStr(DNREcoResReleasedProductEntity, EcoResStorageDimensionGroupItem):
                if (!this.StorageDimensionGroupName && this.isFieldSet(fieldNum(DNREcoResReleasedProductEntity, StorageDimensionGroupName)))
                {
                    _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::Delete);
                }
                break;

            case dataEntityDataSourceStr(DNREcoResReleasedProductEntity, EcoResTrackingDimensionGroupItem):
                if (!this.TrackingDimensionGroupName && this.isFieldSet(fieldNum(DNREcoResReleasedProductEntity, TrackingDimensionGroupName)))
                {
                    _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::Delete);
                }
                break;

            case dataEntityDataSourceStr(DNREcoResReleasedProductEntity, InventItemGroupItem):
                if (!this.ProductGroupId && this.isFieldSet(fieldNum(DNREcoResReleasedProductEntity, ProductGroupId)))
                {
                    _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::Delete);
                }
                break;

            case dataEntityDataSourceStr(DNREcoResReleasedProductEntity, InventModelGroupItem):
                if (!this.ItemModelGroupId && this.isFieldSet(fieldNum(DNREcoResReleasedProductEntity, ItemModelGroupId)))
                {
                    _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::Delete);
                }
                break;

            case dataEntityDataSourceStr(DNREcoResReleasedProductEntity, WHSReservationHierarchyItem):
                if (!this.InventoryReservationHierarchyName && this.isFieldSet(fieldNum(DNREcoResReleasedProductEntity, InventoryReservationHierarchyName)))
                {
                    _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::Delete);
                }
                break;

            case dataEntityDataSourceStr(DNREcoResReleasedProductEntity, WHSInventTable):
                if (_dataSourceCtx.getDatabaseOperation() == DataEntityDatabaseOperation::None)
                {
                    WHSInventTable bufferUpdate = _dataSourceCtx.getBuffer();
                    WHSInventTable whsInventTable = WHSInventTable::find(bufferUpdate.ItemId);

                    if (whsInventTable && bufferUpdate &&
                        (  whsInventTable.FilterCode[2] != bufferUpdate.FilterCode[2]
                        || whsInventTable.FilterCode[3] != bufferUpdate.FilterCode[3]
                        || whsInventTable.FilterCode[4] != bufferUpdate.FilterCode[4]))
                    {
                        _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::Update);
                    }
                }
                break;
        }

        if (ignoreDataSource)
        {
            return true;
        }

        if (!this.validateWriteDataSource(_entityCtx, _dataSourceCtx))
        {
            throw error("@SYS18447");
        }

        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        if (!this.skipNumberSequenceCheck())
        {
            NumberSeqRecordFieldHandler::enableNumberSequenceControlForField(
                this, fieldNum(DNREcoResReleasedProductEntity, ItemNumber), InventParameters::numRefItemId());
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (ret && !this.PrimaryVendorAccountNumber && this.IsDeliveredDirectly)
        {
            ret = checkFailed("@MCR12178");
        }

        EcoResProduct product = EcoResProduct::findByDisplayProductNumber(this.ProductNumber);
        EcoResStorageDimensionGroup ecoResStorageDimensionGroup;
        EcoResTrackingDimensionGroup ecoResTrackingDimensionGroup;

        if (ret && this.StorageDimensionGroupName)
        {
            ecoResStorageDimensionGroup = EcoResStorageDimensionGroup::findByDimensionGroupName(this.StorageDimensionGroupName);

            ret = EcoResStorageDimensionGroupItem::validateStorageDimensionGroupIsSameAsInProduct(
                ecoResStorageDimensionGroup,
                product.RecId);
        }

        if (ret && this.TrackingDimensionGroupName)
        {
            ecoResTrackingDimensionGroup = EcoResTrackingDimensionGroup::findByDimensionGroupName(this.TrackingDimensionGroupName);

            ret = EcoResTrackingDimensionGroupItem::validateTrackingDimensionGroupIsSameAsInProduct(
                ecoResTrackingDimensionGroup,
                product.RecId);
        }

        InventTable inventTable = InventTable::find(this.ItemNumber);
        if (ret && inventTable.RecId && (this.StorageDimensionGroupName || this.TrackingDimensionGroupName))
        {
            InventTableInventoryDimensionGroups inventTableInventoryDimensionGroups;

            inventTableInventoryDimensionGroups = InventTableInventoryDimensionGroups::newFromItemAndDimGroups(
                inventTable.DataAreaId,
                inventTable.ItemId,
                ecoResStorageDimensionGroup.RecId,
                ecoResTrackingDimensionGroup.RecId,
                product.RecId);

            ret = inventTableInventoryDimensionGroups.validateNewDimensionGroupsForItem();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>productSubTypeSqlExpression</Name>
				<Source><![CDATA[
    // ============= Region (private helper methods) ================

    private static str productSubTypeSqlExpression()
    {
        str ecoResProductInstanceRelationType = SysComputedColumn::returnField(tablestr(DNREcoResReleasedProductEntity),
                                                                               dataEntityDataSourceStr(DNREcoResReleasedProductEntity, EcoResProduct),
                                                                               fieldstr(EcoResProduct, InstanceRelationtype));

        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(ecoResProductInstanceRelationType, SysComputedColumn::returnLiteral(tablenum(EcoResDistinctProduct))),
            SysComputedColumn::returnLiteral(EcoResProductSubtype::Product),
            SysComputedColumn::returnLiteral(EcoResProductSubtype::ProductMaster));
    }

]]></Source>
			</Method>
			<Method>
				<Name>useTransportationManagementProcessesSqlExpression</Name>
				<Source><![CDATA[
    private static str useTransportationManagementProcessesSqlExpression()
    {
        str tmsInventEnabledItemId = SysComputedColumn::returnField(tablestr(DNREcoResReleasedProductEntity),
                                                                               tablestr(TMSInventEnabled),
                                                                               fieldstr(TMSInventEnabled, ItemId));

        return SysComputedColumn::if(
            SysComputedColumn::isNullExpression(tmsInventEnabledItemId),
            SysComputedColumn::returnLiteral(NoYes::No),
            SysComputedColumn::returnLiteral(NoYes::Yes));
    }

]]></Source>
			</Method>
			<Method>
				<Name>crossTableDataAdaptor</Name>
				<Source><![CDATA[
    private DNREcoResReleasedProductEntityToCrossTableDataAdaptor crossTableDataAdaptor()
    {
        return DNREcoResReleasedProductEntityToCrossTableDataAdaptor::newFromEntity(this);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<FormRef>EcoResProductDetailsExtended</FormRef>
	<Label>@DNR:DataEntityDNRReleasedProduct</Label>
	<Tags>Released Products</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>DNREcoResReleasedProductStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>ProductInformationManagement</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>DNRReleasedProducts</PublicCollectionName>
	<PublicEntityName>DNRReleasedProduct</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchaseItemWithholdingTaxGroupCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsPurchaseWithholdingTaxCalculated</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesItemWithholdingTaxGroupCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsSalesWithholdingTaxCalculated</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IntrastatChargePercentage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OriginCountryRegionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OriginStateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SADGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PKWiUCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ApproximateSalesTaxPercentage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemFiscalClassificationExceptionCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductFiscalInformationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsICMSTaxAppliedOnService</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemFiscalClassificationCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServiceFiscalInformationCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>ProductType</DataField>
			<DataSource>EcoResProduct</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>ProductSubType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>productSubTypeSqlExpression</ComputedFieldMethod>
			<EnumType>EcoResProductSubType</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductNumber</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>DisplayProductNumber</DataField>
			<DataSource>EcoResProduct</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductSearchName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>SearchName</DataField>
			<DataSource>EcoResProduct</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemNumber</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>ItemId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SearchName</Name>
			<DataField>NameAlias</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductGroupId</Name>
			<DataField>ItemGroupId</DataField>
			<DataSource>InventItemGroupItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemModelGroupId</Name>
			<DataField>ModelGroupId</DataField>
			<DataSource>InventModelGroupItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>StorageDimensionGroupName</Name>
			<Label>@SYS312237</Label>
			<Mandatory>No</Mandatory>
			<DataField>Name</DataField>
			<DataSource>EcoResStorageDimensionGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TrackingDimensionGroupName</Name>
			<Label>@SYS312248</Label>
			<Mandatory>No</Mandatory>
			<DataField>Name</DataField>
			<DataSource>EcoResTrackingDimensionGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>StorageDimensionGroupRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<Mandatory>No</Mandatory>
			<DataField>StorageDimensionGroup</DataField>
			<DataSource>EcoResStorageDimensionGroupItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TrackingDimensionGroupRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<Mandatory>No</Mandatory>
			<DataField>TrackingDimensionGroup</DataField>
			<DataSource>EcoResTrackingDimensionGroupItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InventoryReservationHierarchyName</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@WAX4705</Label>
			<Mandatory>No</Mandatory>
			<DataField>Name</DataField>
			<DataSource>WHSReservationHierarchy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReservationHierarchyRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<Mandatory>No</Mandatory>
			<DataField>ReservationHierarchy</DataField>
			<DataSource>WHSReservationHierarchyItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultOrderType</Name>
			<DataField>DefaultOrderType</DataField>
			<DataSource>InventItemSetupSupplyType</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MarginABCCode</Name>
			<DataField>ABCContributionMargin</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RevenueABCCode</Name>
			<DataField>ABCRevenue</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CarryingCostABCCode</Name>
			<DataField>ABCTieUp</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ValueABCCode</Name>
			<DataField>ABCValue</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AlternativeProductUsageCondition</Name>
			<Label>@SCM:WhenToUseAlternativeProduct</Label>
			<DataField>UseAltItemId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AlternativeProductConfigurationId</Name>
			<Label>@SCM:AlternativeProductConfiguration</Label>
			<DataField>AltConfigId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AlternativeProductColorId</Name>
			<Label>@SCM:AlternativeProductColor</Label>
			<DataField>AltInventColorId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AlternativeProductSizeId</Name>
			<Label>@SCM:AlternativeProductSize</Label>
			<DataField>AltInventSizeId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AlternativeProductStyleId</Name>
			<Label>@SCM:AlternativeProductStyle</Label>
			<DataField>AltInventStyleId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AlternativeItemNumber</Name>
			<DataField>AltItemId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillInventoryIssueAutomaticallyReportAsFinished</Name>
			<DataField>AutoReportFinished</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BatchMergeDateCalculationMethod</Name>
			<Label>@SCM:BatchMergeDateCalculationMethod</Label>
			<DataField>BatchMergeDateCalculationMethod</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BatchNumberGroupCode</Name>
			<DataField>BatchNumGroupId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CostCalculationGroupId</Name>
			<DataField>BOMCalcGroupId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BOMLevel</Name>
			<Label>@SYS23542</Label>
			<DataField>BOMLevel</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BOMUnitSymbol</Name>
			<DataField>BOMUnitId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FlushingPrinciple</Name>
			<DataField>ProdFlushingPrincip</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillInventoryReceiptIgnoreFlushingPrinciple</Name>
			<Label>@SCM:IgnoreFlushingPrincipleOnReceipt</Label>
			<DataField>BOMManualReceipt</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CommissionProductGroupId</Name>
			<DataField>CommissionGroupId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CostGroupId</Name>
			<DataField>CostGroupId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsUnitCostAutomaticallyUpdated</Name>
			<Label>@SCM:UpdateProductAutomaticallyWithLatestCostPrice</Label>
			<DataField>CostModel</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductionConsumptionDensityConversionFactor</Name>
			<Label>@SCM:DensityConversionFactorForProductionConsumption</Label>
			<DataField>Density</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductionConsumptionDepthConversionFactor</Name>
			<Label>@SCM:DepthConversionFactorForProductionConsumption</Label>
			<DataField>Depth</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductionConsumptionWidthConversionFactor</Name>
			<Label>@SCM:WidthConversionFactorForProductionConsumption</Label>
			<DataField>Width</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductionConsumptionHeightConversionFactor</Name>
			<Label>@SCM:HeightConversionFactorForProductionConsumption</Label>
			<DataField>Height</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>GrossDepth</Name>
			<DataField>grossDepth</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>GrossProductHeight</Name>
			<DataField>grossHeight</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>GrossProductWidth</Name>
			<DataField>grossWidth</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductVolume</Name>
			<DataField>UnitVolume</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>NetProductWeight</Name>
			<DataField>NetWeight</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BuyerGroupId</Name>
			<DataField>ItemBuyerGroupId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsUnitCostProductVariantSpecific</Name>
			<DataField>ItemDimCostPrice</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchasePriceToleranceGroupId</Name>
			<Label>@SCM:PurchasePriceToleranceGroup</Label>
			<DataField>ItemPriceToleranceGroupId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>VendorInvoiceLineMatchingPolicy</Name>
			<Label>@SCM:VendorInvoiceLineMatchingPolicy</Label>
			<DataField>MatchingPolicy</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PackingMaterialGroupId</Name>
			<DataField>PackagingGroupId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PotencyBaseAttributeId</Name>
			<Label>@SCM:PotencyBaseAttribute</Label>
			<DataField>PDSBaseAttributeId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BestBeforePeriodDays</Name>
			<DataField>PdsBestBefore</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FreightAllocationGroupId</Name>
			<DataField>PdsFreightAllocationGroupId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesRebateProductGroupId</Name>
			<Label>@SCM:CustomerRebateItemGroup</Label>
			<DataField>PdsItemRebateGroupId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PotencyBaseAttributeValueEntryEvent</Name>
			<Label>@SCM:RecordPotencyBaseAttributeValueAt</Label>
			<DataField>PDSPotencyAttribRecording</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShelfAdvicePeriodDays</Name>
			<DataField>PdsShelfAdvice</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShelfLifePeriodDays</Name>
			<DataField>PdsShelfLife</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PotencyBaseAttibuteTargetValue</Name>
			<Label>@SCM:TargetValueForPotencyBaseAttribute</Label>
			<DataField>PDSTargetFactor</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ApprovedVendorCheckMethod</Name>
			<DataField>PdsVendorCheckItem</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsPhantom</Name>
			<DataField>Phantom</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PlanningFormulaItemNumber</Name>
			<DataField>PmfPlanningItemId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductionType</Name>
			<DataField>PmfProductType</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>YieldPercentage</Name>
			<DataField>PmfYieldPct</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryVendorAccountNumber</Name>
			<DataField>PrimaryVendorId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductionGroupId</Name>
			<DataField>ProdGroupId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductionPoolId</Name>
			<DataField>ProdPoolId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectCategoryId</Name>
			<DataField>projCategoryId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>NecessaryProductionWorkingTimeSchedulingPropertyId</Name>
			<Label>@SYS23878</Label>
			<DataField>PropertyId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsPurchasePriceAutomaticallyUpdated</Name>
			<Label>@SCM:UpdateProductAutomaticallyWithLatestPurchasePrice</Label>
			<DataField>PurchModel</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductCoverageGroupId</Name>
			<DataField>ReqGroupId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesPriceCalculationModel</Name>
			<DataField>SalesModel</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BaseSalesPriceSource</Name>
			<Label>@SCM:SourceOfBaseSalesPrice</Label>
			<DataField>SalesPriceModelBasic</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesPriceCalculationContributionRatio</Name>
			<Label>@SYS25119</Label>
			<DataField>SalesContributionRatio</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesPriceCalculationChargesPercentage</Name>
			<Label>@SYS25120</Label>
			<DataField>SalesPercentMarkup</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ConstantScrapQuantity</Name>
			<DataField>ScrapConst</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>VariableScrapPercentage</Name>
			<DataField>ScrapVar</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SerialNumberGroupCode</Name>
			<DataField>SerialNumGroupId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShippingAndReceivingSortOrderCode</Name>
			<Label>@SCM:ShippingAndReceivingSortCode</Label>
			<DataField>sortCode</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultProductConfigurationId</Name>
			<DataField>StandardConfigId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultProductColorId</Name>
			<DataField>StandardInventColorId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultProductSizeId</Name>
			<DataField>StandardInventSizeId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultProductStyleId</Name>
			<DataField>StandardInventStyleId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TareProductWeight</Name>
			<DataField>TaraWeight</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PackingDutyQuantity</Name>
			<Label>@Tax:QuantityOfWhichPackingDutyIsCalculated</Label>
			<DataField>TaxPackagingQty</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ArrivalHandlingTime</Name>
			<DataField>WMSArrivalHandlingTime</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PackageHandlingTime</Name>
			<ConfigurationKey>DNRDeletedObjects10</ConfigurationKey>
			<IsObsolete>Yes</IsObsolete>
			<DataField>WMSPickingQtyTime</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WarehouseFilterCode</Name>
			<DataField>FilterCode</DataField>
			<DataSource>WHSInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WarehouseFilterGroup</Name>
			<DataField>FilterGroup</DataField>
			<DataSource>WHSInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MaximumPickQuantity</Name>
			<DataField>MaxPickQty</DataField>
			<DataSource>WHSInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PackageClassId</Name>
			<DataField>PackageClassId</DataField>
			<DataSource>WHSInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PackSizeCategoryId</Name>
			<DataField>PackSizeCateogryId</DataField>
			<DataSource>WHSInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PhysicalDimensionGroupId</Name>
			<DataField>PhysDimId</DataField>
			<DataSource>WHSInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillWorkCenterPickingAllowNegativeInventory</Name>
			<Label>@SCM:AllowNegativePickingAtWorkCenter</Label>
			<DataField>PickWCNeg</DataField>
			<DataSource>WHSInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultReceivingQuantity</Name>
			<DataField>ProdQty</DataField>
			<DataSource>WHSInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WarehouseMobileDeviceDescriptionLine1</Name>
			<Label>@WAX:WarehouseMobileDeviceDescriptionLine1</Label>
			<DataField>RFDescription1</DataField>
			<DataSource>WHSInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WarehouseMobileDeviceDescriptionLine2</Name>
			<Label>@WAX:WarehouseMobileDeviceDescriptionLine2</Label>
			<DataField>RFDescription2</DataField>
			<DataSource>WHSInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RawMaterialPickingPrinciple</Name>
			<DataField>AllowMaterialOverPick</DataField>
			<DataSource>WHSInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UnitConversionSequenceGroupId</Name>
			<DataField>UOMSeqGroupId</DataField>
			<DataSource>WHSInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CatchWeightUnitSymbol</Name>
			<Mandatory>No</Mandatory>
			<DataField>PdsCWUnitId</DataField>
			<DataSource>PdsCatchWeightItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MaximumCatchWeightQuantity</Name>
			<DataField>PdsCWMax</DataField>
			<DataSource>PdsCatchWeightItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MinimumCatchWeightQuantity</Name>
			<DataField>PdsCWMin</DataField>
			<DataSource>PdsCatchWeightItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsSalesPriceAdjustmentAllowed</Name>
			<Label>@SCM:AllowSalesPriceAdjustment</Label>
			<DataField>AllowPriceAdjust</DataField>
			<DataSource>MCRInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContinuityEventDuration</Name>
			<DataField>ContEventDuration</DataField>
			<DataSource>MCRInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContinuityScheduleId</Name>
			<DataField>ContinuityScheduleId</DataField>
			<DataSource>MCRInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsRestrictedForCoupons</Name>
			<Label>@MCR:RestrictForCoupons</Label>
			<DataField>CouponUse</DataField>
			<DataSource>MCRInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultDirectDeliveryWarehouse</Name>
			<Label>@SCM:DefaultDirectDeliveryWarehouse</Label>
			<DataField>DefaultDropShipmentWarehouse</DataField>
			<DataSource>MCRInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsDeliveredDirectly</Name>
			<DataField>DropShipment</DataField>
			<DataSource>MCRInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsExemptFromAutomaticNotificationAndCancellation</Name>
			<DataField>FTCExempt</DataField>
			<DataSource>MCRInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsInstallmentEligible</Name>
			<DataField>InstallmentEligible</DataField>
			<DataSource>MCRInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillPickingWorkbenchApplyBoxingLogic</Name>
			<DataField>IsPackingBoxable</DataField>
			<DataSource>MCRInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchaseRebateProductGroupId</Name>
			<DataField>ItemVendRebateGroupId</DataField>
			<DataSource>MCRInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SellEndDate</Name>
			<DataField>SellEndDate</DataField>
			<DataSource>MCRInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SellStartDate</Name>
			<DataField>SellStartDate</DataField>
			<DataSource>MCRInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsShipAloneEnabled</Name>
			<DataField>ShipAlone</DataField>
			<DataSource>MCRInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShipStartDate</Name>
			<DataField>ShipStartDate</DataField>
			<DataSource>MCRInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultLedgerDimension</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>DefaultDimension</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultLedgerDimensionDisplayValue</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS138487</Label>
			<DataField>DisplayValue</DataField>
			<DataSource>DefaultFinancialDimensionsDAVS</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BarcodeSetupId</Name>
			<DataField>BarcodeSetupId</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ComparisonPriceBaseUnitSymbol</Name>
			<Label>@Retail:ComparisonPriceBaseUnit</Label>
			<DataField>baseComparisonUnitCode</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsScaleProduct</Name>
			<DataField>scaleItem</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsPOSRegistrationBlocked</Name>
			<Label>@Retail:BlockAtPOSRegister</Label>
			<DataField>blockedOnPOS</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>POSRegistrationBlockedDate</Name>
			<AllowEdit>Yes</AllowEdit>
			<Label>@Retail:DateWhenProductWasBlockedAtPOSRegister</Label>
			<DataField>dateBlocked</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>POSRegistrationPlannedBlockedDate</Name>
			<Label>@Retail:DateWhenProductShouldBeBlockedAtPOSRegister</Label>
			<DataField>dateToBeBlocked</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>POSRegistrationActivationDate</Name>
			<Label>@Retail:DateOfActivationAtPOSRegister</Label>
			<DataField>dateToActivateItem</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>KeyInPriceRequirementsAtPOSRegister</Name>
			<Label>@Retail:KeyInPriceAtPOSRegister</Label>
			<DataField>keyingInPrice</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>KeyInQuantityRequirementsAtPOSRegister</Name>
			<Label>@Retail:KeyInQuantityAtPOSRegister</Label>
			<DataField>keyingInQty</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MustKeyInCommentAtPOSRegister</Name>
			<Label>@Retail:MustKeyInCommentAtPOSRegister</Label>
			<DataField>mustKeyInComment</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsZeroPricePOSRegistrationAllowed</Name>
			<Label>@Retail:AllowZeroPriceAtPOSRegister</Label>
			<DataField>zeroPriceValid</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsDiscountPOSRegistrationProhibited</Name>
			<Label>@Retail:NoDiscountAllowedAtPOSRegister</Label>
			<DataField>noDiscountAllowed</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsPOSRegistrationQuantityNegative</Name>
			<Label>@Retail:QuantityBecomesNegativeAtPOSRegister</Label>
			<DataField>qtyBecomesNegative</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductLifeCycleSeasonCode</Name>
			<Label>@Retail:ProductLifeCycleSeason</Label>
			<DataField>seasonCode</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductLifeCycleValidFromDate</Name>
			<Label>@Retail:ProductLifeCycleValidFrom</Label>
			<DataField>lifeFrom</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductLifeCycleValidToDate</Name>
			<Label>@Retail:ProductLifeCycleValidTo</Label>
			<DataField>lifeTo</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsVariantShelfLabelsPrintingEnabled</Name>
			<DataField>PrintVariantsShelfLabels</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TransferOrderOverdeliveryPercentage</Name>
			<Label>@SCM:OverdeliveryPercentageForTransferOrders</Label>
			<DataField>OverDeliveryPct</DataField>
			<DataSource>InventTableModuleInvent</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TransferOrderUnderdeliveryPercentage</Name>
			<Label>@SCM:UnderdeliveryPercentageForTransferOrders</Label>
			<DataField>UnderDeliveryPct</DataField>
			<DataSource>InventTableModuleInvent</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UnitCost</Name>
			<Label>@SCM:Cost</Label>
			<DataField>Price</DataField>
			<DataSource>InventTableModuleInvent</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UnitCostDate</Name>
			<Label>@SCM:DateOfCost</Label>
			<DataField>PriceDate</DataField>
			<DataSource>InventTableModuleInvent</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UnitCostQuantity</Name>
			<Label>@SCM:CostQuantity</Label>
			<DataField>PriceUnit</DataField>
			<DataSource>InventTableModuleInvent</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsUnitCostIncludingCharges</Name>
			<Label>@SCM:IncludeChargesInCost</Label>
			<DataField>AllocateMarkup</DataField>
			<DataSource>InventTableModuleInvent</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FixedCostCharges</Name>
			<Label>@SCM:CostCharges</Label>
			<DataField>Markup</DataField>
			<DataSource>InventTableModuleInvent</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CostChargesQuantity</Name>
			<Label>@SCM:CostChargesQuantity</Label>
			<DataField>PriceQty</DataField>
			<DataSource>InventTableModuleInvent</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InventoryUnitSymbol</Name>
			<Label>@SYS16617</Label>
			<DataField>UnitId</DataField>
			<DataSource>InventTableModuleInvent</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsIntercompanySalesUsageBlocked</Name>
			<Label>@SCM:BlockIntercompanySales</Label>
			<DataField>InterCompanyBlocked</DataField>
			<DataSource>InventTableModuleSales</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesSalesTaxItemGroupCode</Name>
			<Label>@Tax:ItemSalesTaxGroupForSales</Label>
			<DataField>TaxItemGroupId</DataField>
			<DataSource>InventTableModuleSales</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillTotalSalesDiscountCalculationIncludeProduct</Name>
			<Label>@SCM:IncludeInTotalSalesDiscount</Label>
			<DataField>EndDisc</DataField>
			<DataSource>InventTableModuleSales</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesLineDiscountProductGroupCode</Name>
			<Label>@SCM:SalesLineDiscountGroup</Label>
			<DataField>LineDisc</DataField>
			<DataSource>InventTableModuleSales</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesMultilineDiscountProductGroupCode</Name>
			<Label>@SCM:SalesMultilineDiscountGroup</Label>
			<DataField>MultiLineDisc</DataField>
			<DataSource>InventTableModuleSales</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesSupplementaryProductProductGroupId</Name>
			<Label>@SCM:SalesSupplementaryItemGroup</Label>
			<DataField>SuppItemGroupId</DataField>
			<DataSource>InventTableModuleSales</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesChargeProductGroupId</Name>
			<Label>@SCM:SalesChargesGroup</Label>
			<DataField>MarkupGroupId</DataField>
			<DataSource>InventTableModuleSales</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesOverdeliveryPercentage</Name>
			<Label>@SCM:SalesOverdeliveryPercentage</Label>
			<DataField>OverDeliveryPct</DataField>
			<DataSource>InventTableModuleSales</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesUnderdeliveryPercentage</Name>
			<Label>@SCM:SalesUnderdeliveryPercentage</Label>
			<DataField>UnderDeliveryPct</DataField>
			<DataSource>InventTableModuleSales</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesPricingPrecision</Name>
			<Label>@SCM:SalesPricingPrecision</Label>
			<DataField>PDSPricingPrecision</DataField>
			<DataSource>InventTableModuleSales</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesPrice</Name>
			<Label>@SYS5755</Label>
			<DataField>Price</DataField>
			<DataSource>InventTableModuleSales</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesPriceDate</Name>
			<Label>@SCM:DateOfSalesPrice</Label>
			<DataField>PriceDate</DataField>
			<DataSource>InventTableModuleSales</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesPriceQuantity</Name>
			<Label>@SCM:SalesPriceQuantity</Label>
			<DataField>PriceUnit</DataField>
			<DataSource>InventTableModuleSales</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesUnitSymbol</Name>
			<Label>@SYS14614</Label>
			<DataField>UnitId</DataField>
			<DataSource>InventTableModuleSales</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsSalesPriceIncludingCharges</Name>
			<Label>@SCM:IncludeChargesInSalesPrice</Label>
			<DataField>AllocateMarkup</DataField>
			<DataSource>InventTableModuleSales</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FixedSalesPriceCharges</Name>
			<Label>@SCM:SalesPriceCharges</Label>
			<DataField>Markup</DataField>
			<DataSource>InventTableModuleSales</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesChargesQuantity</Name>
			<Label>@SCM:SalesChargesQuantity</Label>
			<DataField>PriceQty</DataField>
			<DataSource>InventTableModuleSales</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchaseSalesTaxItemGroupCode</Name>
			<Label>@Tax:ItemSalesTaxGroupForPurchases</Label>
			<DataField>TaxItemGroupId</DataField>
			<DataSource>InventTableModulePurch</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsIntercompanyPurchaseUsageBlocked</Name>
			<Label>@SCM:BlockIntercompanyPurchase</Label>
			<DataField>InterCompanyBlocked</DataField>
			<DataSource>InventTableModulePurch</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchaseLineDiscountProductGroupCode</Name>
			<Label>@SCM:PurchaseLineDiscountGroup</Label>
			<DataField>LineDisc</DataField>
			<DataSource>InventTableModulePurch</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchaseMultilineDiscountProductGroupCode</Name>
			<Label>@SCM:PurchaseMultilineDiscountGroup</Label>
			<DataField>MultiLineDisc</DataField>
			<DataSource>InventTableModulePurch</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillTotalPurchaseDiscountCalculationIncludeProduct</Name>
			<Label>@SCM:IncludeInTotalPurchaseDiscount</Label>
			<DataField>EndDisc</DataField>
			<DataSource>InventTableModulePurch</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchaseSupplementaryProductProductGroupId</Name>
			<Label>@SCM:PurchaseSupplementaryItemGroup</Label>
			<DataField>SuppItemGroupId</DataField>
			<DataSource>InventTableModulePurch</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchaseOverdeliveryPercentage</Name>
			<Label>@SCM:PurchaseOverdeliveryPercentage</Label>
			<DataField>OverDeliveryPct</DataField>
			<DataSource>InventTableModulePurch</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchaseUnderdeliveryPercentage</Name>
			<Label>@SCM:PurchaseUnderdeliveryPercentage</Label>
			<DataField>UnderDeliveryPct</DataField>
			<DataSource>InventTableModulePurch</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchasePricingPrecision</Name>
			<Label>@SCM:PurchasePricingPrecision</Label>
			<DataField>PDSPricingPrecision</DataField>
			<DataSource>InventTableModulePurch</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchasePrice</Name>
			<Label>@SYS12550</Label>
			<DataField>Price</DataField>
			<DataSource>InventTableModulePurch</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchasePriceDate</Name>
			<Label>@SCM:PurchasePriceDate</Label>
			<DataField>PriceDate</DataField>
			<DataSource>InventTableModulePurch</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchasePriceQuantity</Name>
			<Label>@SCM:PurchasePriceQuantity</Label>
			<DataField>PriceUnit</DataField>
			<DataSource>InventTableModulePurch</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchaseUnitSymbol</Name>
			<Label>@SYS22997</Label>
			<DataField>UnitId</DataField>
			<DataSource>InventTableModulePurch</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchaseChargeProductGroupId</Name>
			<Label>@SCM:PurchaseChargesGroup</Label>
			<DataField>MarkupGroupId</DataField>
			<DataSource>InventTableModulePurch</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsPurchasePriceIncludingCharges</Name>
			<Label>@SCM:IncludeChargesInPurchasePrice</Label>
			<DataField>AllocateMarkup</DataField>
			<DataSource>InventTableModulePurch</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FixedPurchasePriceCharges</Name>
			<Label>@SCM:PurchasePriceCharges</Label>
			<DataField>Markup</DataField>
			<DataSource>InventTableModulePurch</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchaseChargesQuantity</Name>
			<Label>@SCM:PurchaseChargesQuantity</Label>
			<DataField>PriceQty</DataField>
			<DataSource>InventTableModulePurch</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>AreTransportationManagementProcessesEnabled</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@TRX1558</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>useTransportationManagementProcessesSqlExpression</ComputedFieldMethod>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IntrastatCommodityCode</Name>
			<Label>@Tax:IntrastatCommodityCode</Label>
			<DataField>Code</DataField>
			<DataSource>IntrastatCommodity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IntrastatChargePercentage</Name>
			<Label>@Tax:ChargesPercentageForIntrastat</Label>
			<DataField>StatisticsFactor</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OriginCountryRegionId</Name>
			<Label>@SYS27196</Label>
			<DataField>OrigCountryRegionId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OriginStateId</Name>
			<Label>@SYS73785</Label>
			<DataField>OrigStateId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ApproximateSalesTaxPercentage</Name>
			<DataField>ApproxTaxValue_BR</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemFiscalClassificationExceptionCode</Name>
			<DataField>ExceptionCode_BR</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductFiscalInformationType</Name>
			<DataField>InventProductType_BR</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsICMSTaxAppliedOnService</Name>
			<DataField>ICMSOnService_BR</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductTaxationOrigin</Name>
			<DataField>TaxationOrigin_BR</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemFiscalClassificationCode</Name>
			<DataField>TaxFiscalClassification_BR</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ServiceFiscalInformationCode</Name>
			<DataField>TaxServiceCode_BR</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsSalesWithholdingTaxCalculated</Name>
			<Mandatory>No</Mandatory>
			<DataField>TaxWithholdCalculate_TH</DataField>
			<DataSource>InventTableModuleSales</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesItemWithholdingTaxGroupCode</Name>
			<AllowEdit>Yes</AllowEdit>
			<Mandatory>No</Mandatory>
			<DataField>TaxWithholdItemGroup</DataField>
			<DataSource>SalesTaxWithholdItemGroupHeading</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsPurchaseWithholdingTaxCalculated</Name>
			<Mandatory>No</Mandatory>
			<DataField>TaxWithholdCalculate_TH</DataField>
			<DataSource>InventTableModulePurch</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchaseItemWithholdingTaxGroupCode</Name>
			<AllowEdit>Yes</AllowEdit>
			<Mandatory>No</Mandatory>
			<DataField>TaxWithholdItemGroup</DataField>
			<DataSource>PurchTaxWithholdItemGroupHeading</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesGSTReliefCategoryCode</Name>
			<DataField>ReliefCategoryId</DataField>
			<DataSource>SalesTaxGSTReliefCategory</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchaseGSTReliefCategoryCode</Name>
			<DataField>ReliefCategoryId</DataField>
			<DataSource>PurchTaxGSTReliefCategory</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InventoryGSTReliefCategoryCode</Name>
			<DataField>ReliefCategoryId</DataField>
			<DataSource>InventTaxGSTReliefCategory</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TaxGSTReliefCategorySales</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>TaxGSTReliefCategory_MY</DataField>
			<DataSource>InventTableModuleSales</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TaxGSTReliefCategoryInvent</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>TaxGSTReliefCategory_MY</DataField>
			<DataSource>InventTableModuleInvent</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TaxGSTReliefCategoryPurch</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>TaxGSTReliefCategory_MY</DataField>
			<DataSource>InventTableModulePurch</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SADGroup</Name>
			<DataField>SADRateCode_PL</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PKWiUCode</Name>
			<CountryRegionCodes>PL</CountryRegionCodes>
			<DataField>PKWiUCode_PL</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsManualDiscountPOSRegistrationProhibited</Name>
			<Label>@Retail:NoManualDiscountAllowedAtPOSRegister</Label>
			<DataField>noManualDiscountAllowed</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BOBAssetGroupId</Name>
			<DataField>BOBAssetGroupId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BOBAutoAssetConvertPurch</Name>
			<DataField>BOBAutoAssetConvertPurch</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BOBAutoAssetConvertSales</Name>
			<DataField>BOBAutoAssetConvertSales</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RORBasePriceOnDistance</Name>
			<DataField>RORBasePriceOnDistance</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RORItemTradeType</Name>
			<DataField>RORItemTradeType</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RORProjCategoryIdRental</Name>
			<DataField>RORProjCategoryIdRental</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RORProjCategoryIdSubRental</Name>
			<DataField>RORProjCategoryIdSubRental</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FINCostPriceRental</Name>
			<ConfigurationKey>DNRDeletedFINObjects</ConfigurationKey>
			<IsObsolete>Yes</IsObsolete>
			<DataField>FINCostPriceRental</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ItemNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>DefaultFinancialDimensionsDimensionSet</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>DimensionSetEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>DefaultFinancialDimensions</Name>
					<Field>DefaultLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>EcoResProductV2Entity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>EcoResProductV2Entity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>ProductV2</RelatedDataEntityRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>ReleasedProducts</Role>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>ProductNumber</Field>
					<RelatedField>ProductNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>InventTable</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>InventTable</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>EcoResProduct</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>EcoResProduct</Table>
						<DataSources />
						<DerivedDataSources>
							<AxQuerySimpleDerivedDataSource>
								<Name>EcoResDistinctProduct</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>EcoResDistinctProduct</Table>
								<DataSources />
								<DerivedDataSources>
									<AxQuerySimpleDerivedDataSource>
										<Name>EcoResDistinctProductVariant</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>EcoResDistinctProductVariant</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
									</AxQuerySimpleDerivedDataSource>
								</DerivedDataSources>
								<Fields />
								<Ranges />
							</AxQuerySimpleDerivedDataSource>
							<AxQuerySimpleDerivedDataSource>
								<Name>EcoResProductMaster</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>EcoResProductMaster</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
							</AxQuerySimpleDerivedDataSource>
						</DerivedDataSources>
						<Fields />
						<Ranges />
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>EcoResProduct</Name>
								<JoinRelationName>EcoResProduct</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventItemSetupSupplyType</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>InventItemSetupSupplyType</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>InventTable</JoinDataSource>
								<JoinRelationName>InventTable_1</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>EcoResStorageDimensionGroupItem</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>EcoResStorageDimensionGroupItem</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>EcoResStorageDimensionGroup</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>EcoResStorageDimensionGroup</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>EcoResStorageDimensionGroup</Name>
										<JoinRelationName>EcoResStorageDimensionGroup</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>InventTable</Name>
								<JoinRelationName>InventTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>EcoResTrackingDimensionGroupItem</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>EcoResTrackingDimensionGroupItem</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>EcoResTrackingDimensionGroup</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>EcoResTrackingDimensionGroup</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>EcoResTrackingDimensionGroup</Name>
										<JoinRelationName>EcoResTrackingDimensionGroup</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>InventTable</Name>
								<JoinRelationName>InventTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventItemGroupItem</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>InventItemGroupItem</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>InventTable</Name>
								<JoinRelationName>InventTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventModelGroupItem</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>InventModelGroupItem</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>InventTable</Name>
								<JoinRelationName>InventTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventTableModuleInvent</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>InventTableModule</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>InventTaxWithholdItemGroupHeading</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>TaxWithholdItemGroupHeading_TH</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<JoinRelationName>TaxWithholdItemGroupHeading_TH</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>InventTaxGSTReliefCategory</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>TaxGSTReliefCategory_MY</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<JoinRelationName>TaxGSTReliefCategory_MY</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>ModuleTypeInvent</Name>
								<Field>ModuleType</Field>
								<Value>Invent</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>InventTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventTableModuleSales</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>InventTableModule</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>SalesTaxWithholdItemGroupHeading</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>TaxWithholdItemGroupHeading_TH</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<JoinRelationName>TaxWithholdItemGroupHeading_TH</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>SalesTaxGSTReliefCategory</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>TaxGSTReliefCategory_MY</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<JoinRelationName>TaxGSTReliefCategory_MY</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>ModuleTypeSales</Name>
								<Field>ModuleType</Field>
								<Value>Sales</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>InventTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventTableModulePurch</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>InventTableModule</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>PurchTaxWithholdItemGroupHeading</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>TaxWithholdItemGroupHeading_TH</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<JoinRelationName>TaxWithholdItemGroupHeading_TH</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>PurchTaxGSTReliefCategory</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>TaxGSTReliefCategory_MY</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<JoinRelationName>TaxGSTReliefCategory_MY</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>ModuleTypePurch</Name>
								<Field>ModuleType</Field>
								<Value>Purch</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>InventTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>WHSReservationHierarchyItem</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>WHSReservationHierarchyItem</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>WHSReservationHierarchy</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>WHSReservationHierarchy</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>WHSReservationHierarchy</Name>
										<JoinRelationName>WHSReservationHierarchy</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>InventTable</Name>
								<JoinRelationName>InventTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>WHSInventTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>WHSInventTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>WHSInventTable</Name>
								<JoinRelationName>InventTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>TMSInventEnabled</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>TMSInventEnabled</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>TMSInventEnabled</Name>
								<JoinRelationName>InventTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>PdsCatchWeightItem</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>PdsCatchWeightItem</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>PdsCatchWeightItem</Name>
								<JoinRelationName>InventTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>MCRInventTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>MCRInventTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>MCRInventTable</Name>
								<JoinRelationName>InventTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>DefaultFinancialDimensionsDAVS</Name>
						<AllowAdd>No</AllowAdd>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionSetEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>DefaultDimension</Field>
								<JoinDataSource>InventTable</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>RetailInventTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>RetailInventTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>InventTable</Name>
								<JoinRelationName>InventTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>IntrastatCommodity</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>EcoResCategory</Table>
						<DataSources />
						<DerivedDataSources>
							<AxQuerySimpleDerivedDataSource>
								<Name>IntrastatCommodity_PCClass</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>PCClass</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
							</AxQuerySimpleDerivedDataSource>
						</DerivedDataSources>
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>IntrastatCommodity</Field>
								<JoinDataSource>InventTable</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>