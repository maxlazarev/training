<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRPurchSelectLinesManagerClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(PurchSelectLinesManager))]
public final class DNRPurchSelectLinesManagerClass_Extension
{
    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>passSets</Name>
				<Source><![CDATA[
    public void passSets(PurchFormLetter_Invoice _purchFormLetter)
    {
        VendInvoiceInfoTable localParmTable;

        select firstonly localParmTable
            where localParmTable.TableRefId == tradeLineRefId &&
                  localParmTable.ParmId == parmId;

        if (localParmTable && !origPurchSubTableSet.elements())
        {
            localParmTable.selectForUpdate(true);
            localParmTable.PurchId = '';
            localParmTable.update();
        }
        
        next passSets(_purchFormLetter);        
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildQuery</Name>
				<Source><![CDATA[
    protected void buildQuery()
    {
        next buildQuery();

        QueryBuildDataSource    purchTableqbds                  = parmPurchTable_ds.query().dataSourceTable(tableNum(PurchTable));
        QueryBuildRange         initialPOPurchaseTypeCriteria   = purchTableqbds.addRange(fieldNum(PurchTable, PurchaseType));
    
        if (VendInvoiceInfoTable::find(parmId, tradeLineRefId).INVPurchaseType == PurchaseType::RORSubRental)
        {
            initialPOPurchaseTypeCriteria.value(enum2str(PurchaseType::RORSubRental));
        }
        else
        {
            initialPOPurchaseTypeCriteria.value(SysQuery::valueNot(enum2str(PurchaseType::RORSubRental)));
        }
        initialPOPurchaseTypeCriteria.status(RangeStatus::Locked);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>