<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRInventJournalTableTable_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(tableStr(InventJournalTable))]
public final class DNRInventJournalTableTable_Extension
{
    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean ret = next validateDelete();

        if (ret)
        {
            ret = BOBConversionJournalEngine::validateDeleteJournal(this);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>WPPinitFromProjTable</Name>
				<Source><![CDATA[
    // extension methods

    public void WPPinitFromProjTable(ProjTable _projTable)
    {
        #File
    
        this.WPPProjId    = _projTable.ProjId;
        this.Description += #delimiterSpace + _projTable.ProjId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>WPPinitFromWorkOrderLine</Name>
				<Source><![CDATA[
    public void WPPinitFromWorkOrderLine(WPPWorkOrderline _workOrderLine)
    {
        this.initFromInventJournalName(InventJournalName::find(ProjParameters::find().inventJournalNameId));
        this.WPPProjId = _workOrderLine.ProjId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>WPPfindOrCreateProId</Name>
				<Source><![CDATA[
    public static InventJournalTable WPPfindOrCreateProId(ProjId            _projId,
                                                          boolean           _skipCreateJournal = false,
                                                          InventJournalName _inventJournalName = null)
    {
        InventJournalTable  inventJournalTable;
    
        select firstOnly inventJournalTable
        where inventJournalTable.WPPProjId == _projId;
    
        if (inventJournalTable
        ||  _skipCreateJournal)
        {
            return inventJournalTable;
        }
    
        // Check on Journal name, because it is mandatory when a new record is being created
        if (!_inventJournalName)
        {
            throw error("@DNR6692");
        }
    
        inventJournalTable.JournalId = NumberSeq::newGetNum(InventParameters::numRefInventJournalId()).num();
        inventJournalTable.initFromInventJournalName(_inventJournalName);
        inventJournalTable.WPPinitFromProjTable(ProjTable::find(_projId));
    
        return inventJournalTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNRReleaseAsset</Name>
				<Source><![CDATA[
    public boolean DNRReleaseAsset(AssetId _assetId)
    {
        boolean ret;

        if (this.Posted || this.JournalType != InventJournalType::Asset || this.BOBInventJournalType != BOBInventJournalType::AssetToInvent)
        {
            return false;
        }

        ttsbegin;
        InventJournalTrans inventJournalTrans;

        select firstonly forupdate inventJournalTrans
        where inventJournalTrans.JournalId  == this.JournalId
        &&    inventJournalTrans.AssetId    == _assetId;

        if (inventJournalTrans.RecId)
        {
            RORInventTransWMS inventTransWMS = RORInventTransWMS::construct();
            inventTransWMS.parmPickRegister(RORPickRegister::Register);
            inventTransWMS.parmCommon(inventJournalTrans);
            inventTransWMS.run();

            inventJournalTrans.delete();

            InventJournalTrans inventJournalTransLeft;

            select firstOnly RecId from inventJournalTransLeft
            where inventJournalTransLeft.JournalId == this.JournalId;

            if (!inventJournalTransLeft.RecId)
            {
                this.delete();
            }

            ret = true;
         }

        ttscommit;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_delete_post</Name>
				<Source><![CDATA[
    // event handler methods

    [PostHandlerFor(tableStr(InventJournalTable), tableMethodStr(InventJournalTable, delete))]
    public static void DNREvent_delete_post(XppPrePostArgs _eventArgs)
    {
        InventJournalTable inventJournalTable = _eventArgs.getThis();
        BOBConversionJournalEngine::clearConversionJournalId(inventJournalTable);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>