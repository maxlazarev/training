<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ROROrderAmendmentDialogType_ChangeDate_Quotation</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ROROrderAmendmentDialogType_ChangeDate_Quotation extends ROROrderAmendmentDialogType_ChangeDate
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        ttsBegin;
        RORRentalDateTimes  rentalDateTimesUpdate;
    
        rentalDateTimesUpdate = RORRentalDateTimes::findReference(common.TableId, common.RecId, true);
        rentalDateTimesUpdate.initFromRentalDateTimes(rentalDateTimes);

        if (common.TableId == tableNum(SalesQuotationLine))
        {
            rentalDateTimesUpdate.SynchronizeFromParent = NoYes::No;
        }
        
        rentalDateTimesUpdate.update(null, false, forceStopTierRangeRecalculation);
        ttsCommit;
   
    }

]]></Source>
			</Method>
			<Method>
				<Name>findDirPartyRecId</Name>
				<Source><![CDATA[
    public DirPartyRecId findDirPartyRecId()
    {
        DirPartyRecId party;
    
        switch (common.TableId)
        {
            case tableNum(SalesQuotationLine):
                SalesQuotationLine salesQuotationLine = common as SalesQuotationLine;
                party = salesQuotationLine.salesQuotationTable().party();
                break;
    
            case tableNum(SalesQuotationTable):
                SalesQuotationTable salesQuotationTable = common as SalesQuotationTable;
                party = salesQuotationTable.party();
                break;
    
            default:
                throw error(Error::wrongUseOfFunction(funcName()));
        }
    
        return party;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWarningText</Name>
				<Source><![CDATA[
    public InfologText getWarningText()
    {
        return "";
    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationContainer</Name>
				<Source><![CDATA[
    public container getValidationContainer()
    {
        return [true, true, true, true, true, true, true, true];
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceProfile</Name>
				<Source><![CDATA[
    protected INVInvoiceProfileId getInvoiceProfile(Common _common)
    {
        INVInvoiceProfileId invoiceProfileId = super(_common);

        switch (common.TableId)
        {
            case tableNum(SalesQuotationTable):
                SalesQuotationTable salesQuotationTable = common as SalesQuotationTable;
                invoiceProfileId = salesQuotationTable.INVInvoiceProfileId;
                break;

            case tableNum(SalesQuotationLine):
                SalesQuotationLine salesQuotationLine = common as SalesQuotationLine;
                invoiceProfileId = salesQuotationLine.INVInvoiceProfileId;
                break;
    
            default:
                break;
        }

        return invoiceProfileId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>