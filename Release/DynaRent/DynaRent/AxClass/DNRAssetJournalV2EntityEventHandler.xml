<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRAssetJournalV2EntityEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
class DNRAssetJournalV2EntityEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>copyCustomStagingToTarget_Post</Name>
				<Source><![CDATA[
    [PostHandlerFor(tableStr(AssetJournalV2Entity), tableStaticMethodStr(AssetJournalV2Entity, copyCustomStagingToTarget))]
    public static void copyCustomStagingToTarget_Post(XppPrePostArgs _eventArgs)
    {
        DMFDefinitionGroupExecution dmfDefinitionGroupExecution = _eventArgs.getArg('_dmfDefinitionGroupExecution') as DMFDefinitionGroupExecution;

        if (dmfDefinitionGroupExecution)
        {
            LedgerJournalTrans_Asset    ledgerJournalTransAsset;
            AssetJournalV2EntityStaging staging;
            LedgerJournalTrans          ledgerJournalTrans;
            ledgerJournalTable          ledgerJournalTableExists;
            LedgerJournalTrans_Asset    ledgerJournalTransAssetExists;

            ledgerJournalTransAsset.skipDataMethods(true);

            update_recordset ledgerJournalTransAsset
            setting BOBInventLocationId = staging.DNRInventLocationId
                join DNRInventLocationId from staging
                where staging.DefinitionGroup == dmfDefinitionGroupExecution.DefinitionGroup
                &&    staging.ExecutionId     == dmfDefinitionGroupExecution.ExecutionId
                &&    staging.TransferStatus  == DMFTransferStatus::Completed
                    join TableId from ledgerjournaltrans
                    where ledgerjournaltrans.JournalNum == staging.JournalBatchNumber
                    &&    ledgerjournaltrans.LineNum    == staging.LineNumber
                    &&    ledgerJournalTrans.RecId      == ledgerJournalTransAsset.RefRecId;

            ledgerJournalTrans.skipDataMethods();

            update_recordset ledgerJournalTrans
            setting Qty = staging.DNRAssetQty
                join DNRAssetQty from staging
                where staging.DefinitionGroup    == dmfDefinitionGroupExecution.DefinitionGroup
                &&    staging.ExecutionId        == dmfDefinitionGroupExecution.ExecutionId
                &&    staging.TransferStatus     == DMFTransferStatus::Completed
                &&    staging.JournalBatchNumber == ledgerjournaltrans.JournalNum
                &&    staging.LineNumber         == ledgerjournaltrans.LineNum
                &&    staging.DNRAssetQty;
        }

    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>