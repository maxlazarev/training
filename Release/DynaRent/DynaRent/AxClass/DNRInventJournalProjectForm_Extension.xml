<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRInventJournalProjectForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(InventJournalProject))]
public final class DNRInventJournalProjectForm_Extension
{
    // extension methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>RORRecalculateCostPrice</Name>
				<Source><![CDATA[
    public void RORRecalculateCostPrice()
    {
        InventDimParm   inventDimParm;
    
        if (inventJournalTrans.inventTable().modelGroup().InventModel == InventModel::AverageCost)
        {
            // cost price in journal should be based on itemId and inventory dimensions
            inventDimParm.initFromInventDim(inventDim);
            inventJournalTrans.CostPrice    = InventSum::findSum(inventJournalTrans.ItemId, inventDim, inventDimParm).averageCostPrice();
            inventJournalTrans.CostAmount   = inventJournalTrans.calcCostAmount();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_InventJournalTransDS_OnInitValue</Name>
				<Source><![CDATA[
    // event handler methods

    [FormDataSourceEventHandler(formDataSourceStr(InventJournalProject, InventJournalTrans), FormDataSourceEventType::InitValue)]
    public static void DNREvent_InventJournalTransDS_OnInitValue(FormDataSource _sender, FormDataSourceEventArgs _eventArgs)
    {
        FormRun             formRun             = _sender.formRun();
        InventJournalTrans  inventJournalTrans  = _sender.cursor() as InventJournalTrans;

        if (formRun.args())
        {
            FormRun caller = formRun.args().caller();
            if (caller && caller.args())
            {
                FormRun parentCaller = caller.args().caller();

                if (parentCaller)
                {
                    WPPWorkOrderLine workOrderLine;

                    switch (caller.args().dataset())
                    {
                        case tableNum(WPPWorkOrderLine):
                            workOrderLine = caller.args().record();
                            break;

                        case tableNum(WPPWorkOrderLineListPageView):
                            workOrderLine = WPPWorkOrderLineListPageView::getWorkOrderLine(caller.args().record());
                            break;
                    }

                    if (workOrderLine)
                    {
   
                        ProjTable localProjTable  = ProjTable::find(workOrderLine.ProjId);

                        inventJournalTrans.ProjId = localProjTable.ProjId;
                        inventJournalTrans.initFromProjTable(localProjTable);
                        if (workOrderLine.RequestedStartDateTime)
                        {
                            StartDateTime   startDateTime   = workOrderLine.RequestedStartDateTime;
                            TransDate       transDate       = DateTimeUtil::date(workOrderLine.RequestedStartDateTime);

                            startDateTime   = DateTimeUtil::removeTimeZoneOffset(startDateTime, DateTimeUtil::getOriginatingTimeZone(startDateTime));
                            startDateTime   = DateTimeUtil::applyTimeZoneOffset(startDateTime, DateTimeUtil::getUserPreferredTimeZone());

                            if (transDate > inventJournalTrans.TransDate)
                            {
                                inventJournalTrans.TransDate = transDate;
                            }
                        }
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_InventJournalTransDS_Qty_OnModified</Name>
				<Source><![CDATA[
    [FormDataFieldEventHandler(formDataFieldStr(InventJournalProject, InventJournalTrans, Qty), FormDataFieldEventType::Modified)]
    public static void DNREvent_InventJournalTransDS_Qty_OnModified(FormDataObject _sender, FormDataFieldEventArgs _eventArgs)
    {
        Object hostObj = _sender.datasource().formRun() as Object;
        hostObj.RORRecalculateCostPrice();
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_InventJournalTransDS_ItemId_OnModified</Name>
				<Source><![CDATA[
    [FormDataFieldEventHandler(formDataFieldStr(InventJournalProject, InventJournalTrans, ItemId), FormDataFieldEventType::Modified)]
    public static void DNREvent_InventJournalTransDS_ItemId_OnModified(FormDataObject _sender, FormDataFieldEventArgs _eventArgs)
    {
        Object hostObj = _sender.datasource().formRun() as Object;
        hostObj.RORRecalculateCostPrice();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>