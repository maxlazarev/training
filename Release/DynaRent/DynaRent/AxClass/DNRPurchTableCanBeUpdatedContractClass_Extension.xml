<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRPurchTableCanBeUpdatedContractClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(PurchTableCanBeUpdatedContract))]
public final class DNRPurchTableCanBeUpdatedContractClass_Extension
{
    private boolean canEventEndBeUpdated;
    private boolean canInboundBeUpdated;
    private boolean canOutboundBeUpdated;
    private boolean canInspectionBeUpdated;
    private boolean canPreparationBeUpdated;
    private boolean canReturnNoteBeUpdated;
    private boolean canStrikeBeUpdated;
    private boolean canBuildBeUpdated;
    private boolean canEventStartBeUpdated;

    #define.CurrentVersion(1)
    #localmacro.CurrentList
        canEventEndBeUpdated,
        canInboundBeUpdated,
        canOutboundBeUpdated,
        canInspectionBeUpdated,
        canPreparationBeUpdated,
        canReturnNoteBeUpdated,
        canStrikeBeUpdated,
        canBuildBeUpdated,
        canEventStartBeUpdated
    #endmacro

    // extension methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>DNRPack</Name>
				<Source><![CDATA[
    private container DNRPack()
    {
        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNRUnpack</Name>
				<Source><![CDATA[
    private boolean DNRUnpack(container _packedClass)
    {
        Integer version = RunBase::getVersion(_packedClass);

        switch(version)
        {
            case #CurrentVersion:
                [version, #CurrentList] = _packedClass;
                break;
            default:
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORparmCanBuildBeUpdated</Name>
				<Source><![CDATA[
    public boolean RORparmCanBuildBeUpdated(boolean _canBuildBeUpdated = canBuildBeUpdated)
    {
        canBuildBeUpdated = _canBuildBeUpdated;
        return canBuildBeUpdated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORparmCanEventEndBeUpdated</Name>
				<Source><![CDATA[
    public boolean RORparmCanEventEndBeUpdated(boolean _canEventEndBeUpdated = canEventEndBeUpdated)
    {
        canEventEndBeUpdated = _canEventEndBeUpdated;
        return canEventEndBeUpdated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORparmCanEventStartBeUpdated</Name>
				<Source><![CDATA[
    public boolean RORparmCanEventStartBeUpdated(boolean _canEventStartBeUpdated = canEventStartBeUpdated)
    {
        canEventStartBeUpdated = _canEventStartBeUpdated;
        return canEventStartBeUpdated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORparmCanInboundBeUpdated</Name>
				<Source><![CDATA[
    public boolean RORparmCanInboundBeUpdated(boolean _canInboundBeUpdated = canInboundBeUpdated)
    {
        canInboundBeUpdated = _canInboundBeUpdated;
        return canInboundBeUpdated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORparmCanInspectionBeUpdated</Name>
				<Source><![CDATA[
    public boolean RORparmCanInspectionBeUpdated(boolean _canInspectionBeUpdated = canInspectionBeUpdated)
    {
        canInspectionBeUpdated = _canInspectionBeUpdated;
        return canInspectionBeUpdated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORparmCanOutboundBeUpdated</Name>
				<Source><![CDATA[
    public boolean RORparmCanOutboundBeUpdated(boolean _canOutboundBeUpdated = canOutboundBeUpdated)
    {
        canOutboundBeUpdated = _canOutboundBeUpdated;
        return canOutboundBeUpdated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORparmCanPreparationBeUpdated</Name>
				<Source><![CDATA[
    public boolean RORparmCanPreparationBeUpdated(boolean _canPreparationBeUpdated = canPreparationBeUpdated)
    {
        canPreparationBeUpdated = _canPreparationBeUpdated;
        return canPreparationBeUpdated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORparmCanReturnNoteBeUpdated</Name>
				<Source><![CDATA[
    public boolean RORparmCanReturnNoteBeUpdated(boolean _canReturnNoteBeUpdated = canReturnNoteBeUpdated)
    {
        canReturnNoteBeUpdated = _canReturnNoteBeUpdated;
        return canReturnNoteBeUpdated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORparmCanStrikeBeUpdated</Name>
				<Source><![CDATA[
    public boolean RORparmCanStrikeBeUpdated(boolean _canStrikeBeUpdated = canStrikeBeUpdated)
    {
        canStrikeBeUpdated = _canStrikeBeUpdated;
        return canStrikeBeUpdated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_pack_post</Name>
				<Source><![CDATA[
    [PostHandlerFor(classStr(PurchTableCanBeUpdatedContract), methodStr(PurchTableCanBeUpdatedContract, pack))]
    public static void DNREvent_pack_post(XppPrePostArgs _eventArgs)
    {
        PurchTableCanBeUpdatedContract hostObject = _eventArgs.getThis() as PurchTableCanBeUpdatedContract;
        SysPackExtensions::pack(_eventArgs, classStr(DNRPurchTableCanBeUpdatedContractClass_Extension), hostObject.DNRPack());
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_unpack_post</Name>
				<Source><![CDATA[
    [PostHandlerFor(classStr(PurchTableCanBeUpdatedContract), methodStr(PurchTableCanBeUpdatedContract, unpack))]
    public static void DNREvent_unpack_post(XppPrePostArgs _eventArgs)
    {
        PurchTableCanBeUpdatedContract hostObject  = _eventArgs.getThis() as PurchTableCanBeUpdatedContract;
        container                       DNRState    = SysPackExtensions::unpack(_eventArgs, classStr(DNRPurchTableCanBeUpdatedContractClass_Extension));

        if (!hostObject.DNRUnpack(DNRState))
        {
            _eventArgs.setReturnValue(false);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>