<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WPPWorkOrderOverviewTasksDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
[
    SRSReportQueryAttribute(querystr(WPPWorkOrderOverviewTasks)),
    SRSReportParameterAttribute(classstr(WPPWorkOrderReportsContract))
]
public class WPPWorkOrderOverviewTasksDP extends SRSReportDataProviderBase
{
    WPPWorkOrderTable               workOrderTable;
    WPPWorkOrderOverviewTasksTmp    workOrderTasksTmp;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getWorkOrderTasks</Name>
				<Source><![CDATA[
    private void getWorkOrderTasks()
    {
        Query query;
        QueryRun queryRun;
        QueryBuildDataSource qbds;
    
        WPPWorkOrderLine        workOrderLine;
        WPPWorkOrderTaskTable   workOrderTask;
    
        query = this.parmQuery();
        qbds = query.dataSourceTable(tableNum(WPPWorkOrderLine));
        qbds.addDynalink(fieldNum(WPPWorkOrderLine, WorkOrderId), workOrderTable, fieldNum(WPPWorkOrderTable, WorkOrderId));
    
        queryRun = new QueryRun(query);
    
        while (queryRun.next())
        {
            workOrderLine = queryRun.get(tablenum(WPPWorkOrderLine));
            workOrderTask = queryRun.get(tablenum(WPPWorkOrderTaskTable));
    
            workOrderTasksTmp.WorkOrderId               = workOrderLine.WorkOrderId;
            workOrderTasksTmp.WorkOrderLine             = workOrderLine.LineNumber;
            workOrderTasksTmp.TaskId                    = workOrderLine.TaskId;
            workOrderTasksTmp.ProjId                    = workOrderLine.ProjId;
            workOrderTasksTmp.Status                    = workOrderLine.Status;
            workOrderTasksTmp.Description               = workOrderTask.Description;
            workOrderTasksTmp.ExecutionGroupId          = workOrderLine.ExecutionGroupId;
            workOrderTasksTmp.RequestedStartDateTime    = workOrderLine.RequestedStartDateTime;
            workOrderTasksTmp.RequestedEndDateTime      = workOrderLine.RequestedEndDateTime;
            workOrderTasksTmp.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWorkOrderTasksTmp</Name>
				<Source><![CDATA[
    [
        SRSReportDataSetAttribute(tablestr(WPPWorkOrderOverviewTasksTmp))
    ]
    public WPPWorkOrderOverviewTasksTmp getWorkOrderTasksTmp()
    {
        select workOrderTasksTmp;
        return workOrderTasksTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    public void processReport()
    {
        WPPWorkOrderReportsContract contract;
    
        contract = this.parmDataContract() as WPPWorkOrderReportsContract;
        workOrderTable = WPPWorkOrderTable::find(contract.parmWorkOrderId());
    
        this.getWorkOrderTasks();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>