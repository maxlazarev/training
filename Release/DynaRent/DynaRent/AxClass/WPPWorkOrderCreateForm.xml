<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WPPWorkOrderCreateForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
class WPPWorkOrderCreateForm
{
    WPPWorkOrderTable       workOrderTable;
    ProjTable               callerProjTable;

    Set                     workOrderTemplateTableSet;

    NumberSeqFormHandler    numberSeqFormHandlerWorkOrderId;

    WPPWorkOrderTemplateId  workOrderTemplateId;
    boolean                 objectIsAvailable;
    boolean                 changeObjectAvailability;
    DNRReasonCode           reasonCode;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allowObjectAvailabilityChange</Name>
				<Source><![CDATA[
    public boolean allowObjectAvailabilityChange(WPPWorkOrderTemplateId _templateId,
                                                 boolean                _isAvailable)
    {
        WPPWorkOrderTaskTable       workOrderTaskTable;
        WPPWorkOrderTemplateLine    workOrderTemplateLine;
    
        if (_isAvailable)
        {
            select firstOnly RecId from workOrderTaskTable
            where workOrderTaskTable.SetObjectNotAvailStatus == WPPWorkOrderLineStatusNone::Created
                exists join workOrderTemplateLine
                where workOrderTemplateLine.TaskId == workOrderTaskTable.TaskId
                &&    workOrderTemplateLine.TemplateId == _templateId;
        }
        else
        {
            select firstOnly RecId from workOrderTaskTable
            where workOrderTaskTable.SetObjectAvailStatus == WPPWorkOrderLineStatusNone::Created
                exists join workOrderTemplateLine
                where workOrderTemplateLine.TaskId == workOrderTaskTable.TaskId
                &&    workOrderTemplateLine.TemplateId == _templateId;
        }
    
        return workOrderTaskTable.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delayedMaintenanceEnabled</Name>
				<Source><![CDATA[
    public boolean delayedMaintenanceEnabled(BOBObjectTableRecId _objectTableRecId, ProjGroupId _projGroupId)
    {
        WPPWorkOrderLine        workOrderLineMaintenance;
        WPPWorkOrderTable       workOrderTableMaintenance;
        WPPWorkOrderTaskTable   workOrderTaskTable;
    
        if (_objectTableRecId && _projGroupId)
        {
            while select workOrderLineMaintenance
            where workOrderLineMaintenance.Status == WPPWorkOrderLineStatus::Created
                exists join workOrderTableMaintenance
                where workOrderTableMaintenance.WorkOrderId         == workOrderLineMaintenance.WorkOrderId
                &&    workOrderTableMaintenance.BOBObjectTableRecId == _objectTableRecId
                &&    workOrderTableMaintenance.ProjGroupId         == _projGroupId
                    join TableId from workOrderTaskTable
                    where workOrderTaskTable.TaskId == workOrderLineMaintenance.TaskId
                    &&    workOrderTaskTable.TaskCategory == WPPTaskCategory::MaintenanceTask
            {
                if (!workOrderLineMaintenance.transactionsExist())
                {
                    return true;
                }
            }
        }
    
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNRparmReasonCode</Name>
				<Source><![CDATA[
    public DNRReasonCode DNRparmReasonCode(DNRReasonCode _reasonCode = reasonCode)
    {
        reasonCode = _reasonCode;
    
        return reasonCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editWorkOrderId</Name>
				<Source><![CDATA[
    public boolean editWorkOrderId()
    {
        return NumberSequenceTable::find(WPPParameters::numRefWorkOrderId().NumberSequenceId).numAllowEdit();
    }

]]></Source>
			</Method>
			<Method>
				<Name>formMethodClose</Name>
				<Source><![CDATA[
    public void formMethodClose()
    {
        if (numberSeqFormHandlerWorkOrderId)
        {
            numberSeqFormHandlerWorkOrderId.formMethodClose();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>formMethodDataSourceCreate</Name>
				<Source><![CDATA[
    public void formMethodDataSourceCreate(FormRun          _element,
                                           FormDataSource   _workOrderTable_ds)
    {
        this.numberSeqFormHandlerWorkOrderId(_element, _workOrderTable_ds).formMethodDataSourceCreate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>formMethodDataSourceValidateWrite</Name>
				<Source><![CDATA[
    public boolean formMethodDataSourceValidateWrite(FormRun        _element,
                                                     FormDataSource _workOrderTable_ds)
    {
        boolean ret = true;
    
        if (!this.numberSeqFormHandlerWorkOrderId(_element, _workOrderTable_ds).formMethodDataSourceValidateWrite())
        {
            ret = false;
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formMethodDataSourceWrite</Name>
				<Source><![CDATA[
    public void formMethodDataSourceWrite(FormRun           _element,
                                          FormDataSource    _workOrderTable_ds)
    {
        this.numberSeqFormHandlerWorkOrderId(_element, _workOrderTable_ds).formMethodDataSourceWrite();
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateFromTemplate</Name>
				<Source><![CDATA[
    public void generateFromTemplate(WPPWorkOrderTable  _workOrderTable)
    {
        WPPWorkOrderSynchronizer    workOrderSynchronizer;
    
        workOrderTemplateTableSet.add(workOrderTemplateId);
    
        ttsBegin;
        workOrderSynchronizer = WPPWorkOrderSynchronizer::newWorkOrderTable(_workOrderTable, workOrderTemplateTableSet, callerProjTable);
        workOrderSynchronizer.run();
        ttsCommit;
    
        // Some fields can be updated, so put the parmCommon in a global variable
        workOrderTable = workOrderSynchronizer.parmCommon() as WPPWorkOrderTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        workOrderTemplateTableSet = new Set(Types::String);
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqFormHandlerWorkOrderId</Name>
				<Source><![CDATA[
    protected NumberSeqFormHandler numberSeqFormHandlerWorkOrderId(FormRun          _element,
                                                                   FormDataSource   _workOrderTable_ds)
    {
        if (!numberSeqFormHandlerWorkOrderId)
        {
            numberSeqFormHandlerWorkOrderId = NumberSeqFormHandler::newForm(WPPParameters::numRefWorkOrderId().NumberSequenceId,
                                                                            _element,
                                                                            _workOrderTable_ds,
                                                                            fieldNum(WPPWorkOrderTable, WorkOrderId));
        }
    
        return numberSeqFormHandlerWorkOrderId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>objectIsAvailable</Name>
				<Source><![CDATA[
    public boolean objectIsAvailable(BOBObjectTableRecId _objectTableRecId)
    {
        BOBObjectView   objectView;
        BOBObjectTable  objectTable;
    
        select firstOnly IsAvailable from objectView
            exists join objectTable
            where objectTable.ObjectId == objectView.ObjectId
            &&    objectTable.RecId    == _objectTableRecId;
    
        objectIsAvailable = objectView.IsAvailable;
    
        return objectIsAvailable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCallerProjTable</Name>
				<Source><![CDATA[
    public ProjTable parmCallerProjTable(ProjTable _callerProjTable = callerProjTable)
    {
        callerProjTable = _callerProjTable;
    
        return callerProjTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmChangeObjectAvailability</Name>
				<Source><![CDATA[
    public boolean parmChangeObjectAvailability(boolean _changeObjectAvailability = changeObjectAvailability)
    {
        changeObjectAvailability = _changeObjectAvailability;
    
        return changeObjectAvailability;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkOrderTable</Name>
				<Source><![CDATA[
    public WPPWorkOrderTable parmWorkOrderTable(WPPWorkOrderTable _workOrderTable = workOrderTable)
    {
        workOrderTable = _workOrderTable;
    
        return workOrderTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkOrderTemplateId</Name>
				<Source><![CDATA[
    public WPPWorkOrderTemplateId parmWorkOrderTemplateId(WPPWorkOrderTemplateId _workOrderTemplateId = workOrderTemplateId)
    {
        workOrderTemplateId = _workOrderTemplateId;
    
        return workOrderTemplateId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkOrderTemplateTableSet</Name>
				<Source><![CDATA[
    public Set parmWorkOrderTemplateTableSet(Set _workOrderTemplateTableSet = workOrderTemplateTableSet)
    {
        workOrderTemplateTableSet = _workOrderTemplateTableSet;
    
        return workOrderTemplateTableSet;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static WPPWorkOrderCreateForm construct()
    {
        return new WPPWorkOrderCreateForm();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>