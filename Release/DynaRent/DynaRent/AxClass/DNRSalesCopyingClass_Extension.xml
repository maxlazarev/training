<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRSalesCopyingClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(SalesCopying))]
public final class DNRSalesCopyingClass_Extension
{
    private DNRSalesCopyingStrategy strategy;
    private boolean copyForRental;

    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initParametersFromContract</Name>
				<Source><![CDATA[
    public void initParametersFromContract(SalesOrderCopyingContract _salesOrderCopyingContract)
    {
        next initParametersFromContract(_salesOrderCopyingContract);

        if (_salesOrderCopyingContract.parmSalesPurchCopy() == SalesPurchCopy::CopyAllLines
        && salesTable.SalesType == SalesType::RORRental)
        {
            copyForRental = true;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORCopyValues</Name>
				<Source><![CDATA[
    // extension methods

    public void RORCopyValues(CustInvoiceTrans _fromCustInvoiceTrans, SalesLine _toLine)
    {
        this.parmSalesCopyingStrategy().RORCopyValues(_fromCustInvoiceTrans, _toLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORCopyParentReference</Name>
				<Source><![CDATA[
    public void RORCopyParentReference(CustInvoiceTrans _fromCustInvoiceTrans, SalesLine _toLine)
    {
        this.parmSalesCopyingStrategy().RORCopyParentReference(_fromCustInvoiceTrans, _toLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesCopyingStrategy</Name>
				<Source><![CDATA[
    private DNRSalesCopyingStrategy parmSalesCopyingStrategy()
    {
        if (!strategy)
        {
            strategy = DNRSalesCopyingStrategy::construct(this);
        }

        return strategy;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>