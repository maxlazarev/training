<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRInventTransWMS_RegisterClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(InventTransWMS_Register))]
public final class DNRInventTransWMS_RegisterClass_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateInventoryBatch</Name>
				<Source><![CDATA[
    protected static void updateInventoryBatch(TmpInventTransWMS _tmpInventTransWMS, InventDim _inventDim)
    {
        next updateInventoryBatch(_tmpInventTransWMS, _inventDim);

        BOBRentalType rentalType = BOBRentalType::findFromItemId(_tmpInventTransWMS.ItemId);

        if (rentalType && rentalType.Classification == BOBRentalTypeClassification::Serialized)
        {
            switch (_tmpInventTransWMS.ReferenceCategory)
            {
                case InventTransType::Purch:
                    if (_tmpInventTransWMS.InventQty > 0)
                    {
                        BOBObjectManager::registerPurchLine(_inventDim.inventSerialId, _tmpInventTransWMS);
                    }
                    else
                    {
                        BOBObjectManager::unRegisterPurchLine(_inventDim.inventSerialId, _tmpInventTransWMS);
                    }
                    break;
    
                case InventTransType::InventTransaction, 
                     InventTransType::Asset:
                    BOBObjectManager::registerPickInventJournalTrans(_inventDim.inventSerialId, _tmpInventTransWMS, _tmpInventTransWMS.InventQty);
                    break;
    
                case InventTransType::Production:
                    InventTransWMS_Register::BOBCreateSerialNum(_inventDim.inventSerialId, _tmpInventTransWMS);
                    if (_tmpInventTransWMS.InventQty > 0)
                    {
                        BOBObjectManager::registerProdTable(_inventDim.inventSerialId, _tmpInventTransWMS);
                    }
                    else
                    {
                        BOBObjectManager::unRegisterProdTable(_inventDim.inventSerialId, _tmpInventTransWMS);
                    }
                    break;

            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>BOBCreateSerialNum</Name>
				<Source><![CDATA[
    // extensoin methods
    public static void BOBCreateSerialNum(InventSerialId _inventSerialId, TmpInventTransWMS  _tmpInventTransWMS)
    {
        // When serial number is set on a production order check if corresponding record exists in InvetSerialTable.      
        if (_tmpInventTransWMS.ItemId && _inventSerialId && !InventSerial::exist(_inventSerialId, _tmpInventTransWMS.ItemId))
        {
            InventSerial inventSerial;
            
            inventSerial.ItemId                 = _tmpInventTransWMS.ItemId;
            inventSerial.InventSerialId         = _inventSerialId;
            inventSerial.BOBSkipObjectCreation  = BOBObjectTable::findInventSerialId(_inventSerialId).RecId;

            if (inventSerial.validateWrite())
            {
                inventSerial.insert();
            }
            // Throw a stopping error, if validation fails
            else
            {
                throw error("@DNR10167");
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>