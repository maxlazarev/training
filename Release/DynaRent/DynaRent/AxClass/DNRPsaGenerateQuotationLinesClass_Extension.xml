<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRPsaGenerateQuotationLinesClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(PSAGenerateQuotationLines))]
public final class DNRPsaGenerateQuotationLinesClass_Extension
{
    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createSalesQuotationLines</Name>
				<Source><![CDATA[
    public void createSalesQuotationLines(SalesQuotationTable _salesQuotationTable)
    {
        next createSalesQuotationLines(_salesQuotationTable);

        boolean quotationLinesCreated;

        //*** Repeated code
        HierarchyLinkTable                      hierarchyLinkTable;
        HierarchyTreeTable                      hierarchyTreeTable;
        smmActivities                           smmActivities;
        PSAActivityEstimates                    psaActivityEstimates;

        while select psaActivityEstimates
            join ActivityNumber, RecId from smmActivities
                where psaActivityEstimates.ActivityNumber == smmActivities.ActivityNumber
            join HierarchyId, ElementNumber from hierarchyTreeTable
                where smmActivities.RecId == hierarchyTreeTable.RefRecId
            join HierarchyId, RefTableId, RefRecId from hierarchyLinkTable
                where hierarchyTreeTable.HierarchyId == hierarchyLinkTable.HierarchyId
                    && hierarchyLinkTable.RefTableId == _salesQuotationTable.TableId
                    && hierarchyLinkTable.RefRecId == _salesQuotationTable.RecId
        {
            this.copyFromPSAActivityEstimates(_salesQuotationTable, psaActivityEstimates);

            if (salesQuotationLine.validateWrite())
            {
                quotationLinesCreated = true;
                // If 'quotationLinesCreated' has been set to 'true', we can break out of the while select; there is no need to set the variable to
                // 'true' multiple times.
                break;
            }
        }

        DNRPSAGenerateCreateSalesQuotationLinesDisposableContext context = DNRPSAGenerateCreateSalesQuotationLinesDisposableContext::current();
        if(context && context.DNRMustParmQuotationLinesCreatedFromPSA())
        {
            SalesQuotationTableForm salesQuotationTableForm = context.DNRParmSalesQuotationTableForm();
            salesQuotationTableForm.DNRParmQuotationLinesCreatedFromPSA(quotationLinesCreated);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>