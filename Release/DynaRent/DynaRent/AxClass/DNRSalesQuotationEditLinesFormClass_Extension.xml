<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRSalesQuotationEditLinesFormClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(SalesQuotationEditLinesForm))]
public final class DNRSalesQuotationEditLinesFormClass_Extension
{
    private DNRSalesQuotationEditLinesFormStrategy strategy;

    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    public ClassDescription caption()
    {
        ClassDescription ret = next caption();

        if(salesQuotationTable.QuotationType == QuotationType::RORProjRental)
        {
            ret = "@DNR8701";
        }
        else if(salesQuotationTable.QuotationType == QuotationType::RORRental)
        {
            ret = "@DNR1593";
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeSalesQuotationTableFromDocumentStatus</Name>
				<Source><![CDATA[
    protected void initializeSalesQuotationTableFromDocumentStatus(SalesQuotationTable _salesQuotationTable)
    {
        next initializeSalesQuotationTableFromDocumentStatus(_salesQuotationTable);

        if(this.documentStatus() == DocumentStatus::RORSubStatus)
        {
            _salesQuotationTable.ReasonId = reasonCode;
            _salesQuotationTable.QuotationStatus = SalesQuotationStatus::Confirmed;
            _salesQuotationTable.ConfirmDate = salesQuotationTable.RORdisplayLastQuotationInspectionDate();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setUpdateOpportunityBasedOnCallerForm</Name>
				<Source><![CDATA[
    protected void setUpdateOpportunityBasedOnCallerForm(str _parmSalesProj)
    {
        next setUpdateOpportunityBasedOnCallerForm(_parmSalesProj);

        ModuleAxapta moduleAxapta = SalesQuotationEditLinesForm::getCallerModuleFromParm(_parmSalesProj);

        if (moduleAxapta == ModuleAxapta::RORRental)
        {
            if (smmParameters::updateOpportunityForQuote(QuotationType::RORRental))
            {
                this.parmUpdateOpportunity(true);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCallerModuleFromParm</Name>
				<Source><![CDATA[
    static ModuleAxapta getCallerModuleFromParm(str _parm)
    {
        #define.rental('Rental')
        #define.rentalProject('Rental project')

        ModuleAxapta ret = next getCallerModuleFromParm(_parm);

        if (_parm == #rental)
        {
            ret = ModuleAxapta::RORRental;
        }
        else if (_parm == #rentalProject)
        {
            ret = ModuleAxapta::RORRentalProject;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>INVCalculationDate</Name>
				<Source><![CDATA[
    // extension methods

    public INVDateCalculation INVCalculationDate()
    {
        return dateNull();
        //return salesQuotationParmUpdate.INVDateCalculation ? salesQuotationParmUpdate.INVDateCalculation : this.transDate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORQuotationType</Name>
				<Source><![CDATA[
    public QuotationType RORQuotationType()
    {
        return this.parmSalesQuotationEditLinesFormStrategy().RORQuotationType();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesQuotationEditLinesFormStrategy</Name>
				<Source><![CDATA[
    private DNRSalesQuotationEditLinesFormStrategy parmSalesQuotationEditLinesFormStrategy()
    {
        if (!strategy)
        {
            strategy = DNRSalesQuotationEditLinesFormStrategy::construct(this);
        }

        return strategy;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>