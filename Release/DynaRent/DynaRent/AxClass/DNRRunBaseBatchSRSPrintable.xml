<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRRunBaseBatchSRSPrintable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public abstract class DNRRunBaseBatchSRSPrintable extends RunBaseBatch
{
    #define.GroupQueryPrinter('GroupQueryPrinter')
    #define.GroupPrinter('GroupPrinter')
    #define.PrintMedium('PrintMedium')
    #define.PrinterName('PrinterName')
    #define.UsePrintManagement('UsePrintManagement')

    SRSPrintDestinationSettings printDestinationSettings;
    boolean                     usePrintManagement;
    DialogRunbase               dialog;

    #define.CurrentVersion(2)
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public Object dialog(DialogRunbase _dialog = null, boolean _forceOnClient = false)
    {
        FormBuildGroupControl       groupQueryPrinter;
        FormBuildGroupControl       groupPrinter;
        FormBuildComboBoxControl    printMedium;
        FormBuildStringControl      printerName;
        FormBuildCheckBoxcontrol    usePrintManagementControl;
    
        dialog = super();
        dialog.caption(this.caption());
    
        groupQueryPrinter = dialog.dialogForm().control(#GroupQueryPrinter);
    
        groupPrinter = groupQueryPrinter.addControl(FormControlType::Group, #GroupPrinter);
        groupPrinter.caption("@SYS77551");
    
        printMedium = groupPrinter.addControl(FormControlType::ComboBox, #PrintMedium);
        printMedium.enumType(enumNum(SRSPrintMediumType));
        printMedium.label("@SYS28144");
        printMedium.allowEdit(false);
        printMedium.selection(enum2int(printDestinationSettings.printMediumType()));
    
        printerName = groupPrinter.addControl(FormControlType::String, #PrinterName);
        printerName.label("@SYS3723");
        printerName.allowEdit(false);

        usePrintManagementControl = groupPrinter.addControl(FormControlType::CheckBox, #UsePrintManagement);
        usePrintManagementControl.label("@SYS93922");
        usePrintManagementControl.value(usePrintManagement);
        
        if (printMedium.selection() == SRSPrintMediumType::Printer)
        {
            printerName.text(printDestinationSettings.printerName());
        }
        else
        {
            printerName.text('');
        }
    
    
        if (menuitemdisplaystr(DNRSRSPrintDestinationSettingsDialog))
        {
            dialog.addMenuItemButton(MenuItemType::Display, menuitemdisplaystr(DNRSRSPrintDestinationSettingsDialog), DialogMenuItemGroup::RightGrp);
        }
    
        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmDefault</Name>
				<Source><![CDATA[
    public void initParmDefault()
    {
        this.printSettings(new SRSPrintDestinationSettings());
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion, printDestinationSettings.pack()];
    }

]]></Source>
			</Method>
			<Method>
				<Name>printSettings</Name>
				<Source><![CDATA[
    public SRSPrintDestinationSettings printSettings(SRSPrintDestinationSettings _printDestinationSettings = printDestinationSettings)
    {
        if (!prmisDefault(_printDestinationSettings))
        {
            printDestinationSettings = _printDestinationSettings;
            this.updatePrinterSettings(printDestinationSettings);
        }
    
        return printDestinationSettings;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        Integer     version = RunBase::getVersion(packedClass);
        container   packedPrintDestinationSettings;
    
        switch (version)
        {
            case #CurrentVersion:
                [version, packedPrintDestinationSettings] = packedClass;
                if (packedPrintDestinationSettings)
                {
                    this.printSettings(new SRSPrintDestinationSettings(packedPrintDestinationSettings));
                }
                break;
            default :
                return false;
        }
    
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePrinterSettings</Name>
				<Source><![CDATA[
    public void updatePrinterSettings(SRSPrintDestinationSettings _printDestinationSettings)
    {
        SRSPrintMediumType      printMediumType = _printDestinationSettings.printMediumType();
        FormComboBoxControl     printMedium;
        FormStringControl       printerName;
    
        if (dialog)
        {
            printMedium = dialog.dialogForm().control(#PrintMedium);
            printerName = dialog.dialogForm().control(#PrinterName);
    
            if (printMedium)
            {
                printMedium.selection(enum2int(printMediumType));
            }
    
            if (printerName)
            {
                if (printMediumType == SRSPrintMediumType::Printer)
                {
                    printerName.text(_printDestinationSettings.printerName());
                }
                else
                {
                    printerName.text('');
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>