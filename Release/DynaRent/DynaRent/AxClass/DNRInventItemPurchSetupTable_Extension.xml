<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRInventItemPurchSetupTable_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(tableStr(InventItemPurchSetup))]
public final class DNRInventItemPurchSetupTable_Extension
{
    // extension methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>ROREditTaxItemGroup</Name>
				<Source><![CDATA[
    static edit TaxItemGroup ROREditTaxItemGroup(InventItemPurchSetup _hostObj, boolean _set, TaxItemGroup _taxItemGroup)
    {
        InventTableModule inventTableModule = InventTableModule::find(_hostObj.ItemId, ModuleInventPurchSales::Purch);

        if(_set
        && inventTableModule
        && hasFieldAccess(tableNum(InventTableModule), fieldNum(InventTableModule, TaxItemGroupId), AccessType::Edit))
        {
            ttsbegin;
            inventTableModule.selectForUpdate(true);
            inventTableModule.TaxItemGroupId = _taxItemGroup;
            inventTableModule.update();
            ttscommit;
        }

        return inventTableModule.TaxItemGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_OnUpdated</Name>
				<Source><![CDATA[
    // event handler methods

    [DataEventHandler(tableStr(InventItemPurchSetup), DataEventType::Updated)]
    public static void DNREvent_OnUpdated(Common _sender, DataEventArgs _eventArgs)
    {
        InventItemPurchSetup    inventItemPurchSetup    = _sender as InventItemPurchSetup;
        InventItemSetupSequence origSequence            = inventItemPurchSetup.orig().Sequence;
        boolean                 sequenceUpdated         = (origSequence != inventItemPurchSetup.Sequence);

        if (sequenceUpdated)
        {
            RORInventItemRentalSetup rentalSetup = RORInventItemRentalSetup::find(inventItemPurchSetup.ItemId, inventItemPurchSetup.InventDimId, true);
            rentalSetup.inventItemOrderSetupMap::updateSequence(inventItemPurchSetup.Sequence);
            
            RORInventItemSubRentalSetup subRentalSetup = RORInventItemSubRentalSetup::find(inventItemPurchSetup.ItemId, inventItemPurchSetup.InventDimId, true);
            subRentalSetup.inventItemOrderSetupMap::updateSequence(inventItemPurchSetup.Sequence);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>