<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRProjJournalTransEmplForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(ProjJournalTransEmpl))]
public final class DNRProjJournalTransEmplForm_Extension
{
    // extension methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>DNRParmJournalFormTrans</Name>
				<Source><![CDATA[
    public ProjJournalFormTrans_Hour DNRParmJournalFormTrans(ProjJournalFormTrans_Hour _journalFormTrans = journalFormTrans)
    {
        journalFormTrans = _journalFormTrans;
        return journalFormTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_element_OnInitializing</Name>
				<Source><![CDATA[
    // event handler methods

    [FormEventHandler(formStr(ProjJournalTransEmpl), FormEventType::Initializing)]
    public static void DNREvent_element_OnInitializing(xFormRun _sender, FormEventArgs _eventArgs)
    {
        FormRun formRun = _sender as FormRun;
        ProjJournalFormTrans_WPPHour journalFormTrans = new ProjJournalFormTrans_WPPHour(formRun);
        
        Object formRunObj = formRun as Object;
        formRunObj.DNRParmJournalFormTrans(journalFormTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_element_OnInitialized</Name>
				<Source><![CDATA[
    [FormEventHandler(formStr(ProjJournalTransEmpl), FormEventType::Initialized)]
    public static void DNREvent_element_OnInitialized(xFormRun _sender, FormEventArgs _eventArgs)
    {
        FormRun                     formRun                 = _sender as FormRun;
        Object                      formRunObj              = formRun as Object;
        FormDataSource              ProjJournalTrans_ds     = formRun.dataSource(formDataSourceStr(ProjJournalTransEmpl, ProjJournalTrans));
        ProjJournalFormTrans_Hour   journalFormTrans        = formRunObj.DNRParmJournalFormTrans();

        // *** Repeated code
        ProjJournalNameId       journalNameId           = journalFormTrans.getJournalFormTable().getJournalFormTable().journalTableData().journalTable().JournalNameId;
        ProjTimeRegistration    timeRegistrationVisible = ProjParameters::find().TimeRegistration;
        ProjTimeRegistration    timeRegistrationEnable  = ProjJournalName::find(journalNameId).TimeRegistration;

        ProjJournalTrans_ds.object(fieldNum(ProjJournalTrans, WPPBreakQty)).visible(timeRegistrationVisible);
        ProjJournalTrans_ds.object(fieldNum(ProjJournalTrans, WPPBreakQty)).allowEdit(timeRegistrationEnable);
        ProjJournalTrans_ds.object(fieldNum(ProjJournalTrans, WPPBreakQty)).skip(!timeRegistrationEnable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_ProjJournalTransDS_OnInitValue</Name>
				<Source><![CDATA[
    [FormDataSourceEventHandler(formDataSourceStr(ProjJournalTransEmpl, ProjJournalTrans), FormDataSourceEventType::InitValue)]
    public static void DNREvent_ProjJournalTransDS_OnInitValue(FormDataSource _sender, FormDataSourceEventArgs _eventArgs)
    {
        FormRun             formRun             = _sender.formRun();
        ProjJournalTrans    projJournalTrans    = _sender.cursor() as ProjJournalTrans;

        if (formRun.args())
        {
            FormRun caller = formRun.args().caller();
        
            if (caller && caller.args() && caller.args().caller())
            {
                WPPWorkOrderLine workOrderLine;

                switch (caller.args().dataset())
                {
                    case tableNum(WPPWorkOrderLine):
                        workOrderLine = caller.args().record();
                        break;

                    case tableNum(WPPWorkOrderLineListPageView):
                        workOrderLine = WPPWorkOrderLineListPageView::getWorkOrderLine(caller.args().record());
                        break;
                }
        
                if (workOrderLine.RORProjActivity)
                {
                    projJournalTrans.ProjId = smmActivities::find(workOrderLine.RORProjActivity).projId();
                    projJournalTrans.ActivityNumber = workOrderLine.RORProjActivity;
                }
        
                if (!WPPParameters::find().PreFillWorkerInHourJournals)
                {
                    projJournalTrans.Resource = 0;
                    projJournalTrans.CategoryId = '';
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_ProjJournalTransDS_OnWritten</Name>
				<Source><![CDATA[
    [FormDataSourceEventHandler(formDataSourceStr(ProjJournalTransEmpl, ProjJournalTrans), FormDataSourceEventType::Written)]
    public static void DNREvent_ProjJournalTransDS_OnWritten(FormDataSource _sender, FormDataSourceEventArgs _eventArgs)
    {
        ProjJournalTrans projJournalTrans = _sender.cursor() as ProjJournalTrans;
        FormRun formRun = _sender.formRun();
        WPPWorkOrderLine workOrderLine;

        if (formRun.args())
        {
            FormRun caller = formRun.args().caller();
        
            if (caller && caller.args() && caller.args().caller() && caller.args().dataset() == tableNum(WPPWorkOrderLine))
            {
                workOrderLine = caller.args().record();
            }
        }

        projJournalTrans.WPPCreateWorkOrderLineHourTrans(workOrderLine.RecId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>