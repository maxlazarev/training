<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRPurchParmLineTable_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(tableStr(PurchParmLine))]
public final class DNRPurchParmLineTable_Extension
{
    // extension methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>BOBValidatePartialDelivery</Name>
				<Source><![CDATA[
    public boolean BOBValidatePartialDelivery()
    {
        boolean         ret = true;
        PurchLine       purchLine = this.purchLine();
        BOBRentalType   rentalType = BOBRentalType::findFromItemId(purchLine.ItemId); 
    
        if (purchLine.QtyOrdered != this.InventNow
        &&  purchLine.CreateFixedAsset
        &&  rentalType
        &&  rentalType.Classification == BOBRentalTypeClassification::Bulk)
        {
            ret = checkFailed("@DNR6522");
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>INVHasChildParmLine</Name>
				<Source><![CDATA[
    public static boolean INVHasChildParmLine(ParmId _parmId, PurchId _purchId, RecId _parentRecId)
    {
        PurchParmLine   purchParmLineChild;
        PurchLine       purchLineChild;
        ;
    
        if (_parmId && _parentRecId)
        {
            select firstonly RecId from purchParmLineChild
            where purchParmLineChild.ParmId             == _parmId
            && purchParmLineChild.OrigPurchId           == _purchId
                exists join purchLineChild
                where purchLineChild.InventTransId == purchParmLineChild.InventTransId
                && purchLineChild.RORParentLineRecId == _parentRecId;
        }
    
        return purchParmLineChild.RecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>