<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WPPWorkOrderTableForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
class WPPWorkOrderTableForm
{
    WPPWorkOrderTable   workOrderTable;

    BOBObjectTableRecId objectTableRecId;
    boolean             showDelayedMaintenance;
    FromDateTime        selectionFromDateTime;
    ToDateTime          selectionToDateTime;

    Common              common;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>BOBMoveDelayedMainteance</Name>
				<Source><![CDATA[
    public void BOBMoveDelayedMainteance()
    {
        Args    args;
        FormRun delayedMaintenance;
    
        args = new Args();
        args.name(formStr(BOBDelayedMaintenance));
        args.caller(this);
        args.record(workOrderTable);
        args.parmEnumType(enumNum(NoYes));
        args.parmEnum(NoYes::Yes);
    
        delayedMaintenance = classfactory.formRunClass(args);
        delayedMaintenance.init();
        delayedMaintenance.run();
        if (!delayedMaintenance.closed())
        {
            delayedMaintenance.wait();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>BOBparmObjectTableRecId</Name>
				<Source><![CDATA[
    public BOBObjectTableRecId BOBparmObjectTableRecId(BOBObjectTableRecId _objectTableRecId = objectTableRecId)
    {
        objectTableRecId = _objectTableRecId;
    
        return objectTableRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
    boolean  create()
    {
        Args                args = new Args();
        FormRun             workOrderCreate;
        WPPWorkOrderTable   currentRecord;
        boolean             ret;
    
        currentRecord = workOrderTable;
    
        args.name(formStr(WPPWOrkOrderCreate));
        args.caller(this);
        workOrderCreate = classfactory.formRunClass(args);
        workOrderCreate.init();
        workOrderCreate.run();
        if (!workOrderCreate.closed())
        {
            workOrderCreate.wait();
        }
    
        if (workOrderCreate.closedOk())
        {
            ret = true;
        }
        else
        {
            workOrderTable = currentRecord;
            ret = false;
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNRCreateAdditionalNote</Name>
				<Source><![CDATA[
    public void DNRCreateAdditionalNote(DNRAdditionalNote _internalNote)
    {
        DNRAdditionalNoteTable noteTable;
        ;
    
        noteTable.initFromCommon(workOrderTable);
        noteTable.InternalNote = _internalNote;
        noteTable.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCommon</Name>
				<Source><![CDATA[
    public Common parmCommon(Common _common = common)
    {
        common = _common;
    
        return common;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowDelayedMaintenance</Name>
				<Source><![CDATA[
    public boolean parmShowDelayedMaintenance(boolean _showDelayedMaintenance = showDelayedMaintenance)
    {
        showDelayedMaintenance = _showDelayedMaintenance;
    
        return showDelayedMaintenance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkOrderTable</Name>
				<Source><![CDATA[
    public WPPWorkOrderTable parmWorkOrderTable(WPPWorkOrderTable _workOrderTable = workOrderTable)
    {
        workOrderTable = _workOrderTable;
    
        return workOrderTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORParmSelectionFromDateTime</Name>
				<Source><![CDATA[
    public FromDateTime RORParmSelectionFromDateTime(FromDateTime _selectionFromDateTime = selectionFromDateTIme)
    {
        selectionFromDateTime = _selectionFromDateTime;
    
        return selectionFromDateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORParmSelectionToDateTime</Name>
				<Source><![CDATA[
    public ToDateTime RORParmSelectionToDateTime(ToDateTime _selectionToDateTime = selectionToDateTime)
    {
        selectionToDateTime = _selectionToDateTime;
    
        return selectionToDateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkCreateProject</Name>
				<Source><![CDATA[
    public boolean checkCreateProject(WPPWorkOrderLine _workOrderLine)
    {
        ProjTable callerProjTable;
        WPPWorkOrderLine callerWorkOrderLine = _workOrderLine;
        boolean ret = callerWorkOrderLine.ProjId ? true : false;

        if (ret && callerWorkOrderLine.ProjCompanyId != curExt() && !ProjTable::exist(callerWorkOrderLine.ProjId))
        {
            if (Box::yesNo(strFmt("@DNR10200", callerWorkOrderLine.ProjCompanyId), DialogButton::No, "@DNR10199"))
            {
                if (workOrderTable.CompanyId != curExt() && !CustTable::findByPartyRecId(workOrderTable.OrganizationParty).RecId)
                {
                    throw error("@DNR10198");
                }

                select crosscompany : [callerWorkOrderLine.ProjCompanyId] callerProjTable
                where callerProjTable.ProjId == callerWorkOrderLine.ProjId;

                ProjTable projTableNew = callerWorkOrderLine.projCreateFromProject(callerProjTable, CustTable::findByPartyRecId(workOrderTable.OrganizationParty), workOrderTable, true);

                if (!projTableNew)
                {
                    ret = false;
                }
            }
            else
            {
                ret = false;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static WPPWorkOrderTableForm construct()
    {
        return new WPPWorkOrderTableForm();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>