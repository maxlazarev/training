<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RAGContractTableListPageInteraction</Name>
	<SourceCode>
		<Declaration><![CDATA[
class RAGContractTableListPageInteraction extends SysListPageInteractionBase
{
    RAGContractView contractView;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>currentContractView</Name>
				<Source><![CDATA[
    private RAGContractView currentContractView()
    {
        return this.listPage().activeRecord(queryDataSourceStr(RAGContractTableListPage, ContractView)) as RAGContractView;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectionChanged</Name>
				<Source><![CDATA[
    public void selectionChanged()
    {
        contractView = this.currentContractView();
    
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setButtonEnabled</Name>
				<Source><![CDATA[
    protected void setButtonEnabled()
    {
        this.setButtonMaintain();
        this.setButtonOtherPlaces();
        this.setButtonStatusGroup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setButtonMaintain</Name>
				<Source><![CDATA[
    private void setButtonMaintain()
    {
        //this.listPage().actionPaneControlEnabled(formControlStr(RAGContractTableListPage, DeleteButton), contractView.Status == RAGContractStatus::Created);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setButtonOtherPlaces</Name>
				<Source><![CDATA[
    private void setButtonOtherPlaces()
    {
        boolean isVenueOrVenueGroup = contractView.ContractType == RAGContractType::VenueGroup ||
                                      contractView.ContractType == RAGContractType::Venue;
    
        this.listPage().actionPaneControlEnabled(formControlStr(RAGContractTableListPage, RAGContractSubscription), isVenueOrVenueGroup);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setButtonStatusGroup</Name>
				<Source><![CDATA[
    private void setButtonStatusGroup()
    {
        this.listPage().actionPaneControlEnabled(formControlStr(RAGContractTableListPage, RAGChangeContractStatus), contractView.Status < RAGContractStatus::Canceled);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeQuery</Name>
				<Source><![CDATA[
    public void initializeQuery(Query _query)
    {
        super(_query);

        ListPageArgs callerArgs = this.listPage().listPageArgs();
        if (callerArgs.enumParameter() == RAGContractStatus::Confirmed)
        {
            QueryBuildDataSource queryBuildDataSource = _query.dataSourceTable(tableNum(RAGContractTable));

            if (queryBuildDataSource)
            {
                QueryBuildRange contractStatusRange = SysQuery::findOrCreateRange(queryBuildDataSource, fieldNum(RAGContractTable, Status));
                contractStatusRange.value(SysQuery::value(RAGContractStatus::Confirmed));
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>