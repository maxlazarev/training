<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRPurchParmUpdateTable_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(tableStr(PurchParmUpdate))]
public final class DNRPurchParmUpdateTable_Extension
{
    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromSysLastValue</Name>
				<Source><![CDATA[
    void initFromSysLastValue(PurchParmUpdate _purchParmUpdate)
    {
        next initFromSysLastValue(_purchParmUpdate);

        this.INVIncludeCredits      = _purchParmUpdate.INVIncludeCredits;
        this.INVIncludeUninvoiced   = _purchParmUpdate.INVIncludeUninvoiced;
    }

]]></Source>
			</Method>
			<Method>
				<Name>INVCalculationDateTime</Name>
				<Source><![CDATA[
    // extension methods

    public INVCalculationDateTime INVCalculationDateTime(TransDate _transDate, TimeOfDay _transTime)
    {
        return this.INVCalculationDateTime ? this.INVCalculationDateTime : DateTimeUtil::newDateTime(_transDate, _transTime);
    }

]]></Source>
			</Method>
			<Method>
				<Name>INVCheckContinueWithLog</Name>
				<Source><![CDATA[
    public boolean INVCheckContinueWithLog()
    {
        VendInvoiceInfoTable vendInvoiceInfoTable;
        boolean              ret = true;
        #resAppl
    
        select firstonly vendInvoiceInfoTable
        where vendInvoiceInfoTable.ParmId == this.ParmId
        && vendInvoiceInfoTable.INVPurchaseType == PurchaseType::RORSubRental
        && vendInvoiceInfoTable.Log;
    
        if (vendInvoiceInfoTable)
        {
            Box::info("@DNR8585");
    
            ret = false;
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>INVInitFromPurchParmUpdate</Name>
				<Source><![CDATA[
    public void INVInitFromPurchParmUpdate(PurchParmUpdate _purchParmUpdate)
    {
        this.INVCalculationDateTime         = _purchParmUpdate.INVCalculationDateTime;
        this.INVIncludeCredits              = _purchParmUpdate.INVIncludeCredits;
        this.INVIncludeUninvoiced           = _purchParmUpdate.INVIncludeUninvoiced;
    }

]]></Source>
			</Method>
			<Method>
				<Name>INVSetParmUpdateForExtendedCredit</Name>
				<Source><![CDATA[
    public void INVSetParmUpdateForExtendedCredit()
    {
        this.INVIncludeCredits              = NoYes::Yes;
        this.INVIncludeUninvoiced           = NoYes::No;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>