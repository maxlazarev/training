<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRLedgerJournalTableForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(LedgerJournalTable))]
public final class DNRLedgerJournalTableForm_Extension
{
    private WPPWorkOrderLine workOrderLine;

    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void init()
    {
        if (this.args())
        {
            switch (this.args().dataset())
            {
                case tableNum(WPPWorkOrderLine):
                    workOrderLine = this.args().record();
                    break;

                case tableNum(WPPWorkOrderLineListPageView):
                    workOrderLine = WPPWorkOrderLineListPageView::getWorkOrderLine(this.args().record());
                    break;
            }
        }

        next init();
        
        if (workOrderLine)
        {
            journalFormTable.WPPparmProjId(workOrderLine.ProjId);
            LedgerJournalTable_ds.insertIfEmpty(true);
        }

        FINDimValueController::setEditableDimensionSet(tableNum(LedgerJournalTable), this.design().controlName(formControlStr(LedgerJournalTable, DimensionEntryControl)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNRparmWorkOrderLine</Name>
				<Source><![CDATA[
    // extension methods

    public WPPWorkOrderLine DNRparmWorkOrderLine(WPPWorkOrderLine _workOrderLine = workOrderLine)
    {
        workOrderLine = _workOrderLine;
        return workOrderLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_LedgerJournalTableDS_OnCreated</Name>
				<Source><![CDATA[
    // event handler methods

    [FormDataSourceEventHandler(formDataSourceStr(LedgerJournalTable, LedgerJournalTable), FormDataSourceEventType::Created)]
    public static void DNREvent_LedgerJournalTableDS_OnCreated(FormDataSource _sender, FormDataSourceEventArgs _eventArgs)
    {
        FormRun             formRun             = _sender.formRun() as FormRun;
        Object              formRunObject       = formRun as Object;
        LedgerJournalTable  ledgerJournalTable  = formRun.dataSource().cursor() as LedgerJournalTable;
        WPPWorkOrderLine    workOrderLine       = formRunObject.DNRparmWorkOrderLine();

        if (workOrderLine)
        {
            ledgerJournalTable.WPPinitFromWorkOrderLine(workOrderLine);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNRChangeAllOpenPosted</Name>
				<Source><![CDATA[
    [SysObsolete('DNRDeletedObjects07_2020. Method DNRChangeAllOpenPosted has been made obsolete')]
    public void DNRChangeAllOpenPosted(AllOpenPosted _allOpenPosted = AllOpenPosted::All)
    {
        LedgerJournalFormTable journalFormTableLocal;

        allOpenPostedField.selection(_allOpenPosted);
        allOpenPostedField.selectionChange();

        journalFormTableLocal = this.journalForm();
        journalFormTableLocal.parmCtrlAllOpenPosted(allOpenPostedField);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>