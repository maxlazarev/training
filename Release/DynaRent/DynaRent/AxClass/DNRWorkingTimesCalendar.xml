<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRWorkingTimesCalendar</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>DNRWorkingTimesCalendar</c> class retrieves the working times according to a specified
///    calendar ID and a given interval.
/// </summary>
class DNRWorkingTimesCalendar extends DNRWorkingTimes
{
    DNRCalendarId  calendarId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getWorkingTimes</Name>
				<Source><![CDATA[
        /// <summary>
    ///    Gets the working times for the calendar specfieid by the <c>calendarId</c> field and the interval
    ///    that was set up when the object was created.
    /// </summary>
    /// <returns>
    ///    A container that stores the working time records. Each element in the container is another
    ///    container that holds the <c>startDateTime</c>, <c>endDateTime</c>, <c>effectivity</c>, and
    ///    <c>propertyId</c> values.
    /// </returns>
    public container getWorkingTimes()
    {
        slotsToReturn = 0;

        // check if we were requested to fetch any working times
        if (workingTimesCount > 0)
        {
            this.processCalendarTimeInterval(calendarId,
                                             startDate,
                                             startTime,
                                             endDate,
                                             endTime);
        }

        return workingTimes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCalendarId</Name>
				<Source><![CDATA[
    public DNRCalendarId parmCalendarId(DNRCalendarId _calendarId = calendarId)
    {
        if (!prmIsDefault(_calendarId))
        {
            calendarId = _calendarId;
        }
        return calendarId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static DNRWorkingTimesCalendar construct()
    {
        return new DNRWorkingTimesCalendar();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newCalendarId</Name>
				<Source><![CDATA[
        /// <summary>
    /// Constucts a <c>DNRWorkingTimes</c> object based on a certain calendar.
    /// </summary>
    /// <param name="_calendarId">
    /// The <c>CalendarId</c> value for which the working times are to be fetched.
    /// </param>
    /// <param name="_startDate">
    /// The start date for the interval.
    /// </param>
    /// <param name="_startTime">
    /// The start time for the interval.
    /// </param>
    /// <param name="_endDate">
    /// The end date for the interval.
    /// </param>
    /// <param name="_endTime">
    /// The end time for the interval.
    /// </param>
    /// <param name="_workingTimesCount">
    /// The number of working time records to retrieve.
    /// </param>
    /// <param name="_forward">
    /// true the direction to look is forward; otherwise, false.
    /// </param>
    /// <returns>
    /// A container that stores the working time records.
    /// </returns>
    public static DNRWorkingTimesCalendar newCalendarId(DNRCalendarId _calendarId,
                                                        date          _startDate,
                                                        TimeOfDay     _startTime,
                                                        date          _endDate,
                                                        TimeOfDay     _endTime,
                                                        int           _workingTimesCount,
                                                        boolean       _forward)
    {
        DNRWorkingTimesCalendar wrkCtrWorkingTimesCalendar = DNRWorkingTimesCalendar::construct();

        wrkCtrWorkingTimesCalendar.parmCalendarId(_calendarId);
        wrkCtrWorkingTimesCalendar.parmStartDate(_startDate);
        wrkCtrWorkingTimesCalendar.parmStartTime(_startTime);
        wrkCtrWorkingTimesCalendar.parmEndDate(_endDate);
        wrkCtrWorkingTimesCalendar.parmEndTime(_endTime);
        wrkCtrWorkingTimesCalendar.parmWorkingTimesCount(_workingTimesCount);
        wrkCtrWorkingTimesCalendar.parmForward(_forward);

        return wrkCtrWorkingTimesCalendar;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>