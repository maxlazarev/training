<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRInventTransFormHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
class DNRInventTransFormHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>jumpRefReferenceId</Name>
				<Source><![CDATA[
    public static boolean jumpRefReferenceId(InventTransOrigin _inventTransOrigin, OpenMode _openMode = OpenMode::Auto)
    {
        boolean ret;
        switch (_inventTransOrigin.ReferenceCategory)
        {
            case InventTransType::Sales:
                SalesTable salesTable = InventTransOriginSalesLine::salesLine(_inventTransOrigin.RecId).salesTable();

                if (salesTable)
                {
                    if (salesTable.SalesType == SalesType::ReturnItem)
                    {
                        Args args = new Args();
                        args.record(salesTable);
                        args.openMode(_openMode);
                        MenuFunction menuFunction = new MenuFunction(salesTable.getJumpRefDisplayMenuItemName(), MenuItemType::Display);
                        menuFunction.run(args);
                    }
                    else
                    {
                        Args args = new Args();
                        args.record(salesTable);
                        RORSalesTableMainTable::main(args);
                    }

                    ret = true;
                }
                break;

            case InventTransType::Purch:
                if (InventTrans::findByInventTransOrigin(_inventTransOrigin.RecId).StatusReceipt != StatusReceipt::QuotationReceipt)
                {
                    PurchTable purchTable = InventTransOriginPurchLine::purchLine(_inventTransOrigin.RecId).purchTable();

                    if (purchTable)
                    {
                        Args args = new Args();
                        args.record(purchTable);
                        RORPurchTableMainTable::main(args);
                        ret = true;
                    }
                }
                break;
            
            default : 
                EventHandlerResult  result = EventHandlerResult::newSingleResponse();
                new DNRInventTransFormHelper().jumpRefReferenceIdDelegate(_inventTransOrigin, _openMode, result);
                ret = result.result();
            
        }

        if(!ret)
        {
            ret = InventTransFormHelper::jumpRefReferenceId(_inventTransOrigin, _openMode);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>jumpRefReferenceIdDelegate</Name>
				<Source><![CDATA[
    delegate void jumpRefReferenceIdDelegate(InventTransOrigin _inventTransOrigin, OpenMode _openMode, EventHandlerResult _result)
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>