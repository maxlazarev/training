<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRInterCompanySyncPurchTableTypeClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(InterCompanySyncPurchTableType))]
public final class DNRInterCompanySyncPurchTableTypeClass_Extension
{
    private RORRentalDateTimes salesTableOriginalDateTimes;

    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>prepareSynchronization</Name>
				<Source><![CDATA[
    protected void prepareSynchronization()
    {
        next prepareSynchronization();

        SalesTable salesTableOriginal = purchTable.interCompanySalesTableOriginal();

        salesTableOriginalDateTimes = salesTableOriginal.RORRentalDateTimesHost::rentalDateTimes();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initAxSalesTableFromPurchTable</Name>
				<Source><![CDATA[
    protected void initAxSalesTableFromPurchTable()
    {
        next initAxSalesTableFromPurchTable();
        axSalesTable.salesTable().RORInitFromCustTable(custTable, axSalesTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesTableSalesType</Name>
				<Source><![CDATA[
    protected void setSalesTableSalesType()
    {
        next setSalesTableSalesType();

        if (purchTable.PurchaseType != PurchaseType::Purch && purchTable.PurchaseType != PurchaseType::ReturnItem)
        {
            if (purchTable.PurchaseType == PurchaseType::RORSubRental && purchTable.InterCompanyOrder)
            {
                axSalesTable.parmSalesType(SalesType::RORRental);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>synchronizeInTradeCompany</Name>
				<Source><![CDATA[
    protected void synchronizeInTradeCompany()
    {
        next synchronizeInTradeCompany();

        if (purchTable.InterCompanyDirectDelivery
        &&  purchTable.PurchaseType == PurchaseType::RORSubRental
        &&  purchTable.InterCompanyOrder)
        {
            // copy rental dates from salesTableOriginal
            new RORRentalDateSynchroniser().copyRentalDateTimes(salesTableOriginalDateTimes, axSalesTable.salesTable().RORRentalDateTimesHost::rentalDateTimes(), axSalesTable.salesTable());
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>