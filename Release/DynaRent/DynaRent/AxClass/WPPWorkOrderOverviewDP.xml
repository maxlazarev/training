<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WPPWorkOrderOverviewDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
[
    SRSReportQueryAttribute(queryStr(WPPWorkOrderOverview)),
    SRSReportParameterAttribute(classStr(WPPWorkOrderHeaderContract))
]
public class WPPWorkOrderOverviewDP extends SRSReportDataProviderPreProcessTempDb
{
    WPPWorkOrderId          workOrderId;
    WPPWorkOrderHeaderTmp   workOrderHeaderTmp;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getWorkOrderHeaderTmp</Name>
				<Source><![CDATA[
    [SRSReportDataSetAttribute('WPPWorkOrderHeaderTmp')]
    public WPPWorkOrderHeaderTmp getWorkOrderHeaderTmp()
    {
        select * from workOrderHeaderTmp;
        return workOrderHeaderTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillTmpWorkOrderTable</Name>
				<Source><![CDATA[
    private void fillTmpWorkOrderTable()
    {
        Query                   query;
        QueryRun                queryRun;
        QueryBuildDataSource    queryBuildDataSource;
        QueryBuildRange         queryBuildRange;
        WPPWorkOrderReports     workOrderReports;
        
        // Get the query from the runtime using a dynamic query.
        query = this.parmQuery();

        // Add parameters to the query.
        queryBuildDataSource = query.dataSourceTable(tablenum(WPPWorkOrderReports));

        if (workOrderId)
        {
            queryBuildRange = queryBuildDataSource.findRange(fieldnum(WPPWorkOrderReports, WorkOrderId));

            if (!queryBuildRange)
            {
                queryBuildRange = queryBuildDataSource.addRange(fieldnum(WPPWorkOrderReports, WorkOrderId));
            }
            
            // If a work order number has not been set, then use the parameter value to set it.
            if (!queryBuildRange.value())
            {
                queryBuildRange.value(workOrderId);
            }
        }
        
        queryRun = new QueryRun(query);
        
        while (queryRun.next())
        {
            workOrderReports = queryRun.get(tablenum(WPPWorkOrderReports));
        
            workOrderHeaderTmp.WorkOrderId              = workOrderReports.WorkOrderId;
            workOrderHeaderTmp.WorkOrderName            = workOrderReports.WorkOrderName;
            workOrderHeaderTmp.OrderStatus              = workOrderReports.orderStatus();
            workOrderHeaderTmp.StartDate                = workOrderReports.StartDate;
            workOrderHeaderTmp.EndDate                  = workOrderReports.EndDate;
            workOrderHeaderTmp.MaintenanceDateExpected  = workOrderReports.MaintenanceDateExpected;
            workOrderHeaderTmp.ActualPostingDate        = workOrderReports.ActualPostingDate;
            //workOrderHeaderTmp.AssetId                  = workOrderReports.AssetId;
            workOrderHeaderTmp.InventSerialId           = workOrderReports.InventSerialId;
            workOrderHeaderTmp.RentalTypeId             = workOrderReports.RentalTypeId;
            workOrderHeaderTmp.ItemId                   = InventTable::BOBFindFromRentalType(workOrderReports.RentalTypeId).ItemId;
            workOrderHeaderTmp.FirstOnRentDate          = workOrderReports.FirstOnRentDate;
            workOrderHeaderTmp.CustVendName             = workOrderReports.CustVendName;
            workOrderHeaderTmp.OrderNote                = workOrderReports.OrderNote;
            workOrderHeaderTmp.InternalNote             = workOrderReports.InternalNote;
            workOrderHeaderTmp.InvoiceNote              = workOrderReports.InvoiceNote;
            workOrderHeaderTmp.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    public void processReport()
    {
        WPPWorkOrderHeaderContract dataContract;

        // Get the parameters passed from runtime.
        dataContract = this.parmDataContract();
        workOrderId = dataContract.parmWorkOrderId();

        this.fillTmpWorkOrderTable();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>