<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRPurchLineSalesPurchLineClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(PurchLineSalesPurchLine))]
public final class DNRPurchLineSalesPurchLineClass_Extension
{ 
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mustSetPriceDisc</Name>
				<Source><![CDATA[
    protected boolean mustSetPriceDisc(InventDim _inventDim, boolean _initDateFields, PriceDiscPriceAgreementParameters _parameters)
    {
        boolean ret = next mustSetPriceDisc(_inventDim, _initDateFields, _parameters);

        // Fetch prices from contract only during creation, or when some crucial fields like CustAccount changes
        // (but in that case the code will be triggered from a different place).
        if (this.parmPurchLine().RORTradeType != RORTradeType::SalesPurch)
        {
            boolean isNewRecord = (!this.parmPurchLine().RecId);
                        
            if ((isNewRecord || _parameters.DNRparmForceRentalAgreement()) && RAGUtil::mustApplyRentalAgreements(this.parmPurchLine().BOBRentalTypeId))
            {
                this.parmPurchLine().RORRentalLine::RAGSetContractInfo();
            }
            else if (isNewRecord && this.parmPurchLine().RORLineType == RORLineType::Insurance)
            {
                this.parmPurchLine().RORRentalLine::RAGSetContractInfoFromParent();
            }

            // Prevents setting std. price for subrental line both for newly created and exisiting record.
            ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPriceAgreement</Name>
				<Source><![CDATA[
    public void setPriceAgreement(InventDim					        _inventDim,
                                  boolean						    _doCallPriceDate,
                                  PriceDiscPolicyCheckPolicy        _checkPolicy,
                                  boolean						    _initDateFields,
                                  PriceDiscPriceAgreementParameters _parameters)
    {
        next setPriceAgreement(_inventDim, _doCallPriceDate, _checkPolicy, _initDateFields, _parameters);

        if (this.parmPurchLine().RORTradeType == RORTradeType::SalesPurch)
        {
            this.parmPurchLine().RORRentalGrossAmount = (this.parmPurchLine().PurchPrice * this.parmPurchLine().PurchQty);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignLineAmount</Name>
				<Source><![CDATA[
    protected void assignLineAmount(LineAmount _lineAmount)
    {
        LineAmount lineAmountLocal = this.parmPurchLine().LineAmount;

        next assignLineAmount(_lineAmount);

        if (this.parmPurchLine().RORTradeType != RORTradeType::SalesPurch && !this.parmPurchLine().RecId)
        {
            this.parmPurchLine().LineAmount = lineAmountLocal;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>