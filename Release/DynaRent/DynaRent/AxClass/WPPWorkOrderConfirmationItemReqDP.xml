<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WPPWorkOrderConfirmationItemReqDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
[
    SRSReportQueryAttribute(querystr(WPPWorkOrderOverviewItemRequirements)),
    SRSReportParameterAttribute(classstr(WPPWorkOrderReportsContract))
]
public class WPPWorkOrderConfirmationItemReqDP extends SRSReportDataProviderBase
{
    WPPWorkOrderTable       workOrderTable;
    WPPWorkOrderOverviewTmp workOrderOverviewTmp;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getWorkOrderItems</Name>
				<Source><![CDATA[
    private void getWorkOrderItems()
    {
        Query                   query;
        QueryRun                queryRun;
        QueryBuildDataSource    qbds;
        WPPWorkOrderLine        workOrderLine;
        SalesLine               salesLine;
    
        query = this.parmQuery();
        qbds = query.dataSourceTable(tableNum(WPPWorkOrderLine));
        qbds.addDynalink(fieldNum(WPPWorkOrderLine, WorkOrderId), workOrderTable, fieldNum(WPPWorkOrderTable, WorkOrderId));
    
        queryRun = new QueryRun(query);
    
        while (queryRun.next())
        {
            workOrderLine = queryRun.get(tablenum(WPPWorkOrderLine));
            salesLine     = queryRun.get(tableNum(SalesLine));
    
            workOrderOverviewTmp.WorkOrderId        = workOrderLine.WorkOrderId;
            workOrderOverviewTmp.WorkOrderLine      = workOrderLine.LineNumber;
            workOrderOverviewTmp.TaskId             = workOrderLine.TaskId;
            workOrderOverviewTmp.ItemId             = salesLine.ItemId;
            workOrderOverviewTmp.Description        = salesLine.itemName();
            workOrderOverviewTmp.TransDate          = salesLine.ShippingDateConfirmed;
            workOrderOverviewTmp.Qty                = salesLine.SalesQty;
            workOrderOverviewTmp.CostPrice          = salesLine.CostPrice;
            workOrderOverviewTmp.CostAmount         = salesLine.CostPrice * salesLine.SalesQty;
            workOrderOverviewTmp.SalesPrice         = salesLine.SalesPrice;
            workOrderOverviewTmp.SalesAmount        = salesLine.SalesPrice * salesLine.SalesQty;
            workOrderOverviewTmp.LinePropertyId     = salesLine.ProjLinePropertyId;
            workOrderOverviewTmp.Posted             = salesLine.SalesStatus == SalesStatus::Invoiced;
            workOrderOverviewTmp.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWorkOrderItemsTmp</Name>
				<Source><![CDATA[
    [
        SRSReportDataSetAttribute(tablestr(WPPWorkOrderOverviewTmp))
    ]
    public WPPWorkOrderOverviewTmp getWorkOrderItemsTmp()
    {
        select workOrderOverviewTmp;
        return workOrderOverviewTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    public void processReport()
    {
        WPPWorkOrderReportsContract contract;
    
        contract = this.parmDataContract() as WPPWorkOrderReportsContract;
        workOrderTable = WPPWorkOrderTable::find(contract.parmWorkOrderId());
    
        this.getWorkOrderItems();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>