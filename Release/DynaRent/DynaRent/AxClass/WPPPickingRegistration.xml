<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WPPPickingRegistration</Name>
	<SourceCode>
		<Declaration><![CDATA[
class WPPPickingRegistration
{
    SalesTable  salesTable;
    boolean     registrationIsUpdated;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isOrderFullyRegistered</Name>
				<Source><![CDATA[
    public boolean isOrderFullyRegistered()
    {
        boolean         ret;
        WMSPickingRoute wmsPickingRoute;
        WMSOrderTrans   wmsOrderTrans;
        SalesLine       salesLine;
    
        if (salesTable)
        {
            select firstOnly RecId from wmsPickingRoute
            where wmsPickingRoute.transType        == InventTransType::Sales
            &&    wmsPickingRoute.transRefId       == salesTable.SalesId
            &&    (wmsPickingRoute.expeditionStatus == WMSExpeditionStatus::None 
            ||     wmsPickingRoute.expeditionStatus == WMSExpeditionStatus::Registered
            ||     wmsPickingRoute.expeditionStatus == WMSExpeditionStatus::DEL_Reserved
            ||     wmsPickingRoute.expeditionStatus == WMSExpeditionStatus::Activated
            ||     wmsPickingRoute.expeditionStatus == WMSExpeditionStatus::Started
            ||     wmsPickingRoute.expeditionStatus == WMSExpeditionStatus::Picked
            ||     wmsPickingRoute.expeditionStatus == WMSExpeditionStatus::Staged
            ||     wmsPickingRoute.expeditionStatus == WMSExpeditionStatus::Loaded);
    
            ret = !wmsPickingRoute.RecId;
    
            if (ret && registrationIsUpdated)
            {
                select firstOnly RecId from wmsOrderTrans
                where wmsOrderTrans.inventTransType == InventTransType::Sales
                &&    wmsOrderTrans.inventTransRefId == salesTable.SalesId
                    exists join salesLine
                    where salesLine.SalesId == wmsOrderTrans.inventTransRefId
                    &&    salesLine.InventTransId == wmsOrderTrans.inventTransId
                    &&    salesLine.SalesQty != wmsOrderTrans.qty;
    
                ret = !wmsOrderTrans.RecId;
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRegistrationIsUpdated</Name>
				<Source><![CDATA[
    public boolean parmRegistrationIsUpdated(boolean _registrationIsUpdated = registrationIsUpdated)
    {
        registrationIsUpdated = _registrationIsUpdated;
    
        return registrationIsUpdated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesTable</Name>
				<Source><![CDATA[
    public SalesTable parmSalesTable(SalesTable _salesTable = salesTable)
    {
        salesTable = _salesTable;
    
        return salesTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        Args    args;
        FormRun formRun;
    
        args = new Args();
        args.name(formStr(WMSPickingRegistration));
        args.record(salesTable);
        args.caller(this);
    
        formRun = ClassFactory::formRunClassOnClient(args);
        formRun.init();
        formRun.run();
        formRun.wait();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static client WPPPickingRegistration construct()
    {
        return new WPPPickingRegistration();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>