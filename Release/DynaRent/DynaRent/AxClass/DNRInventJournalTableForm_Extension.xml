<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRInventJournalTableForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(InventJournalTable))]
public final class DNRInventJournalTableForm_Extension
{
    private WPPWorkOrderLine        workOrderLine;
    private LogisticsLocationRecId  postalAddressLocation;
    private boolean                 isBOBCountingJournal;

    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    [SuppressBPWarningAttribute("BPCheckInvalidInitFormMethodWarning", "Validation of caller must be performed before invoking super().")]
    void init()
    {
        if (this.args().menuItemName() == menuItemDisplayStr(BOBInventJournalTableRentalItemCount))
        {
            isBOBCountingJournal = true;
        }

        next init();

        FINDimValueController::setEditableDimensionSet(tableNum(InventJournalTable), this.design().controlName(formControlStr(InventJournalTable, DimensionEntryControl)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>onInitializing</Name>
				<Source><![CDATA[
    // extension methods

    public void onInitializing()
    {
        if (this.args())
        {
            switch (this.args().dataset())
            {
                case tableNum(WPPWorkOrderLine):
                    workOrderLine = this.args().record() as WPPWorkOrderLine;
                    break;

                case tableNum(WPPWorkOrderLineListPageView):
                    workOrderLine = WPPWorkOrderLineListPageView::getWorkOrderLine(this.args().record());
                    break;
            }
    
            if(this.args().parmEnumType() == enumNum(InventJournalType))
            {
                switch(this.args().parmEnum())
                {
                    case InventJournalType::Asset:
                        journalFormTable = new InventJournalFormTable_BOBAsset(this);
                        break;

                    case InventJournalType::Count:
                        journalFormTable = new InventJournalFormTable_BOBCount(this);
                        break;
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>onInitialized</Name>
				<Source><![CDATA[
    public void onInitialized()
    {
        JournalFormTable.WPPparmCtrlProjId(WPPDefaultValues_WPPProjId);
    
        if (this.args().caller()
        &&  SysDictClass::isEqualOrSuperclass(classIdGet(this.args().caller()), classNum(WPPJournalGenerator)))
        {
            journalFormTable.WPPparmProjId(this.args().lookupValue());
        }
        else if (workOrderLine)
        {
            journalFormTable.WPPparmProjId(workOrderLine.ProjId);
            InventJournalTable_ds.insertIfEmpty(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNRparmWorkOrderLine</Name>
				<Source><![CDATA[
    public WPPWorkOrderLine DNRparmWorkOrderLine(WPPWorkOrderLine _workOrderLine = workOrderLine)
    {
        workOrderLine = _workOrderLine;
        return workOrderLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>BOBparmIsCountingJournal</Name>
				<Source><![CDATA[
    public boolean BOBparmIsCountingJournal(boolean _isBOBCountingJournal = isBOBCountingJournal)
    {
        isBOBCountingJournal = _isBOBCountingJournal;
        return isBOBCountingJournal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_element_OnInitializing</Name>
				<Source><![CDATA[
    // event handler methods

    [FormEventHandler(formStr(InventJournalTable), FormEventType::Initializing)]
    public static void DNREvent_element_OnInitializing(xFormRun _sender, FormEventArgs _eventArgs)
    {
        Object hostObj = _sender as Object;
        hostObj.onInitializing();
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_element_OnInitialized</Name>
				<Source><![CDATA[
    [FormEventHandler(formStr(InventJournalTable), FormEventType::Initialized)]
    public static void DNREvent_element_OnInitialized(xFormRun _sender, FormEventArgs _eventArgs)
    {
        Object hostObj = _sender as Object;
        hostObj.onInitialized();
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_InventJournalTableDS_OnCreated</Name>
				<Source><![CDATA[
    [FormDataSourceEventHandler(formDataSourceStr(InventJournalTable, InventJournalTable), FormDataSourceEventType::Created)]
    public static void DNREvent_InventJournalTableDS_OnCreated(FormDataSource _sender, FormDataSourceEventArgs _eventArgs)
    {
        Object              hostObj             = _sender.formRun() as Object;
        InventJournalTable  inventJournalTable  = _sender.cursor() as InventJournalTable;
        WPPWorkOrderLine    workOrderLine       = hostObj.DNRparmWorkOrderLine();

        if (workOrderLine)
        {
            inventJournalTable.WPPinitFromWorkOrderLine(workOrderLine);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>