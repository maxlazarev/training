<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RAGContractTableOverview</Name>
	<SourceCode>
		<Declaration><![CDATA[
class RAGContractTableOverview
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        RAGContractTable        contractTable;
        RAGContractView         contractView;
        SrsReportRunController  controller;
        SrsReportDataContract   contract;
        Query                   query;
        QueryBuildDataSource    qbds;
        QueryBuildRange         qbr;
        Map                     queries;
    
        if (_args)
        {
            switch (_args.dataset())
            {
                case tableNum(RAGContractView):
                    contractView  = _args.record();
                    contractTable = RAGContractTable::find(contractView.ContractId);
                    break;
    
                case tableNum(RAGContractTable):
                    contractTable = _args.record();
                    break;
            }
        }
    
        if (!contractTable)
        {
            throw error(strFmt("@SYS134996", tableStr(RAGContractTable)));
        }
    
        query = new Query(queryStr(RAGContractTableReport));
        qbds = query.dataSourceTable(tableNum(RAGContractTable));
        qbr = SysQuery::findOrCreateRange(qbds, fieldNum(RAGContractTable, ContractId));
        qbr.value(SysQuery::value(contractTable.ContractId));
    
        queries = new Map(Types::String, Types::Class);
        queries.insert('ContractTable_DynamicParameter', query);
    
        controller = new SrsReportRunController();
        controller.parmArgs(_args);
        controller.parmReportName(ssrsReportStr(RAGContractTable, Agreement));
        controller.parmShowDialog(false);
        controller.parmDialogCaption("@DNR6447");

        contract = controller.parmReportContract();
        contract.parmReportCaption("@DNR6447");
        contract.parmQueryContracts(queries);
        contract.parmPrintSettings(new SRSPrintDestinationSettings());
    
        controller.runReport();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>