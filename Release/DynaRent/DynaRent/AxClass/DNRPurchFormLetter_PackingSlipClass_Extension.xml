<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRPurchFormLetter_PackingSlipClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(PurchFormLetter_PackingSlip))]
public final class DNRPurchFormLetter_PackingSlipClass_Extension
{
    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    boolean validate(Object _calledFrom)
    {
        boolean ret = next validate(_calledFrom);

        PurchParmLine purchParmLine;
        PurchParmUpdate purchParmUpdate = this.purchParmUpdate();

        while select purchParmLine
        where purchParmLine.ParmId == purchParmUpdate.ParmId
        {
            ret = (ret && purchParmLine.BOBValidatePartialDelivery());
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>missingNumber</Name>
				<Source><![CDATA[
    str missingNumber()
    {
        str ret = next missingNumber();

        PurchParmLine purchParmLine;
        PurchParmUpdate purchParmUpdate = this.purchParmUpdate();
        PurchTable purchTable;

        select firstonly PurchaseType from purchTable
            exists join purchParmLine
            where purchParmLine.ParmId == purchParmUpdate.ParmId
            &&    purchParmLine.OrigPurchId == purchTable.PurchId;

        if(purchTable.PurchaseType == PurchaseType::RORSubRental)
        {
            ret = "@DNR:ProductReceiptNotSpecifiedSubRental";
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORParmForceReturnTransport</Name>
				<Source><![CDATA[
    // extension methods

    public boolean RORParmForceReturnTransport(boolean _force)// = contract.RORParmForceReturnTransport())
    {
        return false;//contract.RORParmForceReturnTransport(_force);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>