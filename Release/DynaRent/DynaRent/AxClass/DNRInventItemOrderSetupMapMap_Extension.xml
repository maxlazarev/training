<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRInventItemOrderSetupMapMap_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(mapStr(InventItemOrderSetupMap))]
public final class DNRInventItemOrderSetupMapMap_Extension
{
    // Chain-of-Command wrapper methods

    // NOTE: For the tables 'RORInventItemRentalSetup' and 'RORInventItemSubRental', the following fields are always 0 (i.e., 0 or NoYes::No):
    // - CalendarDays
    // - HighestQty
    // - LeadTime
    // - LowestQty
    // - MultipleQty
    // - Stopped
    // - StandardQty

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>inventSiteId</Name>
				<Source><![CDATA[
    InventSiteId inventSiteId(InventSiteId _inventSiteId, InventTable _inventTable)
    {
        InventSiteId ret = next inventSiteId(_inventSiteId, _inventTable);

        if (this.RecId
        && !this.inventDim().InventSiteId
        && (this.TableId == tableNum(RORInventItemRentalSetup) || this.TableId == tableNum(RORInventItemSubRentalSetup)))
        {
            ret = _inventSiteId;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>standardQty</Name>
				<Source><![CDATA[
    // In DynaRent, we don't use standardQty functionality, so always return 0.
    QtyStandard standardQty()
    {
        QtyStandard ret = next standardQty();

        if (this.TableId == tableNum(RORInventItemRentalSetup) || this.TableId == tableNum(RORInventItemSubRentalSetup))
        {
            ret = 0;
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>