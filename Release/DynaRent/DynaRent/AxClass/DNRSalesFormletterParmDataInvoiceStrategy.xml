<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRSalesFormletterParmDataInvoiceStrategy</Name>
	<SourceCode>
		<Declaration><![CDATA[
[DNRExtensionStrategyFactoryAttribute(classStr(SalesFormletterParmDataInvoice))]
class DNRSalesFormletterParmDataInvoiceStrategy extends DNRSalesFormletterParmDataStrategy
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>INVUpdateProFormaRentalPeriods</Name>
				<Source><![CDATA[
    public void INVUpdateProFormaRentalPeriods(/*INVInvoiceTransData _invoiceTransData, */SalesParmLine _salesParmLine)
    {
        /*
        INVInvoicePeriodManager             invoicePeriodManager;
    
        List                                recordSpec;
        SalesLine                           salesLineLocal;
        INVInvoicePeriod                    invoicePeriod;
        INVPriceTierMultiplierCalcMethod    priceTierMultiplierCalcMethod;
    
        salesLineLocal = SalesLine::findInventTransId(_salesParmLine.InventTransId);
        priceTierMultiplierCalcMethod = INVInvoiceProfile::find(salesLineLocal.INVInvoiceProfileId).PriceTierMultiplierCalcMethod;
    
        //Remove records from previous selection
        delete_from invoicePeriod
        where invoicePeriod.RefTableId == _salesParmLine.TableId
        && invoicePeriod.RefRecId == _salesParmLine.RecId;
    
        INVInvoicePeriodManager::duplicatePeriods(
            salesLineLocal,
            _salesParmLine,
            '',
            _salesParmLine.ParmId);
    
        if (_invoiceTransData)
        {
            recordSpec           = _invoiceTransData.getRecordSpec();
            invoicePeriodManager = _salesParmLine.INVInvoicePeriodHost::newMarkInvoicedFromRecordSpec(recordSpec.pack(), '', _salesParmLine.ParmId);
            invoicePeriodManager.run();
        }
    
        //leave only records that should be displayed
        delete_from invoicePeriod
        where invoicePeriod.RefTableId == _salesParmLine.TableId
        && invoicePeriod.RefRecId == _salesParmLine.RecId
        && invoicePeriod.ParmProposalId == _salesParmLine.ParmId
        && ((!invoicePeriod.InvoiceId &&
             invoicePeriod.PeriodStatus != INVPeriodStatus::FullyInvoiced &&
             invoicePeriod.PeriodStatus != INVPeriodStatus::PartiallyInvoiced&&
             invoicePeriod.PeriodStatus != INVPeriodStatus::Credited &&
             invoicePeriod.PeriodStatus != INVPeriodStatus::Cancelled) ||
            (invoicePeriod.InvoiceId));
        */
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>