<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LogisticsLocationSelectForm_WPPWorkOrder</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LogisticsLocationSelectForm_WPPWorkOrder extends LogisticsLocationSelectForm
{
    WPPWorkOrderTable workOrderTable;
    LogisticsLocationSelectSourceType defaultSource;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allowedSources</Name>
				<Source><![CDATA[
    public Set allowedSources()
    {
        Set allowedItems = super();

        // allow all sources
        allowedItems.add(LogisticsLocationSelectSourceType::BusinessRelation);
        allowedItems.add(LogisticsLocationSelectSourceType::RequestForQuote);
        allowedItems.add(LogisticsLocationSelectSourceType::RequestForQuoteLine);
        allowedItems.add(LogisticsLocationSelectSourceType::PurchReqLine);
        allowedItems.add(LogisticsLocationSelectSourceType::ServiceOrder);
        allowedItems.add(LogisticsLocationSelectSourceType::Project);
        allowedItems.add(LogisticsLocationSelectSourceType::PurchReqLineRequsterHCMWorker);
        allowedItems.add(LogisticsLocationSelectSourceType::SalesQuotation);
        allowedItems.add(LogisticsLocationSelectSourceType::SalesQuotationLine);
        allowedItems.add(LogisticsLocationSelectSourceType::SalesOrder);
        allowedItems.add(LogisticsLocationSelectSourceType::SalesLine);
        allowedItems.add(LogisticsLocationSelectSourceType::PurchaseOrder);
        allowedItems.add(LogisticsLocationSelectSourceType::PurchaseOrderLine);
        allowedItems.add(LogisticsLocationSelectSourceType::RORVenue);
    
        return allowedItems;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyAddressToCaller</Name>
				<Source><![CDATA[
    public void copyAddressToCaller(Common _transferFromTable, LogisticsPostalAddressRecId _addressRecId)
    {
        workOrderTable.LogisticsLocationRecId = _addressRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// The initial selected source for addresses on the form.
    /// </summary>
    /// <returns>
    /// LogisticslocationSelectSourceType corresponding to the address source.
    /// </returns>
    public LogisticsLocationSelectSourceType defaultSource()
    {
        LogisticsLocationSelectSourceType   logisticsLocationSelectSourceType = LogisticsLocationSelectSourceType::Company;
    
        switch (workOrderTable.OrderTableId)
        {
            case tableNum(SalesLine):
                logisticsLocationSelectSourceType = LogisticsLocationSelectSourceType::SalesLine;
                break;
    
            case tableNum(PurchLine):
                logisticsLocationSelectSourceType = LogisticsLocationSelectSourceType::PurchaseOrderLine;
                break;
    
            default:
                switch (workOrderTable.CustVendAccountType)
                {
                    case CustVendACType::Cust:
                        logisticsLocationSelectSourceType = LogisticsLocationSelectSourceType::Customer;
                        break;
    
                    case CustVendACType::Vend:
                        logisticsLocationSelectSourceType = LogisticsLocationSelectSourceType::Vendor;
                        break;
                }
                break;
        }
    
        return logisticsLocationSelectSourceType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLogisticsPostalAddressRecId</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Gets the record ID of the <c>LogisticsPostalAddress</c> that is currently selected.
    /// </summary>
    /// <returns>
    ///   The <c>LogisticsPostalAddress</c> record ID.
    /// </returns>
    public RecId getLogisticsPostalAddressRecId()
    {
        return workOrderTable.LogisticsLocationRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLookupRecord</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Gets the record the target form's grid should have selected upon openning.
    /// </summary>
    /// <returns>
    ///   The record to be selected.
    /// </returns>
    public Common getLookupRecord()
    {
        LogisticsPostalAddress  address;
        WPPWorkOrderTable       workOrderTableLookup;
    
        select firstOnly address
            exists join workOrderTableLookup
            where workOrderTableLookup.WorkOrderId == workOrderTable.WorkOrderId
            &&    workOrderTableLookup.LogisticsLocationRecId == address.RecId;
    
        return address;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new(WPPWorkOrderTable _workOrderTable)
    {
        workOrderTable = _workOrderTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new <c>LogisticsLocationSelectForm_WPPWorkOrder</c> object.
    /// </summary>
    /// <param name="_buffer">
    ///    A record to use to initialize the <c>LogisticsLocationSelectForm_WPPWorkOrder</c> object.
    /// </param>
    /// <returns>
    ///    A new <c>LogisticsLocationSelectForm_WPPWorkOrder</c> object.
    /// </returns>
    public static LogisticsLocationSelectForm_WPPWorkOrder construct(Common _buffer)
    {
        return new LogisticsLocationSelectForm_WPPWorkOrder(_buffer);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>