<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRLedgerJournalTransApproveForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(LedgerJournalTransApprove))]
public final class DNRLedgerJournalTransApproveForm_Extension
{
    // chain-of-command wrapper methods
  
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        next init();

        FINDimValueController::setEditableDimensionSet(tableNum(LedgerJournalTrans), this.design().controlName(formControlStr(LedgerJournalTransApprove, DimensionEntryControl)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_LedgerJournalTransDS_OnActivated</Name>
				<Source><![CDATA[
    // event handler methods

    [FormDataSourceEventHandler(formDataSourceStr(LedgerJournalTransApprove, LedgerJournalTrans), FormDataSourceEventType::Activated)]
    public static void DNREvent_LedgerJournalTransDS_OnActivated(FormDataSource _sender, FormDataSourceEventArgs _eventArgs)
    {
        LedgerJournalTrans  ledgerJournalTrans                  = _sender.cursor() as LedgerJournalTrans;
        FormRun             formRun                             = _sender.formRun() as FormRun;
        FormRealControl     LedgerJournalTrans_AmountCurCredit  = formRun.design().controlName(formControlStr(LedgerJournalTransApprove, LedgerJournalTrans_AmountCurCredit)) as FormRealControl;
        FormRealControl     LedgerJournalTrans_AmountCurDebit   = formRun.design().controlName(formControlStr(LedgerJournalTransApprove, LedgerJournalTrans_AmountCurDebit)) as FormRealControl;

        if (ledgerJournalTrans.LBATermTransId)
        {
            boolean hasVariableInterest = (LBAContractTable::find(LBAContractTerm::find(ledgerJournalTrans.LBATermTransId).ContractNumInt).VariableInterest == NoYes::Yes);
            
            LedgerJournalTrans_AmountCurCredit.allowEdit(hasVariableInterest);
            LedgerJournalTrans_AmountCurDebit.allowEdit(hasVariableInterest);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_LedgerJournalTransDS_OnLeftRecord</Name>
				<Source><![CDATA[
    [FormDataSourceEventHandler(formDataSourceStr(LedgerJournalTransApprove, LedgerJournalTrans), FormDataSourceEventType::LeftRecord)]
    public static void DNREvent_LedgerJournalTransDS_OnLeftRecord(FormDataSource _sender, FormDataSourceEventArgs _eventArgs)
    {
        _sender.reread();
        _sender.refresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_LBAPaymentsGenerationCTRL_OnClicked</Name>
				<Source><![CDATA[
    [FormControlEventHandler(formControlStr(LedgerJournalTransApprove, LBAPaymentsGeneration), FormControlEventType::Clicked)]
    public static void DNREvent_LBAPaymentsGenerationCTRL_OnClicked(FormControl _sender, FormControlEventArgs _eventArgs)
    {
        VendTrans       vendTrans               = _sender.formRun().dataSource(formDataSourceStr(LedgerJournalTransApprove, VendTrans)).cursor() as VendTrans;
        FormDataSource  ledgerJournalTrans_ds   = _sender.formRun().dataSource(formDataSourceStr(LedgerJournalTransApprove, LedgerJournalTrans)) as FormDataSource;
        Args            args;
        MenuFunction    menuFunction;
        
        args = new Args();
        args.record(vendTrans);
        
        menuFunction = new MenuFunction(MenuItemActionStr(LBATermPaymentPeriodic_Approval), MenuItemType::Action);
        menuFunction.run(args);
        
        ledgerJournalTrans_ds.executeQuery();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>