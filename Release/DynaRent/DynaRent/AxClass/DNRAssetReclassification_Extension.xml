<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRAssetReclassification_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(Classstr(AssetReclassification))]
final class DNRAssetReclassification_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        next run();

        // After reclassification, the asset gets a new asset ID and new link between new asset ID and object ID is created
        BOBObjectTable  objectTable = BOBObjectTable::findByAssetId(oldAssetId);

        if(objectTable)
        {
            BOBObjectAssetLog   objectAssetLog;
            BOBObjectView       objectView;
            AssetTable          assetTable;

            //Selection of the record from objectAssetLog 
            if(objectTable.InventSerialId) // serialized BOs have a single financial owner
            {
                select firstonly ValidTo from objectAssetLog
                    where objectAssetLog.ObjectId == objectTable.ObjectId
                    &&    objectAssetLog.ValidFrom <= reclassificationDate
                    &&  (!objectAssetLog.ValidTo || objectAssetLog.ValidTo >= reclassificationDate)
                        exists join objectView
                        where objectView.ObjectId == objectAssetLog.ObjectId
                        &&    objectView.FinancialOwner == objectAssetLog.AssetCompanyId;
            }
            else // bulk BOs could be owned by several companies at the same time
            {
                select firstonly ValidTo from objectAssetLog
                    where objectAssetLog.ObjectId == objectTable.ObjectId
                        exists join assetTable
                        where assetTable.DataAreaId == objectAssetLog.AssetCompanyId
                        &&    assetTable.AssetId == objectAssetLog.AssetId
                        &&    assetTable.BOBIsBulkParent;
            }
            // Updating the old objectAssetLog validto date and creating a new log record
            BOBObjectAssetLog::deleteLink(objectTable.ObjectId, reclassificationDate-1);
            BOBObjectAssetLog::createLink(objectTable.ObjectId, newAssetId, curExt(), reclassificationDate, objectAssetLog.ValidTo);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>