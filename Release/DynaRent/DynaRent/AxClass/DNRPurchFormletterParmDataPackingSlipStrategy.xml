<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRPurchFormletterParmDataPackingSlipStrategy</Name>
	<SourceCode>
		<Declaration><![CDATA[
[DNRExtensionStrategyFactoryAttribute(classStr(PurchFormletterParmDataPackingSlip))]
class DNRPurchFormletterParmDataPackingSlipStrategy extends DNRPurchFormletterParmDataStrategy
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>BOBSetTransDateTime</Name>
				<Source><![CDATA[
    public void BOBSetTransDateTime(VendDocumentTableMap _parmTable, PurchTable _purchTable)
    {
        RORRentalDateTimes rentalDateTimes = _purchTable.RORRentalDateTimesHost::rentalDateTimes();
    
        if(rentalDateTimes)
        {
            TransDateTime onRentWithTimeZone = DateTimeUtil::applyTimeZoneOffset(rentalDateTimes.getOnRentDateTime(), DateTimeUtil::getUserPreferredTimeZone());
    
            switch(_parmTable.TableId)
            {
                case tableNum(PurchParmTable):
                    PurchParmTable purchParmTable = _parmTable as PurchParmTable;
                    purchParmTable.TransDate = DateTimeUtil::date(onRentWithTimeZone);
                    purchParmTable.BOBTransTime = DateTimeUtil::time(onRentWithTimeZone);
                    break;

                case tableNum(VendInvoiceInfoTable):
                    VendInvoiceInfoTable vendInvoiceInfoTable = _parmTable as VendInvoiceInfoTable;
                    vendInvoiceInfoTable.TransDate = DateTimeUtil::date(onRentWithTimeZone);
                    vendInvoiceInfoTable.BOBTransTime = DateTimeUtil::time(onRentWithTimeZone);
                    break;
            }
        }
        else
        {
           super(_parmTable, _purchTable);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>INVSetInvoiceDateTime</Name>
				<Source><![CDATA[
    public void INVSetInvoiceDateTime(VendDocumentLineMap _parmLine, PurchLine _purchLine = null)
    {
        if (_parmLine is PurchParmLine)
        {
            PurchParmLine purchParmLineLoc = _parmLine as PurchParmLine;
            ///purchParmLineLoc.INVSetInvoiceDateTime(this.parmPurchFormletterParmData().INVParmFormLetterContract(), _purchLine, false, DateTimeUtil::minValue(), this.parmPurchFormletterParmData());
        }
        else
        {
            throw error(Error::wrongUseOfFunction(funcName())); // this should never happen
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>