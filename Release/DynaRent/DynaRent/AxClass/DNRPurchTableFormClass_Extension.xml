<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRPurchTableFormClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(PurchTableForm))]
public final class DNRPurchTableFormClass_Extension
{
    private InventLocationId    inventLocationId;
    private FromDateTime        selectionFromDateTime;
    private ToDateTime          selectionToDateTime;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setHeaderAccess</Name>
				<Source><![CDATA[
    // chain-of-command wrapper methods

    // Temporary solution - remove the below wrapper once a better solution to ticket #81353 has been found.
    public void setHeaderAccess()
    {
        next setHeaderAccess();

        if (purchTable.purchaseType == PurchaseType::RORSubRental)
        {
            FormDataSource purchTable_ds = FormDataUtil::getFormDataSource(purchTable);
            purchTable_ds.object(fieldNum(PurchTable, CurrencyCode)).allowEdit(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validatePurchaseTypeForAssetFields</Name>
				<Source><![CDATA[
    protected final static boolean validatePurchaseTypeForAssetFields(PurchTable _purchTable)
    {
        boolean ret = next validatePurchaseTypeForAssetFields(_purchTable);
        
        if(_purchTable && _purchTable.PurchaseType == PurchaseType::RORSubRental)
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canAssetFieldsBeEditedServer</Name>
				<Source><![CDATA[
    protected static boolean canAssetFieldsBeEditedServer(PurchTable _purchTable, PurchLine _purchLine)
    {
        boolean ret;

        ret = next canAssetFieldsBeEditedServer(_purchTable, _purchLine);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructFromArgs</Name>
				<Source><![CDATA[
    public static PurchTableForm constructFromArgs(Args _args)
    {
        PurchTableForm ret = next constructFromArgs(_args);

        if (_args.parmEnumType() != enumNum(PurchTableFormId) 
            && (_args.name() == menuitemDisplayStr(RORPurchTable)
            ||  _args.name() == menuitemDisplayStr(DNRRORPurchTable)))
        {
            PurchTableFormId    purchTableFormIdParam;
            Common              callerRecord = _args.record();

            if (callerRecord.TableId == tableNum(ProjTable))
            {
                purchTableFormIdParam = PurchTableFormId::WPPProjSubRentalOrder;
            }
            else
            {
                purchTableFormIdParam = PurchTableFormId::RORSubRentalOrder;
            }

            ret = PurchTableForm::construct(purchTableFormIdParam, callerRecord);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deliveryScheduleConversionAllowed</Name>
				<Source><![CDATA[
    public boolean deliveryScheduleConversionAllowed(PurchLine _purchLine)
    {
        boolean ret = next deliveryScheduleConversionAllowed(_purchLine);

        if (_purchLine.CreateFixedAsset && InventTable::find(_purchLine.ItemId).Product().BOBRentalTypeId)
        {
            ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORParmInventLocationId</Name>
				<Source><![CDATA[
    // extension methods

    public InventLocationId RORParmInventLocationId(InventLocationId _inventLocationId = inventLocationId)
    {
        inventLocationId = _inventLocationId;
    
        return inventLocationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORParmSelectionFromDateTime</Name>
				<Source><![CDATA[
    public FromDateTime RORParmSelectionFromDateTime(FromDateTime _selectionFromDateTime = selectionFromDateTIme)
    {
        selectionFromDateTime = _selectionFromDateTime;
    
        return selectionFromDateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORParmSelectionToDateTime</Name>
				<Source><![CDATA[
    public ToDateTime RORParmSelectionToDateTime(ToDateTime _selectionToDateTime = selectionToDateTime)
    {
        selectionToDateTime = _selectionToDateTime;
    
        return selectionToDateTime;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>