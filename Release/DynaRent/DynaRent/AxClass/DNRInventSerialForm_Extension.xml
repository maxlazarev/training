<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRInventSerialForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(InventSerial))]
public final class DNRInventSerialForm_Extension
{
    private InventSerialId inventSerialIdCaller;

    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void init()
    {
        next init();

        FINDimValueController::setEditableDimensionSet(tableNum(InventSerial), this.design().controlName(formControlStr(InventSerial, DimensionEntryControl)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCallerValid</Name>
				<Source><![CDATA[
    protected boolean isCallerValid(InventSerial _inventSerialTest)
    {
        boolean checkItemId = true;
        if(SysDictClass::isEqualOrSuperclass(classIdGet(this.args().caller()), classNum(FormRun)))
        {
            FormRun callerForm  = this.args().caller();
    
            if (callerForm.name() == formStr(RORSalesTable)
            ||  callerForm.name() == formStr(RORPurchTable)
            ||  callerForm.name() == formStr(RORSalesQuotationTable))
            {
                checkItemId = false;
                inventSerialIdCaller = this.args().lookupValue();
            }
        }

        boolean ret = next isCallerValid(_inventSerialTest);
        return ret && checkItemId;

    }

]]></Source>
			</Method>
			<Method>
				<Name>DNRparmInventSerialIdCaller</Name>
				<Source><![CDATA[
    // extension methods

    public InventSerialId DNRparmInventSerialIdCaller(InventSerialId _inventSerialIdCaller = inventSerialidCaller)
    {
        inventSerialIdCaller = _inventSerialidCaller;
        return inventSerialIdCaller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_InventSerialDS_OnQueryExecuting</Name>
				<Source><![CDATA[
    // event handler methods

    [FormDataSourceEventHandler(formDataSourceStr(InventSerial, InventSerial), FormDataSourceEventType::QueryExecuting)]
    public static void DNREvent_InventSerialDS_OnQueryExecuting(FormDataSource _sender, FormDataSourceEventArgs _eventArgs)
    {
        QueryBuildDataSource                queryBuildDataSource;
        QueryBuildRange                     queryBuildRange;
        Object                              formRun              = _sender.formRun() as Object;
        InventSerialId                      inventSerialIdCaller = formRun.DNRparmInventSerialIdCaller();

        if (inventSerialIdCaller)
        {
            queryBuildDataSource = _sender.query().dataSourceTable(tableNum(InventSerial));
            queryBuildDataSource.clearRange(fieldNum(InventSerial, ItemId));
            SysQuery::findOrCreateRange(queryBuildDataSource, fieldNum(InventSerial, InventSerialId)).value(inventSerialIdCaller);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>