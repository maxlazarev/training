<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRContactPersonTable_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(tableStr(ContactPerson))]
public final class DNRContactPersonTable_Extension
{
    // chain-of-command wrapper methods

    // extension methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>WPPLocator</Name>
				<Source><![CDATA[
    private LogisticsElectronicAddressLocator WPPLocator(LogisticsElectronicAddressMethodType _locatorType)
    {
        DirPartyLocation            dirPartyLocation;
        LogisticsLocation           logisticsLocation;
        LogisticsElectronicAddress  logisticsElectronicAddress;
    
        select firstOnly Locator from logisticsElectronicAddress
        order by dirPartyLocation.IsPrimary desc
        where logisticsElectronicAddress.Type == _locatorType
            exists join logisticsLocation
            where logisticsLocation.RecId == logisticsElectronicAddress.Location
                join TableId from dirPartyLocation
                where dirPartyLocation.Location == logisticsLocation.RecId
                &&    dirPartyLocation.Party == this.Party;
    
        return logisticsElectronicAddress.Locator;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORLookupContactPerson</Name>
				<Source><![CDATA[
    public static void RORLookupContactPerson(FormStringControl             _lookupCtrl,
                                              Common                        _caller,
                                              FormStringControl             _nameControl = null,
                                              ContactPersonId               _currentId = '',
                                              RORContactPersonRoleFilter    _roleFilter = RORContactPersonRoleFilter::All)
    {
        Args                    args;
        Object                  formRun;
        SalesTable              salesTable;
        SalesQuotationTable     salesQuotationTable;
        RAGContractSubscription subscription;
        ProjTable               projTable;
        FormStringControl       callingCtrl = (_nameControl ? _nameControl : _lookupCtrl);

        // create Args
        args = new Args();
        args.name(formstr(ContactPersonLookup));
        args.caller(callingCtrl);
        args.lookupValue(_currentId);
    
        if (_roleFilter != RORContactPersonRoleFilter::All)
        {
            args.parmEnumType(enumNum(RORContactPersonRoleFilter));
            args.parmEnum(_roleFilter);
        }
    
        // create FormRun
        formRun = classFactory.formRunClass(args);
        formRun.callingNameControl(_nameControl);
        formRun.callingIdControl(_lookupCtrl);
    
        // set context-specific parameters
        switch (_caller.TableId)
        {
            case tableNum(SalesTable):
                salesTable = _caller;
                formRun.party(salesTable.partyTable_CustAccount().RecId);
                break;
    
            case tableNum(SalesQuotationTable):
                salesQuotationTable = _caller;
                formRun.party(salesQuotationTable.party());
                break;
    
            case tableNum(RAGContractSubscription):
                subscription = _caller;

                formRun.RAGParmSubscriber(subscription.RelationAccount);
                formRun.RAGParmSubscriptionType(subscription.RelationType);
                break;
    
            case tableNum(ProjTable):
                projTable = _caller;
                formRun.party(projTable.party());
                break;
    
            default:
                throw error(strFmt("@SYS31187"), tableId2Name(_caller.TableId));
        }
    
        // perform actual lookup
        formRun.init();
        callingCtrl.performFormLookup(formRun);
    }

]]></Source>
			</Method>
			<Method>
				<Name>WPPDisplayEmail</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    display Email WPPDisplayEmail()
    {
        return this.WPPLocator(LogisticsElectronicAddressMethodType::Email);
    }

]]></Source>
			</Method>
			<Method>
				<Name>WPPDisplayPhone</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    display Phone WPPDisplayPhone()
    {
        return this.WPPLocator(LogisticsElectronicAddressMethodType::Phone);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>