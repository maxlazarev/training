<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LBATerminateContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
class LBATerminateContract extends RunBase
{
    LBAContractTable    contractTable;

    DialogField         dlgTransDate;
    TransDate           transDate;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    public ClassDescription caption()
    {
        return("@DNR5699");
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFinalTerm</Name>
				<Source><![CDATA[
    private void createFinalTerm(AmountMST _amount)
    {
        LBAContractTerm contractTerm;
    
        if (_amount != 0.0)
        {
            contractTerm.ContractNumInt = contractTable.ContractNumInt;
            contractTerm.TermType       = LBATermType::FinalTerm;
    
            contractTerm.initValue();
    
            contractTerm.TransDate      = LBAContractTerm::getFinalTermTransDate(contractTable.ContractNumInt);
    
            if (!contractTerm.TransDate)
            {
                contractTerm.TransDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
            }
    
            contractTerm.TermAmountMST= decRound(_amount, 2);
    
            contractTerm.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    Object dialog()
    {
        Dialog dialog = super();
        dialog.caption(this.caption());
    
        dlgTransDate = dialog.addField(identifierStr(TransDate));
        dlgTransDate.value(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
    
        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        boolean ret;
    
        ret = super();
    
        transDate = dlgTransDate.value();
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmContractTable</Name>
				<Source><![CDATA[
    public LBAContractTable parmContractTable(LBAContractTable _contractTable = contractTable)
    {
        if (!prmisDefault(_contractTable))
        {
            contractTable = _contractTable;
        }
    
        return contractTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    void run()
    {
        FormDataSource  dataSource = FormDataUtil::getFormDataSource(contractTable);
        LBAContractTerm contractTerm;
        AmountMST       amount = 0.0;
    
        if (contractTable.ContractStatus == LBAContractStatus::Running && contractTable.Stopped == NoYes::Yes)
        {
            ttsbegin;
    
            while select forupdate contractTerm
            where contractTerm.ContractNumInt == contractTable.ContractNumInt
            &&    contractTerm.TermType       != LBATermtype::Downpayment
            &&    contractTerm.Stopped        != NoYes::Yes
            {
                if (!contractTerm.hasUnpostedVoucher(fieldNum(LBAContractTerm, VoucherInterest))
                &&  !contractTerm.hasUnpostedVoucher(fieldNum(LBAContractTerm, VoucherPayment))
                &&  !contractTerm.hasUnpostedVoucher(fieldNum(LBAContractTerm, VoucherRedemption)))
                {
                    contractTerm.Stopped = NoYes::Yes;
                    amount += contractTerm.TermAmountMST;
                    contractTerm.update();
                }
            }
    
            this.createFinalTerm(amount);
    
            contractTable.ContractStatus = LBAContractStatus::Ended;
            contractTable.update();
    
            ttscommit;
    
            if (dataSource)
            {
                dataSource.reread();
                dataSource.refresh();
                dataSource.active();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        LBATerminateContract terminateContract;
    
        if (!_args || _args.dataset() != tableNum(LBAContractTable))
        {
            throw error(strFmt("@SYS134996", tableStr(LBAContractTable)));
        }
    
        terminateContract = new LBATerminateContract();
        terminateContract.parmContractTable(_args.record());
        terminateContract.runOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>