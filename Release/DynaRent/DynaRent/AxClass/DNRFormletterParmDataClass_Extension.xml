<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRFormletterParmDataClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(formletterParmData))]
public final class DNRFormletterParmDataClass_Extension
{
    private BOBRentalSubStatus  rentalSubStatus;
    private FormLetterContract  formLetterContract;
    private Map                 ragContractDataCache;
    private boolean             postFuelLine;
    private boolean             isEstimation;
          
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createParmLinesAndTable</Name>
				<Source><![CDATA[
    protected void createParmLinesAndTable()
    {
        PurchTable  purchTableRange;
        boolean     firstLine   = true;
        Query       newQuery    = chooseLines.query();

        if (formLetterContract
            &&  formLetterContract.parmCallerMenuItem() == menuitemActionStr(INVPurchFormLetter_ApproveJournal))
        {
            chooseLines = new SysQueryRun(new Query());
        }

        next createParmLinesAndTable();        
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillOutputContract</Name>
				<Source><![CDATA[
    protected void fillOutputContract()
    {
        next fillOutputContract();

        if (formLetterContract)
        {
            outputContract.INVParmFormLetterContractPackedPacked(formLetterContract.pack());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initChooseLinesFromLine</Name>
				<Source><![CDATA[
    protected void initChooseLinesFromLine()
    {
        next initChooseLinesFromLine();

        if (formLetterContract.WPPparmWorkOrderId())
        {
            this.parmAllowEmptyParmTable(true);
            //this.allowCreateParmTable(this.parmAllowEmptyParmTable());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>BOBParmRentalSubStatus</Name>
				<Source><![CDATA[
    // extension methods

    public BOBRentalSubStatus BOBParmRentalSubStatus(BOBRentalSubStatus _rentalSubStatus = rentalSubStatus)
    {
        rentalSubStatus = _rentalSubStatus;
        return rentalSubStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>INVParmFormLetterContract</Name>
				<Source><![CDATA[
    public FormLetterContract INVParmFormLetterContract(FormLetterContract _formLetterContract = formLetterContract)
    {
        if (!prmisDefault(_formLetterContract))
        {
            formLetterContract = _formLetterContract;
        }
    
        return formLetterContract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>INVqtySalesPurch</Name>
				<Source><![CDATA[
    private container INVqtySalesPurch(RORRentalLine _rentalLine, Qty _qty = 0)
    {
        return conNull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORparmPostFuelLine</Name>
				<Source><![CDATA[
    public boolean RORparmPostFuelLine(boolean _postFuelLine = postFuelLine)
    {
        postFuelLine = _postFuelLine;
        return postFuelLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>FINParmIsEstimation</Name>
				<Source><![CDATA[
    public boolean FINParmIsEstimation(boolean _isEstimation = isEstimation)
    {
        isEstimation = _isEstimation;
        return isEstimation;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>