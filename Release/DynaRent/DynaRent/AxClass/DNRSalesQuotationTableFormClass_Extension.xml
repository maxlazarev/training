<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRSalesQuotationTableFormClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(SalesQuotationTableForm))]
public final class DNRSalesQuotationTableFormClass_Extension
{
    private boolean         quotationLinesCreatedFromPSA;
    private RORVenueCode    venueCode;
    private FromDateTime    selectionFromDateTime;
    private ToDateTime      selectionToDateTime;
    private HierarchyIdBase hierarchyId;

    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createLinesFromHeaderForProject</Name>
				<Source><![CDATA[
    protected void createLinesFromHeaderForProject(SalesQuotationTable _salesQuotationTable)
    {
        using(DNRPSAGenerateCreateSalesQuotationLinesDisposableContext context = new DNRPSAGenerateCreateSalesQuotationLinesDisposableContext())
        {
            context.DNRMustParmQuotationLinesCreatedFromPSA(true);
            context.DNRParmSalesQuotationTableForm(this);
            next createLinesFromHeaderForProject(_salesQuotationTable);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static SalesQuotationTableForm construct(QuotationType _quotationType, Common _source)
    {
        SalesQuotationTableForm         ret     = next construct(_quotationType, _source);
        RORVenueCodeDisposableContext   context = RORVenueCodeDisposableContext::current();

        if (context && context.parmTableId() == _source.TableId && context.parmRecId() == _source.RecId)
        {
            ret.RORparmVenueCode(context.RORParmVenueCode());
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFromTemplate</Name>
				<Source><![CDATA[
    void createFromTemplate()
    {
        ttsbegin;

        next createFromTemplate();

        if (!quotationLinesCreatedFromPSA)
        {
            using(DNRSalesQuotationLineDisposableContext context = new DNRSalesQuotationLineDisposableContext())
            {
                context.DNRParmHierarchyId(hierarchyId);
                SalesQuotationTable salesQuotationTableTemplate = SalesQuotationTable::findTemplate(this.quotationType(), this.parmFromTemplateGroupId(), this.parmFromTemplateName(), true);
                SalesQuotationLine::createQuotationLineFromTemplate(salesQuotationTableTemplate, salesQuotationTable, this.parmQuotationPriceConversion());
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createDestinationHierarchy</Name>
				<Source><![CDATA[
    protected Hierarchy createDestinationHierarchy()
    {
        Hierarchy destHierarchy = next createDestinationHierarchy();

        hierarchyId = destHierarchy.HierarchyId;

        return destHierarchy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORParmSelectionFromDateTime</Name>
				<Source><![CDATA[
    // extension methods

    public FromDateTime RORParmSelectionFromDateTime(FromDateTime _selectionFromDateTime = selectionFromDateTIme)
    {
        selectionFromDateTime = _selectionFromDateTime;
        return selectionFromDateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORParmSelectionToDateTime</Name>
				<Source><![CDATA[
    public ToDateTime RORParmSelectionToDateTime(ToDateTime _selectionToDateTime = selectionToDateTime)
    {
        selectionToDateTime = _selectionToDateTime;
        return selectionToDateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORparmVenueCode</Name>
				<Source><![CDATA[
    public RORVenueCode RORparmVenueCode(RORVenueCode _venueCode = venueCode)
    {
        venueCode = _venueCode;
        return venueCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNRParmQuotationLinesCreatedFromPSA</Name>
				<Source><![CDATA[
    public boolean DNRParmQuotationLinesCreatedFromPSA(boolean _quotationLinesCreatedFromPSA = quotationLinesCreatedFromPSA)
    {
        quotationLinesCreatedFromPSA = _quotationLinesCreatedFromPSA;
        return quotationLinesCreatedFromPSA;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>