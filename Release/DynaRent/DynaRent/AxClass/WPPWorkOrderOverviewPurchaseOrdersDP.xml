<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WPPWorkOrderOverviewPurchaseOrdersDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
[
    SRSReportQueryAttribute(querystr(WPPWorkOrderOverviewPurchaseOrders)),
    SRSReportParameterAttribute(classstr(WPPWorkOrderReportsContract))
]
class WPPWorkOrderOverviewPurchaseOrdersDP extends SRSReportDataProviderBase
{
    WPPWorkOrderOverviewPurchaseOrderTmp    workOrderOverviewPurchaseOrderTmp;
    WPPWorkOrderTable                       workOrderTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getWorkOrderItems</Name>
				<Source><![CDATA[
    private void getWorkOrderItems()
    {
        Query                   query;
        QueryRun                queryRun;
        QueryBuildDataSource    qbds;
        WPPWorkOrderLine        workOrderLine;
        PurchLine               purchLine;
        PurchTable              purchTable;
        SalesLine               salesLine;
    
        query = this.parmQuery();
        qbds = query.dataSourceTable(tableNum(WPPWorkOrderLine));
        qbds.addDynalink(fieldNum(WPPWorkOrderLine, WorkOrderId), workOrderTable, fieldNum(WPPWorkOrderTable, WorkOrderId));
    
        queryRun = new QueryRun(query);
    
        while (queryRun.next())
        {
            workOrderLine = queryRun.get(tableNum(WPPWorkOrderLine));
            purchLine = queryRun.get(tablenum(PurchLine));
            purchTable = queryRun.get(tablenum(PurchTable));
    
            if (purchLine.InventRefTransId
            &&  purchLine.ItemRefType == InventRefType::Sales)
            {
                salesLine = SalesLine::findInventTransId(purchLine.InventRefTransId);
            }
    
            workOrderOverviewPurchaseOrderTmp.DeliveryDate        = purchLine.DeliveryDate;
            workOrderOverviewPurchaseOrderTmp.ExternalItemId      = purchLine.ExternalItemId;
            workOrderOverviewPurchaseOrderTmp.InterCompanyOrder   = purchTable.InterCompanyOrder;
            workOrderOverviewPurchaseOrderTmp.ItemId              = purchLine.ItemId;
            workOrderOverviewPurchaseOrderTmp.ProjCostPrice       = salesLine.CostPrice;
            workOrderOverviewPurchaseOrderTmp.ProjSalesPrice      = salesLine.SalesPrice;
            workOrderOverviewPurchaseOrderTmp.ProjLinePropertyId  = purchLine.ProjLinePropertyId;
            workOrderOverviewPurchaseOrderTmp.PurchId             = purchLine.PurchId;
            workOrderOverviewPurchaseOrderTmp.PurchName           = purchTable.PurchName;
            workOrderOverviewPurchaseOrderTmp.PurchQty            = purchLine.PurchQty;
            workOrderOverviewPurchaseOrderTmp.PurchStatus         = purchLine.PurchStatus;
            workOrderOverviewPurchaseOrderTmp.TaskId              = workOrderLine.TaskId;
            workOrderOverviewPurchaseOrderTmp.TotalProjCostPrice  = purchLine.LineAmount;
            workOrderOverviewPurchaseOrderTmp.TotalProjSalesPrice = workOrderOverviewPurchaseOrderTmp.PurchQty * workOrderOverviewPurchaseOrderTmp.ProjSalesPrice;
            workOrderOverviewPurchaseOrderTmp.WorkOrderId         = workOrderLine.WorkOrderId;
            workOrderOverviewPurchaseOrderTmp.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWorkOrderOverviewPurchaseOrderTmp</Name>
				<Source><![CDATA[
    [
        SRSReportDataSetAttribute(tablestr(WPPWorkOrderOverviewPurchaseOrderTmp))
    ]
    public WPPWorkOrderOverviewPurchaseOrderTmp getWorkOrderOverviewPurchaseOrderTmp()
    {
        select workOrderOverviewPurchaseOrderTmp;
        return workOrderOverviewPurchaseOrderTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    public void processReport()
    {
        WPPWorkOrderReportsContract contract;
    
        contract = this.parmDataContract() as WPPWorkOrderReportsContract;
        workOrderTable = WPPWorkOrderTable::find(contract.parmWorkOrderId());
    
        this.getWorkOrderItems();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>