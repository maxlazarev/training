<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WPPInvoiceStatusUpdate_PurchaseOrder</Name>
	<SourceCode>
		<Declaration><![CDATA[
class WPPInvoiceStatusUpdate_PurchaseOrder extends WPPInvoiceStatusUpdate
{
    Map     projItemTransMap;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new()
    {
        //projItemTransMap = _args.object();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjItemTransMap</Name>
				<Source><![CDATA[
    public Map parmProjItemTransMap(Map _projItemTransMap = projItemTransMap)
    {
        projItemTransMap = _projItemTransMap;
    
        return projItemTransMap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        MapEnumerator       enumerator = projItemTransMap.getEnumerator();
        ProjItemTrans       projItemTrans;
        ProjInvoiceTable    projInvoiceTable;
        ProjTable           projTable;
    
        while (enumerator.moveNext())
        {
            projItemTrans = enumerator.currentValue();
    
            select firstonly RecId, projInvoiceProjId, WPPInvoiceStatus from projInvoiceTable
                exists join projTable
                where projTable.ProjId            == projItemTrans.ProjId
                &&    projTable.ProjInvoiceProjId == projInvoiceTable.ProjInvoiceProjId;
    
            projInvoiceProjId = projInvoiceTable.ProjInvoiceProjId;
    
            if (projInvoiceTable.RecId
            &&  projInvoiceTable.WPPInvoiceStatus < WPPInvoiceStatus::PartlyCharged)
            {
                if (this.existChargeable_Hour()
                ||  this.existChargeable_Expense()
                ||  this.existChargeable_Item()
                ||  this.existChargeable_Fee()
                ||  this.existChargeable_OnAccount())
                {
                    this.setInvoiceStatus(WPPInvoiceStatus::Chargeable, projInvoiceTable.projInvoiceProjId);
                }
                else
                {
                    this.setInvoiceStatus(WPPInvoiceStatus::Internal, projInvoiceTable.projInvoiceProjId);
                }
            }
            else
            if (projInvoiceTable.RecId
            &&  projInvoiceTable.WPPInvoiceStatus == WPPInvoiceStatus::FullyCharged)
            {
                if (ProjLineProperty::Find(projItemTrans.LinePropertyId).ToBeInvoiced)
                {
                    this.setInvoiceStatus(WPPInvoiceStatus::PartlyCharged, projInvoiceTable.ProjInvoiceProjId);
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>