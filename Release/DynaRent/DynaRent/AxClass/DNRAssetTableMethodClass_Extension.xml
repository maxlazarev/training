<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRAssetTableMethodClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(AssetTableMethod))]
public final class DNRAssetTableMethodClass_Extension
{
    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static AssetTableMethod construct(AssetBook          _assetBook,
                                             AssetTransDate     _assetTransDate,
                                             AssetBudgetModelId _assetBudgetModelId,
                                             boolean            _dualDepreciation,
                                             boolean            _depreciationAltProfile,
                                             boolean            _depreciationExtProfile,
                                             boolean            _depreciationAccleratedProfile_JP)
    {
        AssetTableMethod assetTableMethod = next construct(_assetBook, _assetTransDate, _assetBudgetModelId, _dualDepreciation,
                                                           _depreciationAltProfile, _depreciationExtProfile, _depreciationAccleratedProfile_JP);

        AssetTable              assetTable          = AssetTable::find(_assetBook.AssetId);
        BOBDepreciateUntil      depreciateUntil     = assetTable.BOBDepreciateUntil;
        AssetDepreciationMethod depreciationMethod  = _assetBook.depreciationProfile().Method;

        if ((depreciationMethod == AssetDepreciationMethod::StraightLine || depreciationMethod == AssetDepreciationMethod::StraightLineLifeRemaining) && depreciateUntil)
        {
            DNRAssetProposalDepreciationDisposableContext context = DNRAssetProposalDepreciationDisposableContext::current();

            // The method AxClass\AssetTableMethod\Methods\construct can be called multiple times per fixed asset, depending on whether
            // there is an alternative depreciation profile and/or extraordinary depreciation profile. We are only interested
            // in the default depreciation profile.
            if (context && !_depreciationAltProfile && !_depreciationExtProfile)
            {
                context.addAssetTableMethodToMap(_assetBook.assetId, assetTableMethod);
            }
        }

        return assetTableMethod;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>