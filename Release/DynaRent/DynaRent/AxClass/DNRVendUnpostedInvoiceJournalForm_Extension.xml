<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRVendUnpostedInvoiceJournalForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(VendUnpostedInvoiceJournal))]
public final class DNRVendUnpostedInvoiceJournalForm_Extension
{
    private DialogButton button;

    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        next init();

        if(this.args().record())
        {
            PurchTable purchTable;
         
            switch(this.args().dataset())
            {
                case tableNum(PurchTable):
                    purchTable = this.args().record() as PurchTable;
                    break;

                case tableNum(VendPackingSlipTrans):
                    VendPackingSlipTrans vendPackingSlipTrans = this.args().record() as VendPackingSlipTrans;

                    select firstonly purchTable
                    where purchTable.PurchId == vendPackingSlipTrans.OrigPurchid;
                    break;

                case tableNum(VendInvoiceInfoTable):
                    VendInvoiceInfoTable vendInvoiceInfoTable = this.args().record() as VendInvoiceInfoTable;
                    purchTable = vendInvoiceInfoTable.purchTable();
                    break;
            }
                
            if(purchTable)
            {
                boolean isSubRental = (purchTable.PurchaseType == PurchaseType::RORSubRental);
            
                FormStringControl TmpPurchParmTable_PurchId = this.design().controlName(formControlStr(VendUnpostedInvoiceJournal, TmpPurchParmTable_PurchId)) as FormStringControl;
                FormStringControl TmpPurchParmLine_OrigPurchId = this.design().controlName(formControlStr(VendUnpostedInvoiceJournal, TmpPurchParmLine_OrigPurchId)) as FormStringControl;

                TmpPurchParmTable_PurchId.label(isSubRental ? "@DNR1715" : "@SYS123518");
                TmpPurchParmLine_OrigPurchId.label(isSubRental ? "@DNR1715" : "@SYS123518");
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>INVParmButton</Name>
				<Source><![CDATA[
    // extension methods

    public DialogButton INVParmButton()
    {
        return button;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNRparmUseInvoiceMatching</Name>
				<Source><![CDATA[
    public boolean DNRparmUseInvoiceMatching(boolean _useInvoiceMatching = useInvoiceMatching)
    {
        useInvoiceMatching = _useInvoiceMatching;
        return useInvoiceMatching;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_VendTmpInvoiceInfoTableDS_OnActivated</Name>
				<Source><![CDATA[
    // event handler methods

    [FormDataSourceEventHandler(formDataSourceStr(VendUnpostedInvoiceJournal, VendTmpInvoiceInfoTable), FormDataSourceEventType::Activated)]
    public static void DNREvent_VendTmpInvoiceInfoTableDS_OnActivated(FormDataSource _sender, FormDataSourceEventArgs _eventArgs)
    {
        FormRun                 formRun                 = _sender.formRun() as FormRun;
        Object                  hostObj                 = formRun as Object;
        VendTmpInvoiceInfoTable vendTmpInvoiceInfoTable = _sender.cursor() as VendTmpInvoiceInfoTable;

        if (hostObj.DNRparmUseInvoiceMatching())
        {
            PurchId purchId = vendTmpInvoiceInfoTable.PurchId;
        
            if (!purchId)
            {
                VendTmpInvoiceInfoLine vendTmpInvoiceInfoLine = formRun.dataSource(formDataSourceStr(VendUnpostedInvoiceJournal, VendTmpInvoiceInfoLine)).cursor() as VendTmpInvoiceInfoLine;

                select firstOnly vendTmpInvoiceInfoLine;
                purchId = vendTmpInvoiceInfoLine.OrigPurchId;
            }
        
            boolean canUseMatching = !purchId || PurchTable::find(purchId).PurchaseType != PurchaseType::RORSubRental;
            hostObj.enableMatchingDetailsButton(canUseMatching);
        }
        
        VendInvoiceInfoTable        vendInvoiceInfoTable        = formRun.dataSource(formDataSourceStr(VendUnpostedInvoiceJournal, VendInvoiceInfoTable)).cursor()      as VendInvoiceInfoTable;
        FormFunctionButtonControl   buttonEditInvoice           = formRun.design().controlName(formControlStr(VendUnpostedInvoiceJournal, buttonEditInvoice))           as FormFunctionButtonControl;
        FormButtonControl           DeletePendingInvoiceButton  = formRun.design().controlName(formControlStr(VendUnpostedInvoiceJournal, DeletePendingInvoiceButton))  as FormButtonControl;

        buttonEditInvoice.enabled(!vendInvoiceInfoTable.PoolRecId);
        DeletePendingInvoiceButton.enabled(!vendInvoiceInfoTable.PoolRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_DeletePendingInvoiceButtonCTRL_OnClicked</Name>
				<Source><![CDATA[
    [FormControlEventHandler(formControlStr(VendUnpostedInvoiceJournal, DeletePendingInvoiceButton), FormControlEventType::Clicked)]
    public static void DNREvent_DeletePendingInvoiceButtonCTRL_OnClicked(FormControl _sender, FormControlEventArgs _eventArgs)
    {
        FormRun formRun = _sender.formRun() as FormRun;

        FormDataSource          vendTmpInvoiceInfoTable_ds  = formRun.dataSource(formDataSourceStr(VendUnpostedInvoiceJournal, VendTmpInvoiceInfoTable))            as FormDataSource;
        VendTmpInvoiceInfoTable vendTmpInvoiceInfoTable     = vendTmpInvoiceInfoTable_ds.cursor()                                                                   as VendTmpInvoiceInfoTable;
        VendInvoiceInfoTable    vendInvoiceInfoTable        = formRun.dataSource(formDataSourceStr(VendUnpostedInvoiceJournal, VendInvoiceInfoTable)).cursor()      as VendInvoiceInfoTable;

        if (vendInvoiceInfoTable)
        {
            ttsBegin;
            vendInvoiceInfoTable.selectForUpdate(true);
            vendInvoiceInfoTable.delete();
        
            VendTmpInvoiceInfoTable.delete();
            ttsCommit;
        
            vendTmpInvoiceInfoTable_ds.research();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>