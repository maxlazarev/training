<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BOBInventSerialValidator</Name>
	<SourceCode>
		<Declaration><![CDATA[
class BOBInventSerialValidator
{
    InventSerial inventSerial;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    public boolean validate()
    {
        boolean         ret = true;
        BOBObjectTable  objectTable;
        EcoResProduct   ecoResProduct = EcoResProduct::BOBFindFromItemId(inventSerial.ItemId);

        //Check if it's a Rental Item
        if (ecoResProduct.BOBRentalTypeId)
        {
            //Check if a BO exists with the same serial Num but different Rental Type on the Product
            select firstonly RecId, ObjectId from objectTable 
            where objectTable.InventSerialId == inventSerial.InventSerialId
            &&    objectTable.RentalTypeId   != ecoResProduct.BOBRentalTypeId;

            if(objectTable.RecId)
            {
                ret = checkFailed(strFmt("@DNR10160", inventSerial.InventSerialId, objectTable.ObjectId));

            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventSerial</Name>
				<Source><![CDATA[
    public InventSerial parmInventSerial(InventSerial _inventSerial = inventSerial)
    {
        if(!prmIsDefault(_inventSerial))
        {
            inventSerial = _inventSerial;
        }
        return inventSerial;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static BOBInventSerialValidator construct(InventSerial _inventSerial)
    {
        BOBInventSerialValidator obj = new BOBInventSerialValidator();
        obj.parmInventSerial(_inventSerial);
        return obj;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>