<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRsmmActivityIdLookupForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(smmActivityIdLookup))]
public final class DNRsmmActivityIdLookupForm_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>DNREvent_SmmActivitiesDS_OnInitialized</Name>
				<Source><![CDATA[
    // event handler methods
    [FormDataSourceEventHandler(formDataSourceStr(smmActivityIdLookup, smmActivities), FormDataSourceEventType::Initialized)]
    public static void DNREvent_SmmActivitiesDS_OnInitialized(FormDataSource _sender, FormDataSourceEventArgs _eventArgs)
    {
        Args formRunArgs = _sender.formRun().args();

        if(formRunArgs.dataset() == tableNum(SalesQuotationLine))
        {
            SalesQuotationLine salesQuotationLine = formRunArgs.record();
            SalesQuotationTable salesQuotationTable;
            HierarchyLinkTable hierarchyLinkTable;

            select firstonly HierarchyId from hierarchyLinkTable
            where hierarchyLinkTable.RefTableId == tableNum(SalesQuotationTable)
                exists join salesQuotationTable
                where salesQuotationTable.QuotationId == salesQuotationLine.QuotationId
                &&    salesQuotationTable.RecId == hierarchyLinkTable.RefRecId;
            
            QueryBuildDataSource qbdsSmmActivities = _sender.queryBuildDataSource();
            qbdsSmmActivities.clearDynalinks();

            QueryBuildDataSource qbdsHierarchyTreeTable = qbdsSmmActivities.addDataSource(tableNum(HierarchyTreeTable));
            qbdsHierarchyTreeTable.relations(true);
            qbdsHierarchyTreeTable.addRange(fieldNum(HierarchyTreeTable, HierarchyId)).value(hierarchyLinkTable.HierarchyId);
            qbdsHierarchyTreeTable.addRange(fieldNum(HierarchyTreeTable, ParentElementNumber)).value(SysQuery::valueNotEmptyString());
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>