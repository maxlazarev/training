<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRLogisticsLocationSelectFormClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(LogisticsLocationSelectForm))]
public final class DNRLogisticsLocationSelectFormClass_Extension
{
    private Object transportRouteAddressForm;

    // Chain-of-Command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmCallingForm</Name>
				<Source><![CDATA[
    public FormRun parmCallingForm(FormRun _formRun)
    {
        FormRun ret = next parmCallingForm(_formRun);

        if (_formRun.name() == formstr(WPPTransportRouteAddress))
        {
            this.WPPParmTransportRouteAddressForm(_formRun);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceTypeToTableId</Name>
				<Source><![CDATA[
    public static TableId sourceTypeToTableId(
        LogisticsLocationSelectSourceType _sourceType)
    {
        TableId ret = next sourceTypeToTableId(_sourceType);

        if (_sourceType == LogisticsLocationSelectSourceType::RORVenue)
        {
            return tableNum(RORVenueTable);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>tableIdToSourceType</Name>
				<Source><![CDATA[
    public static LogisticsLocationSelectSourceType tableIdToSourceType(
        TableId                           _tableId,
        LogisticsLocationSelectSourceType _defaultSourceType
    )
    {
        LogisticsLocationSelectSourceType ret = next tableIdToSourceType(_tableId, _defaultSourceType);

        if (_tableId == tableNum(RORVenueTable))
        {
            return LogisticsLocationSelectSourceType::RORVenue;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>WPPParmTransportRouteAddressForm</Name>
				<Source><![CDATA[
    // extension methods

    Object WPPParmTransportRouteAddressForm(Object _transportRouteAddressForm = transportRouteAddressForm)
    {
        transportRouteAddressForm = _transportRouteAddressForm;
        return transportRouteAddressForm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_constructDelegate</Name>
				<Source><![CDATA[
    // event handler methods

    [SubscribesTo(classStr(LogisticsLocationSelectForm), staticDelegateStr(LogisticsLocationSelectForm, constructDelegate))]
    public static void DNREvent_constructDelegate(Common _buffer, LogisticsLocationRoleType _roleType, EventHandlerResult _eventHandlerResult)
    {
        switch (_buffer.TableId)
        {
            case tableNum(WPPWorkOrderTable):
                _eventHandlerResult.result(LogisticsLocationSelectForm_WPPWorkOrder::construct(_buffer));
                break;
    
            case tableNum(WPPParameters):
                _eventHandlerResult.result(LogisticsLocationSelectForm_WPPParameter::construct(_buffer));
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>