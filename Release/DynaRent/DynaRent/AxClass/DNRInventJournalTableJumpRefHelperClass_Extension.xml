<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRInventJournalTableJumpRefHelperClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(InventJournalTableJumpRefHelper))]
public final class DNRInventJournalTableJumpRefHelperClass_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isArgsValid</Name>
				<Source><![CDATA[
    protected static boolean isArgsValid(Args _args)
    {
        boolean ret = next isArgsValid(_args);

        return (ret || _args.record().TableId == tableNum(SalesLine));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getJournalFromArgs</Name>
				<Source><![CDATA[
    protected static InventJournalTable getJournalFromArgs(Args _args)
    {
        InventJournalTable journal;

        try
        {
            journal = next getJournalFromArgs(_args);
        }
        // No <c>InventJournalTable</c> has been found.
        catch (Exception::Error)
        {
            // Check if the origin is a <c>SalesLine</c>. If so, find the appropriate <c>InventJournalTable<c>. 
            // If not, throw the error anyway.
            if (_args.record().TableId == tableNum(SalesLine))
            {
                SalesLine salesLine = _args.record() as SalesLine;

                journal = InventJournalTable::find(salesLine.BOBConversionJourId);

                // Clear the error message from the info log.
                infolog.clear(infologLine() - 1);
            }
            else
            {
                throw error(Error::missingRecord(tableId2PName(tableNum(InventJournalTable))));
            }
        }

        return journal;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>