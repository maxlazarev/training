<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRVersioningPurchaseOrderClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(VersioningPurchaseOrder))]
public final class DNRVersioningPurchaseOrderClass_Extension
{
    private boolean rentalDateTimesModified;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isChangeConfirmationRequired</Name>
				<Source><![CDATA[
    // chain-of-command wrapper methods
    protected boolean isChangeConfirmationRequired(Common _newRecord, Common _oldRecord)
    {
        boolean ret = next isChangeConfirmationRequired(_newRecord, _oldRecord);
        
        // We shall confirm the Sub rental order again in case the flag is marked as modified.
        switch (_newRecord.TableId)
        {
            case tableNum(PurchTable) :
                PurchTable purchTableLoc = _newRecord;
                ret = ret || purchTableLoc.RORIsModified;
                break;

            case tableNum(PurchLine) :
                PurchLine   purchLineLoc = _newRecord;
                ret = ret || purchLineLoc.RORIsModified;
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>archivePurchLine</Name>
				<Source><![CDATA[
    protected void archivePurchLine(PurchTableVersion _purchTableVersion)
    {
        next archivePurchLine(_purchTableVersion);
        new RORRentalDateTimesJournalizer(purchTable, _purchTableVersion).run();
    }

]]></Source>
			</Method>
			<Method>
				<Name>change</Name>
				<Source><![CDATA[
    public boolean change(Common _newRecord, Common _oldRecord)
    {
        boolean ret = next change(_newRecord, _oldRecord);

        if (!ret)
        {
            ret = this.RORChange(_newRecord, _oldRecord);            
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORChange</Name>
				<Source><![CDATA[
    // extension methods
    private boolean RORChange(Common _newRecord, Common _oldRecord)
    {
        boolean ret = false;

        if (this.RORIsConfirmationRequired(_newRecord, _oldRecord))
        {
            ret = true;
            this.RORMarkModified();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORMarkModified</Name>
				<Source><![CDATA[
    private void RORMarkModified()
    {
        this.markModified();
        this.setDocumentState(VersioningDocumentState::Approved);
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORIsConfirmationRequired</Name>
				<Source><![CDATA[
    private boolean RORIsConfirmationRequired(Common _newRecord, Common _oldRecord)
    {
        boolean ret = false;
        PurchTable currentPurchTable  = _newRecord as PurchTable;
        PurchTable archivedPurchTable = _oldRecord as PurchTable;

        if (currentPurchTable && archivedPurchTable &&
        (currentPurchTable.WPPIsRentalProject != archivedPurchTable.WPPIsRentalProject ||
         currentPurchTable.WPPWorkOrderTemplateId != archivedPurchTable.WPPWorkOrderTemplateId ||
         currentPurchTable.RORVenueCode != archivedPurchTable.RORVenueCode))
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>