<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRSalesQuotationEditLinesForm_Proj_ConfirClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(SalesQuotationEditLinesForm_Proj_Confir))]
public final class DNRSalesQuotationEditLinesForm_Proj_ConfirClass_Extension
{
    // chain-of-command wrapper methods
            
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>postUpdate</Name>
				<Source><![CDATA[
    public void postUpdate()
    {
        SalesQuotationLine salesQuotationLineLocal;
        InventTrans inventTrans;
        InventTransOriginSalesQuotationLine originSalesQuotationLine;
    
        next postUpdate();
    
        while select salesQuotationLineLocal
        where salesQuotationLineLocal.QuotationId == salesQuotationTable.QuotationId
        join TableId from originSalesQuotationLine
            where originSalesQuotationLine.SalesQuotationLineInventTransId == salesQuotationLineLocal.InventTransId
            &&    originSalesQuotationLine.SalesQuotationLineDataAreaId == salesQuotationLineLocal.dataAreaId
                join  inventTrans
                where inventTrans.InventTransOrigin == originSalesQuotationLine.InventTransOrigin
        {
            InventMovement inventMovement = InventMovement::construct(salesQuotationLineLocal);
            BOBRentalTransManager::newInventMovement(inventMovement, inventTrans).synchronize();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkSales</Name>
				<Source><![CDATA[
    protected boolean checkSales()
    {
        boolean ret = next checkSales();
        return ret && salesQuotationTable.DNRcheckCustRequisition();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateNow</Name>
				<Source><![CDATA[
    boolean updateNow()
    {
        boolean ret = next updateNow();

        SalesQuotationTable          salesQuotationTable        = this.salesQuotationTable();
        CustQuotationConfirmJour     custQuotationConfirmJour   = this.journal();
        
        new RORPopulateRentalLineParent(salesQuotationTable, custQuotationConfirmJour).run();
        new RORRentalDateTimesJournalizer(salesQuotationTable, custQuotationConfirmJour).run();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addQuotationTypeRange</Name>
				<Source><![CDATA[
    protected void addQuotationTypeRange(QueryBuildDataSource _salesQuotationTableDataSource)
    {
        next addQuotationTypeRange(_salesQuotationTableDataSource);

        QueryBuildRange queryBuildRangeType = _salesQuotationTableDataSource.findRange(fieldNum(SalesQuotationTable, QuotationType));
        queryBuildRangeType.value(SysQuery::value(this.RORQuotationType()));
        queryBuildRangeType.status(RangeStatus::Locked);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>