<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRPurchParmTableTable_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(tableStr(PurchParmTable))]
public final class DNRPurchParmTableTable_Extension
{
    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId field)
    {
        boolean ret = next validateField(field);

        if (ret)
        {
            switch(field)
            {
                case fieldNum(PurchParmTable, TransDate),
                     fieldNum(PurchParmTable, BOBTransTime) :
                    ret = ret && this.BOBCheckTransDateTime();
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        next modifiedField(_fieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayOrdering</Name>
				<Source><![CDATA[
    display PurchOrderingDisplay displayOrdering()
    {
        PurchOrderingDisplay ret = next displayOrdering();
        PurchTable purchTable = this.purchTable();

        if (this.Ordering == DocumentStatus::PurchaseOrder
        &&  purchTable && purchTable.PurchaseType == PurchaseType::RORSubRental)
        {
            ret = "@DNR1715";
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>BOBCheckTransDateTime</Name>
				<Source><![CDATA[
    // Extension methods

    private boolean BOBCheckTransDateTime()
    {
        boolean ret = true;
        PurchParmUpdate purchParmUpdate = this.purchParmUpdate();
        PurchParmLine purchParmLine;
        PurchLine purchLine;
        RORRentalDateTimes rentalDateTimes;
        FINRentalInvoiceProfile invoiceProfile;
    
        if (purchParmUpdate.DocumentStatus == DocumentStatus::RORReturnNote
        ||  purchParmUpdate.DocumentStatus == DocumentStatus::PackingSlip)
        {
            TransDateTime postingTransDateTime = DateTimeUtil::newDateTime(this.Transdate, this.BOBTransTime, DateTimeUtil::getUserPreferredTimeZone());
    
            while select TableId from purchParmLine
            where purchParmLine.ParmId == this.ParmId
            &&    purchParmLine.TableRefId == this.TableRefId
                join LineNumber, PurchId from purchLine
                where purchLine.InventTransId == purchParmLine.InventTransId
                    join TableId from invoiceProfile
                    where invoiceProfile.InvoiceProfileId == purchLine.INVInvoiceProfileId
                    &&    invoiceProfile.InvoiceStartEndBasis == INVInvoiceStartEndBasis::DeliveryReturn
                        join rentalDateTimes
                        where rentalDateTimes.RefTableId == purchLine.TableId
                        &&    rentalDateTimes.RefRecId == purchLine.RecId
            {
                if (rentalDateTimes.getOnRentDateTime() > postingTransDateTime)
                {
                    ret = checkFailed(strFmt("@DNR7111",
                        purchLine.LineNumber,
                        purchLine.PurchId,
                        "@DNR90",
                        DateTimeUtil::applyTimeZoneOffset(rentalDateTimes.getOnRentDateTime(), DateTimeUtil::getUserPreferredTimeZone())));
                }
    
                if (rentalDateTimes.getOffRentDateTime(false) && rentalDateTimes.getOffRentDateTime(false) < postingTransDateTime)
                {
                    ret = checkFailed(strFmt("@DNR7111",
                        purchLine.LineNumber,
                        purchLine.PurchId,
                        "@DNR114",
                        DateTimeUtil::applyTimeZoneOffset(rentalDateTimes.getOffRentDateTime(false) , DateTimeUtil::getUserPreferredTimeZone())));
                }
            }
        }
    
        if (!ret)
        {
            error("@DNR7110");
        }
    
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>