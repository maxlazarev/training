<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRSalesQuantity_PackingSlipClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(SalesQuantity_PackingSlip))]
public final class DNRSalesQuantity_PackingSlipClass_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcQtyUpdateInvent</Name>
				<Source><![CDATA[
    protected InventQty calcQtyUpdateInvent(SalesLine _salesLine, InventQty _salesLineRemainInventPhysical, InventQty _qty, SalesUpdate _specQty)
    {
        InventQty ret = next calcQtyUpdateInvent(_salesLine, _salesLineRemainInventPhysical, _qty, _specQty);

        InventQty qtyAvailable = naReal();

        if(_salesLine.RORTradeType != RORTradeType::SalesPurch)
        {
            qtyAvailable = this.RORgetSubStatusFromToQty(_salesLine, _qty, _salesLine.inventTable().inventUnitId());

            if(qtyAvailable != naReal()
            && ret > qtyAvailable)
            {
                ret = qtyAvailable;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcQtyUpdateSales</Name>
				<Source><![CDATA[
    protected SalesQty calcQtyUpdateSales(SalesLine _salesLine, SalesQty _salesLineRemainSalesPhysical, SalesQty _qty, SalesUpdate _specQty)
    {
        SalesQty ret = next calcQtyUpdateSales(_salesLine, _salesLineRemainSalesPhysical, _qty, _specQty);

        SalesQty qtyAvailable = naReal();

        if(_salesLine.RORTradeType != RORTradeType::SalesPurch)
        {
            qtyAvailable = this.RORgetSubStatusFromToQty(_salesLine, _qty, _salesLine.inventTable().inventUnitId());

            if(qtyAvailable != naReal()
            && ret > qtyAvailable)
            {
                ret = qtyAvailable;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>