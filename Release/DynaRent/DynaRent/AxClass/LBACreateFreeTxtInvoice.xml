<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LBACreateFreeTxtInvoice</Name>
	<SourceCode>
		<Declaration><![CDATA[
class LBACreateFreeTxtInvoice
{
    LBAContractTable contractTable;
    CustInvoiceTable invoiceTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>companyInfo</Name>
				<Source><![CDATA[
    private CompanyInfo companyInfo(AssetId _assetId)
    {
        AssetGroup  assetGroup;
        CompanyId   companyId;
    
        if (_assetId)
        {
            assetGroup = AssetTable::find(_assetId).assetGroup();
    
            if (assetGroup && assetGroup.BOBObjectCategory == BOBAssetObjectCategory::Rental)
            {
                companyId = AssetParameters::find().BOBAssetCompanyId;
            }
        }
    
        if (!companyId)
        {
            companyId = curExt();
        }
    
        return CompanyInfo::findDataArea(companyId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createHeader</Name>
				<Source><![CDATA[
    private void createHeader()
    {
    
        CustTable custTable = CustTable::find(contractTable.LeaseCompany);
    
        invoiceTable.initFromCustTable(CustTable::find(contractTable.LeaseCompany));
    
        invoiceTable.CurrencyCode      = contractTable.CurrencyCode;
        invoiceTable.LBAContractNumInt = contractTable.ContractNumInt;
        invoiceTable.WorkerSalesTaker  = HcmWorker::userId2Worker(curUserId());
    
        invoiceTable.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createLine</Name>
				<Source><![CDATA[
    private void createLine()
    {
        CustInvoiceLine invoiceLine;
        BOBObjectTable  objectTable = BOBObjectTable::findObjectId(contractTable.BOBObjectId);
        CompanyInfo     companyInfo = this.companyInfo(objectTable.assetId());
        LBAParameters   parameters  = LBAParameters::find();
    
        invoiceLine.initValue();
        invoiceLine.initFromCustInvoiceTable(invoiceTable);
    
        invoiceLine.ParentRecId     = invoiceTable.RecId;
        invoiceLine.AmountCur       = contractTable.ContractAmountMST;
        invoiceLine.TaxGroup        = contractTable.TaxGroup;
        invoiceLine.TaxItemGroup    = contractTable.TaxItemGroup;
        invoiceLine.LineNum         = 1;
        invoiceLine.InvoiceTxt      = strFmt("%1 - %2 - %3 - %4", companyInfo.Name, objectTable.Name, objectTable.InventSerialId, contractTable.StartDate);
        invoiceLine.LedgerDimension = parameters.LedgerDimensionLongTerm;
        invoiceLine.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>openForm</Name>
				<Source><![CDATA[
    void openForm()
    {
        Args         args;
        MenuFunction menuFunction;
    
        args = new args();
        args.caller(this);
        args.record(contractTable);
    
        menuFunction = new MenuFunction(menuItemDisplayStr(CustFreeInvoice), MenuItemType::Display);
        menuFunction.run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmContractTable</Name>
				<Source><![CDATA[
    public LBAContractTable parmContractTable(LBAContractTable _contractTable = contractTable)
    {
        if (!prmisDefault(_contractTable))
        {
            contractTable = _contractTable;
        }
    
        return contractTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    void run()
    {
        if ((select firstonly custInvoiceTable where custInvoiceTable.LBAContractNumInt == contractTable.ContractNumInt).RecId == 0)
        {
            this.createHeader();
            this.createLine();
            this.openForm();
        }
        else
        {
            throw error(strfmt("@DNR6901", contractTable.ContractNumInt));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        LBACreateFreeTxtInvoice createFreeTxtInvoice;
    
        if (!_args || _args.dataset() != tableNum(LBAContractTable))
        {
            throw error(strFmt("@SYS134996", tableStr(LBAContractTable)));
        }
    
        createFreeTxtInvoice = new LBACreateFreeTxtInvoice();
        createFreeTxtInvoice.parmContractTable(_args.record());
        createFreeTxtInvoice.run();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>