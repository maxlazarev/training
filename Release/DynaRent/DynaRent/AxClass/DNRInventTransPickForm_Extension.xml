<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRInventTransPickForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(InventTransPick))]
public final class DNRInventTransPickForm_Extension
{
    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>BOBDisplayAvailRentalQty</Name>
				<Source><![CDATA[
    public display BOBRentalQtyAvailPhysical BOBDisplayAvailRentalQty(InventTrans _inventTrans)
    {
        return inventTransWMS_Pick.BOBAvailOrderQuantity(_inventTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>doResearch</Name>
				<Source><![CDATA[
    public void doResearch()
    {
        next doResearch();

        if (this.args().caller() && FormDataUtil::isFormDataSource(this.args().record()))
        {
            FormDataSource dataSource = FormDataUtil::getFormDataSource(this.args().record());
            if (this.args().record().TableId == tableNum(InventTransferLine))
            {
                dataSource.research(true);
            }
            else
            {
                dataSource.reread();
                dataSource.refresh();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNRParmInventTransWMS_Pick</Name>
				<Source><![CDATA[
    // extension methods

    public InventTransWMS_Pick DNRParmInventTransWMS_Pick(InventTransWMS_Pick _inventTransWMS_Pick = inventTransWMS_Pick)
    {
        inventTransWMS_Pick = _inventTransWMS_Pick;
        return inventTransWMS_Pick;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_TmpInventDimDS_inventSerialId_OnValidated</Name>
				<Source><![CDATA[
    // event handler methods

    [FormDataFieldEventHandler(formDataFieldStr(InventTransPick, TmpInventDim, inventSerialId), FormDataFieldEventType::Validated)]
    public static void DNREvent_TmpInventDimDS_inventSerialId_OnValidated(FormDataObject _sender, FormDataFieldEventArgs _eventArgs)
    {
        InventTrans                     inventTransLocal;
        SalesLine                       salesLine;
        InventTransOriginSalesLine      inventTransOriginSalesLine;
        TmpInventTransWMS               tmpInventTransWMS   = _sender.datasource().formRun().dataSource(formDataSourceStr(InventTransPick, TmpInventTransWMS)).cursor() as TmpInventTransWms;
        InventDim                       tmpInventDim        = _sender.datasource().cursor() as InventDim;
        FormDataFieldCancelEventArgs    args                = _eventArgs as FormDataFieldCancelEventArgs;
        boolean                         ret;

        // This handler is not executed if 'super()' returns false.
        // We therefore do not have to check the return value before executing our custom code.
        select firstOnly salesLine
            exists join inventTransOriginSalesLine
            where inventTransOriginSalesLine.SalesLineDataAreaId == salesLine.dataAreaId
            &&    inventTransOriginSalesLine.SalesLineInventTransId == salesLine.InventTransId
                join inventTransLocal
                where inventTransLocal.RecId == tmpInventTransWMS.InventTrans
                &&    inventTransLocal.InventTransOrigin == inventTransOriginSalesLine.InventTransOrigin;

        if (salesLine)
        {
            ret = salesLine.BOBValidateObjectAssignment(tmpInventDim.InventSerialId, InventTable::find(tmpInventTransWMS.ItemId));
        }

        if (!ret)
        {
            args.cancel(true);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>