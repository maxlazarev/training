<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRProjGroupChangeClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(ProjGroupChange))]
public final class DNRProjGroupChangeClass_Extension
{
    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        next run();

        this.WPPupdateInvoiceStatus();
        this.WPPUpdateNonePostedJournals();
        this.WPPUpdateProjPurchLine();
    }

]]></Source>
			</Method>
			<Method>
				<Name>WPPUpdateInvoiceStatus</Name>
				<Source><![CDATA[
    // extension methods

    private void WPPUpdateInvoiceStatus()
    {
        WPPInvoiceStatusUpdate  invoiceStatusUpdate;
        List                    list;
        ProjTable               projTable = ProjTable::find(this.parmProjId());
    
        if (projTable.ProjInvoiceProjId)
        {
            list = new List(Types::String);
            list.addEnd(projTable.ProjInvoiceProjId);
    
            invoiceStatusUpdate = WPPInvoiceStatusUpdate::construct(WPPInvoiceStatusUpdateTrigger::Adjustment);
            invoiceStatusUpdate.parmReferenceList(list);
            invoiceStatusUpdate.run();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>WPPUpdateNonePostedJournals</Name>
				<Source><![CDATA[
    private void WPPUpdateNonePostedJournals()
    {
        ProjGroup                   projGroup;
        ProjLinePropertyId          linePropertyId;
        ProjJournalTrans            projJournalTrans;
        LedgerJournalTrans          ledgerJournalTrans;
        LedgerJournalTrans_Project  ledgerJournalTrans_Project;
        InventJournalTrans          inventJournalTrans;
        ProjJournalTable            projJournalTable;
        LedgerJournalTable          ledgerJournalTable;
        InventJournalTable          inventJournalTable;
        ProjTable                   projTable;
    
        projGroup      = ProjGroup::find(this.parmProjGroupIdTo());
        linePropertyId = projGroup.projLinePropertyId(false, projGroup, ''); // Set is false, so no 3rd parameter is needed
        projTable      = ProjTable::find(this.parmProjId());
    
        ttsBegin;

        while select forupdate projJournalTrans
        where projJournalTrans.ProjId == projTable.ProjId
            exists join projJournalTable
            where projJournalTable.JournalId == projJournalTrans.JournalId
            &&   !projJournalTable.Posted
        {
            projJournalTrans.LinePropertyId = linePropertyId;
            projJournalTrans.setHourCostPrice();  // also update cost price
            projJournalTrans.setHourSalesPrice(); // also update sales price
            projJournalTrans.update();
        }
    
        while select forupdate ledgerJournalTrans_Project
        where ledgerJournalTrans_Project.ProjId == projTable.ProjId
            exists join ledgerJournalTrans
            where ledgerJournalTrans.RecId == ledgerJournalTrans_Project.RefRecId
                join TableId from ledgerJournalTable
                where ledgerJournalTable.JournalNum == ledgerJournalTrans.JournalNum
                &&   !ledgerJournalTable.Posted
        {
            ledgerJournalTrans_Project.LinePropertyId = linePropertyId;
            ledgerJournalTrans_Project.update();
        }
    
        while select forupdate inventJournalTrans
        where inventJournalTrans.ProjId == projTable.ProjId
            exists join inventJournalTable
            where inventJournalTable.JournalId == inventJournalTrans.JournalId
            &&   !inventJournalTable.Posted
        {
            inventJournalTrans.ProjLinePropertyId = linePropertyId;
            inventJournalTrans.update();
        }

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>WPPUpdateProjPurchLine</Name>
				<Source><![CDATA[
    [SuppressBPWarningAttribute("BPCheckSkipStatementValidation", "Cannot use skip method without altering functional behavior")]
    private void WPPUpdateProjPurchLine()
    {
        PurchLine           purchLine;
        ProjLinePropertyId  linePropertyId;
        ProjGroup           projGroupTo;
        ProjTable           projTable;
    
        projGroupTo = ProjGroup::find(this.parmProjGroupIdTo());
        linePropertyId = projGroupTo.projLinePropertyId(false, projGroupTo, '');
        projTable = ProjTable::find(this.parmProjId());
    
        update_recordset purchLine
        setting ProjLinePropertyId = linePropertyId
        where purchLine.ProjId   == projTable.ProjId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>