<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRInventJournalFormTrans_MovementClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(InventJournalFormTrans_Movement))]
public final class DNRInventJournalFormTrans_MovementClass_Extension
{
    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initInventDimReleasedProduct</Name>
				<Source><![CDATA[
    protected void initInventDimReleasedProduct(InventTable _inventTable)
    {
        next initInventDimReleasedProduct(_inventTable);

        inventDim.DNRInitFromWorkerDefaults(DNRWorkerDefaults::findByUserId());

        InventJournalTable inventJournalTable = inventJournalTrans.inventJournalTable();

        if (inventDim.InventSiteId == '' || inventDim.InventLocationId == '')
        {
            if (inventJournalTable.InventSiteId)
            {
                inventDim.InventSiteId = inventJournalTable.InventSiteId;
            }

            if (inventJournalTable.InventLocationId)
            {
                inventDim.InventLocationId = inventJournalTable.InventLocationId;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldModifiedInventDimFieldsPost</Name>
				<Source><![CDATA[
    public void fieldModifiedInventDimFieldsPost(InventDim _inventDim, FieldId _dimFieldId)
    {
        next fieldModifiedInventDimFieldsPost(_inventDim, _dimFieldId);

        this.BOBSetCostPriceAndAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initReleasedProductSpecificDefaulting</Name>
				<Source><![CDATA[
    public void initReleasedProductSpecificDefaulting(InventTable _inventTable)
    {
        next initReleasedProductSpecificDefaulting(_inventTable);

        this.BOBSetCostPriceAndAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>BOBSetCostPriceAndAmount</Name>
				<Source><![CDATA[
    // extension methods

    public void BOBSetCostPriceAndAmount()
    {
        InventDimParm inventDimParm;
        inventDimParm.initFromInventDim(inventDim);
        inventJournalTrans.CostPrice = InventSum::findSum(inventJournalTrans.ItemId, inventDim, inventDimParm).averageCostPrice();
        inventJournalTrans.CostAmount = inventJournalTrans.calcCostAmount();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>