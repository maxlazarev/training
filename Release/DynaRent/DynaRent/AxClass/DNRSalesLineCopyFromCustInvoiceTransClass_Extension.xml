<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRSalesLineCopyFromCustInvoiceTransClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(SalesLineCopyFromCustInvoiceTrans))]
public final class DNRSalesLineCopyFromCustInvoiceTransClass_Extension
{
    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>copyFromSource</Name>
				<Source><![CDATA[
    protected void copyFromSource()
    {
        next copyFromSource();

        this.RORCopyValues(sourceCustInvoiceTrans, salesLine);
        this.INVCopyValues(sourceCustInvoiceTrans, salesLine);

        // *** Repeated code
        if (CustInvoiceTrans_W::isLegalEntityInCountryRegion())
        {
            if (salesCopying.parmSalesPurchCopy() == SalesPurchCopy::CreditNoteHeader
                || salesCopying.parmSalesPurchCopy() == SalesPurchCopy::CreditNoteLines)
            {
                this.initFromCustInvoiceTrans_W_CreditNote();
            }
            else
            {
                this.initfromCustInvoiceTrans_W();
            }
        }
        else
        {
            salesLine.initFromCustInvoiceTrans(sourceCustInvoiceTrans, copyPrecisely, !searchPrice, copyQty, tmpFrmVirtualLine.Qty,
                                               #PdsCatchWeightEnabled ? tmpFrmVirtualLine.PdsCWQty : 0);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>INVCopyValues</Name>
				<Source><![CDATA[
    // extension methods

    private void INVCopyValues(CustInvoiceTrans _fromCustInvoiceTrans, SalesLine _toLine)
    {
        SalesLine salesLineFrom = SalesLine::findInventTransId(_fromCustInvoiceTrans.InventTransId);
    
        _toLine.INVInvoiceProfileId      = salesLineFrom.INVInvoiceProfileId;
        _toLine.INVRateMultiplierTier    = salesLineFrom.INVRateMultiplierTier;
        _toLine.INVRentalModeId          = salesLineFrom.INVRentalModeId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORCopyValues</Name>
				<Source><![CDATA[
    private void RORCopyValues(CustInvoiceTrans _fromCustInvoiceTrans, SalesLine _toLine)
    {
        SalesLine salesLineFrom = SalesLine::findInventTransId(_fromCustInvoiceTrans.InventTransId);
    
        _toLine.RORParentLineRecId       = salesLineFrom.RORParentLineRecId;
        _toLine.RORAmendmentExchangeType = salesLineFrom.RORAmendmentExchangeType;
    
        this.RORInitFromSalesLine(_toLine, salesLineFrom);
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORInitFromSalesLine</Name>
				<Source><![CDATA[
    private void RORInitFromSalesLine(SalesLine _toLine, SalesLine _fromLine)
    {
        _toLine.RORAllowQtyEdit             = _fromLine.RORAllowQtyEdit;
        _toLine.DNRCalendarId               = _fromLine.DNRCalendarId;
        _toLine.RORInventReturned           = _fromLine.RORInventReturned;
        _toLine.RORIsPriceFixed             = _fromLine.RORIsPriceFixed;
        _toLine.RORIsPriceNet               = _fromLine.RORIsPriceNet;
        _toLine.RORKitComponentType         = _fromLine.RORKitComponentType;
        _toLine.RORLineType                 = _fromLine.RORLineType;
        _toLine.RORPriceTimeUnit            = _fromLine.RORPriceTimeUnit;
        _toLine.RORRemainInventReturn       = _fromLine.RORRemainInventReturn;
        _toLine.RORRemainSalesReturn        = _fromLine.RORRemainSalesReturn;
        _toLine.RORRentalGrossAmount        = _fromLine.RORRentalGrossAmount;
        _toLine.RORRentalStatus             = _fromLine.RORRentalStatus;
        _toLine.RORSalesReturned            = _fromLine.RORSalesReturned;
        _toLine.RORTradeType                = _fromLine.RORTradeType;
        _toLine.RORReturnInventLocationId   = _fromLine.RORReturnInventLocationId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>