<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINDimValueController_SalesTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
class FINDimValueController_SalesTable extends FINDimValueController
{
    SalesTable callerSalesTable;


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>acceptCascadedUpdate</Name>
				<Source><![CDATA[
    protected boolean acceptCascadedUpdate()
    {
        return (callerSalesTable.SalesStatus != SalesStatus::Invoiced);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findCustAccount</Name>
				<Source><![CDATA[
    protected FINDimValueResult findCustAccount()
    {
        return FINDimValueResult::constructValue(callerSalesTable.CustAccount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findVenue</Name>
				<Source><![CDATA[
    protected FINDimValueResult findVenue()
    {
        return FINDimValueResult::constructValue(callerSalesTable.RORVenueCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDescription</Name>
				<Source><![CDATA[
    protected Description getDescription()
    {
        return callerSalesTable.SalesName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDimensionFieldId</Name>
				<Source><![CDATA[
    protected FieldId getDimensionFieldId()
    {
        return fieldNum(SalesTable, DefaultDimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(SalesTable _salesTable)
    {
        super(_salesTable);
        callerSalesTable = _salesTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>refDepartmentId</Name>
				<Source><![CDATA[
    protected FINDimValueResult refDepartmentId()
    {
        return FINDimValueResult::constructReference(InventLocation::find(callerSalesTable.InventLocationId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCleanupQuery</Name>
				<Source><![CDATA[
    public SysDaQueryObject getCleanupQuery()
    {
        SysDaQueryObject cleanupQuery = new SysDaQueryObject(callerSalesTable);

        cleanupQuery.WhereClause(new SysDaEqualsExpression(
            new SysDaFieldExpression(callerSalesTable, fieldStr(SalesLine, SalesStatus)),
            new SysDaValueExpression(SalesStatus::Invoiced))
        .or(new SysDaEqualsExpression(
            new SysDaFieldExpression(callerSalesTable, fieldStr(SalesLine, SalesStatus)),
            new SysDaValueExpression(SalesStatus::Canceled))));

        return cleanupQuery;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>