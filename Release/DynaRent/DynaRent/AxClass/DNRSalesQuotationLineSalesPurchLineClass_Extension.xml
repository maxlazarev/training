<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRSalesQuotationLineSalesPurchLineClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(SalesQuotationLineSalesPurchLine))]
public final class DNRSalesQuotationLineSalesPurchLineClass_Extension
{
    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>assignLineAmount</Name>
				<Source><![CDATA[
    protected void assignLineAmount(LineAmount _lineAmount)
    {
        next assignLineAmount(_lineAmount);

        if (this.parmSalesQuotationLine().RORTradeType == RORTradeType::SalesPurch && this.parmSalesQuotationLine().RecId)
        {
            this.parmSalesQuotationLine().RORRentalGrossAmount = (this.parmSalesQuotationLine().SalesPrice * this.parmSalesQuotationLine().SalesQty);
        }
        else
        {
            this.parmSalesQuotationLine().LineAmount = _lineAmount;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCategoryBased</Name>
				<Source><![CDATA[
    public boolean isCategoryBased()
    {
        boolean ret = next isCategoryBased();

        if ((this.parmSalesQuotationLine().QuotationType == QuotationType::Project || this.parmSalesQuotationLine().QuotationType == QuotationType::RORProjRental)
        &&  this.parmSalesQuotationLine().ProjTransType != QuotationProjTransType::Item)
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustSetPriceDisc</Name>
				<Source><![CDATA[
    protected boolean mustSetPriceDisc(InventDim _inventDim, boolean _initDateFields, PriceDiscPriceAgreementParameters _parameters)
    {
        next mustSetPriceDisc(_inventDim, _initDateFields, _parameters); // we don't need to catch the return value

        // Fetch prices from contract only during creation, or when some crucial fields like CustAccount changes
        // (but in that case the code will be triggered from a different place)
        if (this.parmSalesQuotationLine().RORTradeType != RORTradeType::SalesPurch && (!this.parmSalesQuotationLine().RecId || _parameters.DNRparmForceRentalAgreement()))
        {
            if (RAGUtil::mustApplyRentalAgreements(this.parmSalesQuotationLine().BOBRentalTypeIdRequested))
            {
                this.parmSalesQuotationLine().RORRentalLine::RAGSetContractInfo();
            }
            else if (this.parmSalesQuotationLine().RORLineType == RORLineType::Insurance)
            {
                this.parmSalesQuotationLine().RORRentalLine::RAGSetContractInfoFromParent();
            }

            return false;
        }
        else if (this.parmSalesQuotationLine().RORTradeType == RORTradeType::SalesPurch)
        {
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>