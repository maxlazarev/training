<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNREventVersioningPurchaseOrder</Name>
	<SourceCode>
		<Declaration><![CDATA[
class DNREventVersioningPurchaseOrder
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isChangeConfirmationRequired_post</Name>
				<Source><![CDATA[
    // Commenting the below code to avoid update conflicts occured when adding a new line to a confirmed and received sub rental order
    // [PostHandlerFor(classStr(VersioningPurchaseOrder), methodStr(VersioningPurchaseOrder, isChangeConfirmationRequired))]
    public static void isChangeConfirmationRequired_post(XppPrePostArgs _args)
    {
        VersioningPurchaseOrder versioningPurchaseOrder = _args.getThis();
        Common                  newRecord = _args.getArg('_newRecord');
        Common                  oldRecord = _args.getArg('_oldRecord');
        boolean                 hostRet = _args.getReturnValue();
        ;
    
        if (!hostRet)
        {
            hostRet = DNREventVersioningPurchaseOrder::RORConfirmationRequired(newRecord, oldRecord, versioningPurchaseOrder);
            _args.setReturnValue(hostRet);
        }
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORConfirmationRequired</Name>
				<Source><![CDATA[
    private static boolean RORConfirmationRequired(Common _newRecord, Common _oldRecord, VersioningPurchaseOrder _versioningPurchaseOrder)
    {
        TableId tableId = (_oldRecord ? _oldRecord.TableId : _newRecord.TableId);
        Common  common = (_oldRecord ? _oldRecord : _newRecord);
        PurchLine   purchLine;
        PurchTable  purchTable;
        boolean canCheck;
        boolean ret;
        ;
    
        switch (tableId)
        {
            case tableNum(PurchLine) :
                purchLine = common;
                purchTable = purchLine.purchTable();
                // go through
            case tableNum(PurchTable) :
                if (!purchTable)
                {
                    purchTable = common;
                }
    
                if (purchTable.PurchaseType == PurchaseType::RORSubRental)
                {
                    canCheck = true;
                }
                break;
        }
    
        ret = !canCheck;
    
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>