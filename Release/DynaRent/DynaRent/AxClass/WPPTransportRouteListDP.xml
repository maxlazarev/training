<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WPPTransportRouteListDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
[
    SRSReportParameterAttribute(classstr(WPPTransportRouteListContract))
]
class WPPTransportRouteListDP extends SRSReportDataProviderBase
{
    WPPTmpTransportRouteList    tmpTransportRouteList;
    List                        workOrderLineRecIdList;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildQuery</Name>
				<Source><![CDATA[
    private Query buildQuery()
    {
         Query query = new Query();
    
        QueryBuildDataSource qbdsWorkOrderLineResource = query.addDataSource(tableNum(WPPWorkOrderLineResource));
        qbdsWorkOrderLineResource.addRange(fieldNum(WPPWorkOrderLineResource, ResourceType)).value(SysQuery::value(WrkCtrGroupWrkCtr::WrkCtr));
        qbdsWorkOrderLineResource.addSelectionField(fieldNum(WPPWorkOrderLineResource, ResourceId));
        qbdsWorkOrderLineResource.addSortField(fieldNum(WPPWorkOrderLineResource, ResourceId));
        qbdsWorkOrderLineResource.addSortField(fieldNum(WPPWorkOrderLineResource, LineNum));
    
        QueryBuildDataSource qbdsWorkOrderLine = qbdsWorkOrderLineResource.addDataSource(tableNum(WPPWorkOrderLine));
        qbdsWorkOrderLine.relations(true);
        qbdsWorkOrderLine.addSelectionField(fieldNum(WPPWorkOrderLine, TaskId));
        qbdsWorkOrderLine.addSelectionField(fieldNum(WPPWorkOrderLine, RequestedEndDateTime));
        qbdsWorkOrderLine.addSelectionField(fieldNum(WPPWorkOrderLine, RequestedStartDateTime));
        qbdsWorkOrderLine.addSelectionField(fieldNum(WPPWorkOrderLine, ExecutionGroupId));
    
        QueryBuildDataSource qbdsWorkOrderTable = qbdsWorkOrderLine.addDataSource(tableNum(WPPWorkOrderTable));
        qbdsWorkOrderTable.relations(true);
        qbdsWorkOrderTable.addSelectionField(fieldNum(WPPWorkOrderTable, InventLocationId));
        qbdsWorkOrderTable.addSelectionField(fieldNum(WPPWorkOrderTable, RORReturnInventLocationId));
        qbdsWorkOrderTable.addSelectionField(fieldNum(WPPWorkOrderTable, CustVendAccountType));
        qbdsWorkOrderTable.addSelectionField(fieldNum(WPPWorkOrderTable, OrganizationParty));
        qbdsWorkOrderTable.addSelectionField(fieldNum(WPPWorkOrderTable, CompanyId));
    
        QueryBuildDataSource qbdsObjectTable = qbdsWorkOrderTable.addDataSource(tableNum(BOBObjectTable));
        qbdsObjectTable.relations(true);
        qbdsObjectTable.joinMode(JoinMode::OuterJoin);
        qbdsObjectTable.addSelectionField(fieldNum(BOBObjectTable, InventSerialId));
        qbdsObjectTable.addSelectionField(fieldNum(BOBObjectTable, RentalTypeId));
        qbdsObjectTable.addSelectionField(fieldNum(BOBObjectTable, ObjectId));
    
        QueryBuildDataSource qbdsPostalAddress = qbdsObjectTable.addDataSource(tableNum(LogisticsPostalAddress));
        qbdsPostalAddress.relations(false);
        qbdsPostalAddress.joinMode(JoinMode::OuterJoin);
        qbdsPostalAddress.addRange(fieldNum(LogisticsPostalAddress, DataAreaId)).value(strFmt('(%1 == %2.%3)',
                                                                                                fieldStr(LogisticsPostalAddress, RecId),
                                                                                                qbdsWorkOrderTable.name(),
                                                                                                fieldStr(WPPWorkOrderTable, LogisticsLocationRecId)));
        qbdsPostalAddress.addSelectionField(fieldNum(LogisticsPostalAddress, Street));
        qbdsPostalAddress.addSelectionField(fieldNum(LogisticsPostalAddress, City));
        qbdsPostalAddress.addSelectionField(fieldNum(LogisticsPostalAddress, ZipCode));
    
        QueryBuildDataSource qbdsResourceTable = qbdsPostalAddress.addDataSource(tableNum(WPPResourceTable));
        qbdsResourceTable.relations(false);
        qbdsResourceTable.joinMode(JoinMode::OuterJoin);
        qbdsResourceTable.addRange(fieldNum(WPPResourceTable, ResourceCategory)).value(SysQuery::value(WPPResourceCategory::HumanResource));
        qbdsResourceTable.addRange(fieldNum(WPPResourceTable, DataAreaId)).value(strFmt('(%1 == %2.%3)',
                                                                                fieldStr(WPPResourceTable, ResourceId),
                                                                                qbdsWorkOrderLineResource.name(),
                                                                                fieldStr(WPPWorkOrderLineResource, ResourceId)));
        qbdsResourceTable.addSelectionField(fieldNum(WPPResourceTable, TableId));
    
        QueryBuildDataSource qbdsWorker = qbdsResourceTable.addDataSource(tableNum(HcmWorker));
        qbdsWorker.relations(false);
        qbdsWorker.addLink(fieldNum(WPPResourceTable, RelationAccount), fieldNum(HcmWorker, PersonnelNumber));
        qbdsWorker.joinMode(JoinMode::OuterJoin);
        qbdsWorker.addSelectionField(fieldNum(HcmWorker, TableId));
    
        QueryBuildDataSource qbdsPerson = qbdsWorker.addDataSource(tableNum(DirPerson));
        qbdsPerson.relations(true);
        qbdsPerson.joinMode(JoinMode::OuterJoin);
        qbdsPerson.addSelectionField(fieldNum(DirPerson, Name));
    
        QueryBuildDataSource qbdsSalesLine = qbdsPerson.addDataSource(tableNum(SalesLine));
        qbdsSalesLine.relations(false);
        qbdsSalesLine.joinMode(JoinMode::OuterJoin);
        qbdsSalesLine.addRange(fieldNum(SalesLine, DataAreaId)).value(strFmt('(%1 == %2.%3) && (%4 == %2.%5)',
                                                                               fieldStr(SalesLine, RecId),
                                                                               qbdsWorkOrderTable.name(),
                                                                               fieldStr(WPPWorkOrderTable, OrderRecId),
                                                                               fieldStr(SalesLine, TableId),
                                                                               fieldStr(WPPWorkOrderTable, OrderTableId)));
        qbdsSalesLine.addSelectionField(fieldNum(SalesLine, SalesId));
    
        ListEnumerator enumerator = workOrderLineRecIdList.getEnumerator();
        while (enumerator.moveNext())
        {
            QueryBuildRange qbrWorkOrderLineRecId = qbdsWorkOrderLineResource.addRange(fieldNum(WPPWorkOrderLineResource, RecId));
            qbrWorkOrderLineRecId.value(SysQuery::value(enumerator.current()));
        }
    
        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTmpTransportRouteList</Name>
				<Source><![CDATA[
    [
        SRSReportDataSetAttribute(tableStr(WPPTmpTransportRouteList))
    ]
    public WPPTmpTransportRouteList getTmpTransportRouteList()
    {
        select tmpTransportRouteList;
        return tmpTransportRouteList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateTmpTable</Name>
				<Source><![CDATA[
    public void populateTmpTable()
    {
        WPPWorkOrderLine            workOrderLine;
        WPPWorkOrderTable           workOrderTable;
        WPPWorkOrderLineResource    workOrderLineResource;
        BOBObjectTable              objectTable;
        BOBObjectView               objectView;
        LogisticsPostalAddress      postalAddress;
        DirPerson                   dirPerson;
        SalesLine                   salesLine;
        WPPParameters               parameters;
        QueryRun                    queryRun;
        CompanyImage                companyImage;
    
        companyImage = CompanyImage::findByRecord(CompanyInfo::find(), false);
        parameters = WPPParameters::find();
    
        queryRun = new QueryRun(this.buildQuery());
    
        while (queryRun.next())
        {
            if (queryRun.changed(tableNum(WPPWorkOrderLine)))
            {
                workOrderLineResource = queryRun.get(tableNum(WPPWorkOrderLineResource));
                workOrderLine         = queryRun.get(tableNum(WPPWorkOrderLine));
                workOrderTable        = queryRun.get(tableNum(WPPWorkOrderTable));
                postalAddress         = queryRun.get(tableNum(LogisticsPostalAddress));
                dirPerson             = queryRun.get(tableNum(DirPerson));
                objectTable           = queryRun.get(tableNum(BOBObjectTable));
                salesLine             = queryRun.get(tableNum(SalesLine));
    
                if (workOrderLine.TaskId == parameters.InternalLoadTaskId)
                {
                    select firstOnly Street, City, ZipCode from objectView
                    where objectView.ObjectId == objectTable.ObjectId;
                }
                else
                if (workOrderLine.TaskId == parameters.InternalDeliveryTaskId)
                {
                    if (salesLine)
                    {
                        postalAddress = salesLine.inventDim().inventLocation().logisticsPostalAddress();
                    }
                    else
                    {
                        postalAddress = InventLocation::find(workOrderTable.RORReturnInventLocationId ? workOrderTable.RORReturnInventLocationId : workOrderTable.InventLocationId).logisticsPostalAddress();
                    }
                }
    
                tmpTransportRouteList.Image                  = companyImage.Image;
                tmpTransportRouteList.ResourceId             = workOrderLineResource.ResourceId;
                tmpTransportRouteList.TaskId                 = workOrderLine.TaskId;
                tmpTransportRouteList.RequestedEndDateTime   = workOrderLine.RequestedEndDateTime;
                tmpTransportRouteList.RequestedStartDateTime = workOrderLine.RequestedStartDateTime;
                tmpTransportRouteList.ExecutionGroupId       = workOrderLine.ExecutionGroupId;
                tmpTransportRouteList.CustAccount            = workOrderTable.custVendAccount();
                tmpTransportRouteList.Street                 = workOrderLine.TaskId == parameters.InternalLoadTaskId ? objectView.Street  : postalAddress.Street;
                tmpTransportRouteList.City                   = workOrderLine.TaskId == parameters.InternalLoadTaskId ? objectView.City    : postalAddress.City;
                tmpTransportRouteList.ZipCode                = workOrderLine.TaskId == parameters.InternalLoadTaskId ? objectView.ZipCode : postalAddress.ZipCode;
                tmpTransportRouteList.ResourceName           = dirPerson.Name;
                tmpTransportRouteList.AssetId                = objectTable.assetId();
                tmpTransportRouteList.ItemId                 = objectTable.inventTable().ItemId;
                tmpTransportRouteList.SalesId                = salesLine.SalesId;
                tmpTransportRouteList.insert();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    public void processReport()
    {
        WPPTransportRouteListContract transportRouteListContract = this.parmDataContract() as WPPTransportRouteListContract;
        workOrderLineRecIdList = transportRouteListContract.parmWorkOrderLineRecIdList();
    
        this.populateTmpTable();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>