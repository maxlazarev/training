<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RORBatchPrintInvoice_Cust</Name>
	<SourceCode>
		<Declaration><![CDATA[
class RORBatchPrintInvoice_Cust extends RORBatchPrintInvoice
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>printJournals</Name>
				<Source><![CDATA[
    protected void printJournals()
    {
        SalesInvoiceController                  reportRunController;
        SalesInvoiceContract                    salesInvoiceContract;
        CustInvoiceJour                         custInvoiceJour;
        SRSCatalogItemName                      reportName;
        LogisticsAddressCountryRegionISOCode    isoCode;
        Args                                    args;
        SrsReportRunImpl                        reportRun;
        SrsReportDataContract                   dataContract;
        ;
    
        reportName = PrintMgmtDocType::construct(PrintMgmtDocumentType::SalesOrderInvoice).getDefaultReportFormat();
        isoCode = SysCountryRegionCode::countryInfo();
        args = new Args();
        args.menuItemName(menuItemActionStr(RORBatchPrintInvoices_Cust));
        args.menuItemType(MenuItemType::Action);
        args.parmEnumType(enumNum(PrintCopyOriginal));
        args.parmEnum(PrintCopyOriginal::OriginalPrint);

        SalesFormLetterInvoiceContract formLettercontract = new SalesFormLetterInvoiceContract();
        formLettercontract.parmUsePrintManagement(usePrintManagement);
        formLettercontract.parmPrintersettingsFormletter(SysOperationHelper::base64Encode(this.printSettings().pack()));

        FormletterJournalPrint formLetterJournalPrint = FormletterJournalPrint::newFromFormletterContract(formLettercontract);
        args.caller(formLetterJournalPrint);

        while (queryRun.next())
        {
            custInvoiceJour = queryRun.get(tableNum(CustInvoiceJour));
            args.record(custInvoiceJour);
    
            reportRunController = SalesInvoiceController::construct();
            reportRunController.parmReportName(reportName);
    
            salesInvoiceContract = reportRunController.parmReportContract().parmRdpContract();
            salesInvoiceContract.parmRecordId(custInvoiceJour.RecId);
            salesInvoiceContract.parmCountryRegionISOCode(isoCode);
    
            reportRunController.parmExecutionMode(SysOperationExecutionMode::Synchronous);
            reportRunController.parmArgs(args);
            reportRunController.parmShowDialog(false);
            reportRunController.parmLoadFromSysLastValue(false);
    
            reportRun = reportRunController.parmReportRun() as SrsReportRunImpl;
    
            dataContract = reportRun.parmReportContract();
            dataContract.parmRdlContract().parmLanguageId(custInvoiceJour.LanguageId);
            dataContract.parmRdpContract(salesInvoiceContract);
            dataContract.parmReportExecutionInfo(new SrsPrintMgmtExecutionInfo()); 
    
            reportRunController.parmReportRun(reportRun);
            reportRunController.startOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryBuild</Name>
				<Source><![CDATA[
    protected QueryRun queryBuild()
    {
        return new QueryRun(queryStr(CustInvoiceJour));
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        RORBatchPrintInvoice_Cust batchPrintInvoiceCust = new RORBatchPrintInvoice_Cust();
        ;
        if (batchPrintInvoiceCust.prompt())
        {
            batchPrintInvoiceCust.runOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>