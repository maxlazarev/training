<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WPPResourceCopy</Name>
	<SourceCode>
		<Declaration><![CDATA[
class WPPResourceCopy
{
    WPPResourceCategory  fromResourceCategory;
    WPPResourceId        fromResourceId;
    WPPResourceCategory  toResourceCategory;
    WPPResourceId        toResourceId;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>copy</Name>
				<Source><![CDATA[
    public boolean copy()
    {
        WPPResourceTable            fromResourceTable;
        WPPResourceGroupResource    fromResourceGroupResource;
        WPPResourceCalendarResource fromResourceCalendar;
        WPPResourceCapability       fromResourceCapability;

        WPPResourceTable            toResourceTable;
        WPPResourceCalendarResource toResourceCalendar;
        WPPResourceCapability       toResourceCapability;
        WPPResourceGroupResource    toResourceGroupResource;

        date                        minSearchDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        date                        maxSearchDate = dateMax();
        TransDateTime               minSearchDateTime = DateTimeUtil::utcNow();
        TransDateTime               maxSearchDateTime = DateTimeUtil::maxValue();
        boolean                     ret;

        //First validate if the parm's has been set correct
        if (! this.validate())
        {
            return false;
        }

        ttsbegin;

        //Copy resource
        fromResourceTable = WPPResourceTable::find(this.parmFromResourceId());

        toResourceTable.data(fromResourceTable);
        toResourceTable.ResourceId = this.parmToResourceId();
        toResourceTable.ResourceCategory = this.parmToResourceCategory();

        if(toResourceTable.validateWrite())
        {
            toResourceTable.insert();
            ret = true;
        }

        if(toResourceTable.RecId)
        {

            //Copy relations to resource group
            while select validTimeState(minSearchDateTime, maxSearchDateTime) fromResourceGroupResource
            where fromResourceGroupResource.ResourceId  == fromResourceTable.ResourceId
            {
                toResourceGroupResource.data(fromResourceGroupResource);
                toResourceGroupResource.ResourceId = toResourceTable.ResourceId;
            
                if(toResourceGroupResource.validateWrite())
                {
                    toResourceGroupResource.insert();
                }
            }

            //Copy relations to resource calendar
            while select validTimeState(minSearchDateTime, maxSearchDateTime) fromResourceCalendar
            where fromResourceCalendar.ResourceId == fromResourceTable.ResourceId
            {
                toResourceCalendar.data(fromResourceCalendar);
                toResourceCalendar.ResourceId = toResourceTable.ResourceId;
            
                if(toResourceCalendar.validateWrite())
                {
                    toResourceCalendar.insert();
                }
            }

            //Copy capabilities
            while select validTimeState(minSearchDate, maxSearchDate) fromResourceCapability
            where fromResourceCapability.ResourceId == fromResourceTable.ResourceId
            {
                toResourceCapability.data(fromResourceCapability);
                toResourceCapability.ResourceId = toResourceTable.ResourceId;
            
                if(toResourceCapability.validateWrite())
                {
                    toResourceCapability.insert();
                }
            }
        }

        ttscommit;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromResourceId</Name>
				<Source><![CDATA[
    public WPPResourceId parmFromResourceId(WPPResourceId _resourceId = fromResourceId)
    {
        fromResourceId = _resourceId;
        return fromResourceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromResourceCategory</Name>
				<Source><![CDATA[
    public WPPResourceCategory parmFromResourceCategory(WPPResourceCategory _resourceCategory = fromResourceCategory)
    {
        fromResourceCategory = _resourceCategory;
        return fromResourceCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToResourceId</Name>
				<Source><![CDATA[
    public WPPResourceId parmToResourceId(WPPResourceId _resourceId = toResourceId)
    {
        toResourceId = _resourceId;
        return toResourceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToResourceCategory</Name>
				<Source><![CDATA[
    public WPPResourceCategory parmToResourceCategory(WPPResourceCategory _resourceCategory = toResourceCategory)
    {
        toResourceCategory = _resourceCategory;
        return toResourceCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    public boolean validate()
    {
        WPPResourceTable     fromResourceTable;

        fromResourceTable = WPPResourceTable::find(this.parmFromResourceId());

        if (!fromResourceTable)
        {
            return checkFailed(strfmt("@SYS12234", this.parmFromResourceId()));
        }

        if (fromResourceTable.ResourceCategory != this.parmFromResourceCategory())
        {
            return checkFailed(strfmt("@SYS133100", this.parmFromResourceId()));
        }

        if (!this.parmToResourceId())
        {
            return checkFailed(strfmt("@SYS26332",fieldpname(WPPResourceTable, ResourceId)));
        }

        if (WPPResourceTable::exist(this.parmToResourceId()))
        {
            return checkFailed(strfmt("@SYS133101",this.parmToResourceId()));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static WPPResourceCopy construct()
    {
        return new WPPResourceCopy();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newDefault</Name>
				<Source><![CDATA[
    public static WPPResourceCopy newDefault(WPPResourceCategory    _fromCategory,
                                             WPPResourceId          _fromResourceId,
                                             WPPResourceCategory    _toCategory,
                                             WPPResourceId          _toResourceId)
    {
        WPPResourceCopy wrkCtrResourceCopy = WPPResourceCopy::construct();

        wrkCtrResourceCopy.parmFromResourceCategory(_fromCategory);
        wrkCtrResourceCopy.parmFromResourceId(_fromResourceId);
        wrkCtrResourceCopy.parmToResourceCategory(_toCategory);
        wrkCtrResourceCopy.parmToResourceId(_toResourceId);

        return wrkCtrResourceCopy;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>