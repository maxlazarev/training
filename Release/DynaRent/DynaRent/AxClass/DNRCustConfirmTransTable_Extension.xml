<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRCustConfirmTransTable_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(tableStr(CustConfirmTrans))]
public final class DNRCustConfirmTransTable_Extension
{
    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromSalesLine</Name>
				<Source><![CDATA[
    void initFromSalesLine(SalesLine salesLine)
    {
        next initFromSalesLine(salesLine);

        this.RORInitFromSalesLine(salesLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORDisplayDiscPercent</Name>
				<Source><![CDATA[
    // extension methods

    [SysClientCacheDataMethodAttribute(true)]
    public display RORRentalDiscPercent RORDisplayDiscPercent()
    {
        RORRentalDiscPercent    rentalDiscPercent;
    
        if (hasFieldAccess(tableNum(CustConfirmTrans), fieldNum(CustConfirmTrans, LinePercent)))
        {
            switch (this.RORTradeType)
            {
                case RORTradeType::Rental,
                     RORTradeType::SubRental:
                    rentalDiscPercent = this.RORRentalLine::editDiscPercent(false, 0);
                    break;
    
                default:
                    rentalDiscPercent = this.LinePercent;
            }
        }
    
        return rentalDiscPercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORDisplayLineAmount</Name>
				<Source><![CDATA[
    [SysObsolete('DNRDeletedObjects07_2021. This method is obsolete')]
    public display LineAmount RORDisplayLineAmount()
    {
        LineAmount    lineAmount;
    
        if (hasFieldAccess(tableNum(CustConfirmTrans), fieldNum(CustConfirmTrans, LineAmount)))
        {
            lineAmount = this.RORRentalLine::editLineAmount(false, 0);
        }
    
        return lineAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORDisplayNetAmount</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    public display RORRentalNetAmount RORDisplayNetAmount()
    {
        RORRentalNetAmount    netAmount;
    
        if (hasFieldAccess(tableNum(CustConfirmTrans), fieldNum(CustConfirmTrans, RORRentalGrossAmount)))
        {
            netAmount = this.RORRentalLine::editNetAmount(false, 0);
        }
    
        return netAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORGetHeader</Name>
				<Source><![CDATA[
    public RORRentalHeader RORGetHeader(boolean _forUpdate = false)
    {
        return this.custConfirmJour(_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORGetParentLine</Name>
				<Source><![CDATA[
    public RORRentalLine RORGetParentLine(boolean _forUpdate = false)
    {
        CustConfirmTrans custConfirmTrans;
        ;
    
        if (this.RORParentLineRecId)
        {
            custConfirmTrans.selectForUpdate(_forUpdate);
    
            select firstonly custConfirmTrans
            where custConfirmTrans.ConfirmId        == this.ConfirmId
            &&    custConfirmTrans.ConfirmDate      == this.ConfirmDate
            &&    custConfirmTrans.SalesId          == this.SalesId
            &&    custConfirmTrans.RecId            == this.RORParentLineRecId;
    
            return custConfirmTrans;
        }
        else
        {
            return null;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORInitFromSalesLine</Name>
				<Source><![CDATA[
    void  RORInitFromSalesLine(SalesLine _salesLine,
                               Map       _inventTransIdParentRecIdMap = null)
    {
        this.RORTradeType           = _salesLine.RORTradeType;
        this.RORPriceTimeUnit       = _salesLine.RORPriceTimeUnit;
        this.DNRCalendarId          = _salesLine.DNRCalendarId;
        this.RORIsPriceFixed        = _salesLine.RORIsPriceFixed;
        this.RORIsPriceNet          = _salesLine.RORIsPriceNet;
        this.RORKitComponentType    = _salesLine.RORKitComponentType;
        this.RORRentalGrossAmount   = _salesLine.RORRentalGrossAmount;
        this.INVInvoiceProfileId    = _salesLine.INVInvoiceProfileId;
        this.INVRateMultiplierTier  = _salesLine.INVRateMultiplierTier;
        this.INVRentalModeId        = _salesLine.INVRentalModeId;
        this.RORLineType            = _salesLine.RORLineType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORLineBuffer</Name>
				<Source><![CDATA[
    public CustConfirmTrans RORLineBuffer()
    {
        CustConfirmTrans custConfirmTrans;
        return custConfirmTrans;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>