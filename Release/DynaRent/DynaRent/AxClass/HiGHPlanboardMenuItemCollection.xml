<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HiGHPlanboardMenuItemCollection</Name>
	<SourceCode>
		<Declaration><![CDATA[
class HiGHPlanboardMenuItemCollection
{
    private Map menuItemsMap;
    private Map sequenceMap;
    private const int increment = 100;
    private SequenceNumber sequenceNum;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        menuItemsMap = new Map(Types::String, Types::Class);    // (Label, HiGHPlanboardMenuItem)
        sequenceMap = new Map(Types::String, Types::Integer);   // (Label, SequenceNumber)
    }

]]></Source>
			</Method>
			<Method>
				<Name>addEnd</Name>
				<Source><![CDATA[
    public void addEnd(HiGHPlanBoardMenuItem _menuItem)
    {
        sequenceNum += increment;
        this.addAtPosition(_menuItem, sequenceNum);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addAtPosition</Name>
				<Source><![CDATA[
    // CAUTION: adding a new menu item at a position that already exists will overwrite the existing MenuItem.
    public void addAtPosition(HiGHPlanBoardMenuItem _menuItem, SequenceNumber _sequenceNum)
    {
        str menuItemLabel = _menuItem.parmLabel();

        if(menuItemsMap.exists(menuItemLabel))
        {
            throw error(strFmt("@DNR10217", menuItemLabel));
        }

        if(sequenceMap.exists(menuItemLabel))
        {
            throw error(strFmt("@DNR10218", menuItemLabel, _sequenceNum));
        }

        menuItemsMap.insert(menuItemLabel, _menuItem);
        sequenceMap.insert(menuItemLabel, _sequenceNum);
    }

]]></Source>
			</Method>
			<Method>
				<Name>remove</Name>
				<Source><![CDATA[
    public void remove(LabelString _menuItemLabel)
    {
        menuItemsMap.remove(_menuItemLabel);
        sequenceMap.remove(_menuItemLabel);
    }

]]></Source>
			</Method>
			<Method>
				<Name>toList</Name>
				<Source><![CDATA[
    public List toList()
    {
        List ret = new List(Types::Class);
        Map convertToListMap = new Map(Types::Integer, Types::Class);   // (SequenceNumber, HiGHPLanboardMenuItem)
        MapEnumerator sequenceMapEnumerator = new MapEnumerator(sequenceMap);

        while(sequenceMapEnumerator.moveNext())
        {
            LabelString currentLabel = sequenceMapEnumerator.currentKey();
            SequenceNumber currentSequenceNumber = sequenceMapEnumerator.currentValue();
            HiGHPlanBoardMenuItem currentMenuItem = menuItemsMap.lookup(currentLabel);

            convertToListMap.insert(currentSequenceNumber, currentMenuItem);
        }
        
        MapEnumerator convertToListMapEnumerator = new MapEnumerator(convertToListMap);

        while(convertToListMapEnumerator.moveNext())
        {
            HiGHPlanBoardMenuItem currentMenuItem = convertToListMapEnumerator.currentValue();
            ret.addEnd(currentMenuItem);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>move</Name>
				<Source><![CDATA[
    public void move(LabelString _menuItemLabel, SequenceNumber _newSequenceNum)
    {
        if(menuItemsMap.exists(_menuItemLabel))
        {
            HiGHPlanBoardMenuItem menuItem = menuItemsMap.lookup(_menuItemLabel);

            this.remove(_menuItemLabel);
            this.addAtPosition(menuItem, _newSequenceNum);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>