<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRPurchPackingSlipJournalCreateClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(PurchPackingSlipJournalCreate))]
public final class DNRPurchPackingSlipJournalCreateClass_Extension
{
    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkLedgerPeriod</Name>
				<Source><![CDATA[
    protected boolean checkLedgerPeriod()
    {
        boolean ret = next checkLedgerPeriod();

        boolean ok = true;
        RecId calendarRecId = CompanyInfoHelper::fiscalCalendarRecId();

        if (vendParameters.PostPackingSlip
        // Subrental packing slip is never posted to the ledger
        && purchParmTable.purchTable().PurchaseType != PurchaseType::RORSubRental)
        {
            ok = LedgerFiscalCalendar::checkLedgerPeriodDateModule(calendarRecId,this.updateDate(),SysModule::Purch);
        }
        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkJournal</Name>
				<Source><![CDATA[
    public boolean checkJournal()
    {
        boolean ret = next checkJournal();

        // RLAM - We assume this works because the super of checkJournal always returns true.
        if (!ret)
        {
            if (this.checkLedgerPeriod())
            {
                ret = (this.RORSkipPackingSlipCheck() || purchParmTable.vendTable_InvoiceAccount().checkPackingSlip(purchParmTable.Num,purchParmTable.TransDate));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORSkipPackingSlipCheck</Name>
				<Source><![CDATA[
    // extension methods

    private boolean RORSkipPackingSlipCheck()
    {
        boolean ret;
        CustPackingSlipJour custPackingSlipJour;
    
        if (PurchParameters::find().CheckPackingSlip != ReuseVoucher::AcceptDuplicate
        && purchTable.InterCompanyOriginalSalesId)
        {
            changeCompany(purchTable.InterCompanyCompanyId ? purchTable.InterCompanyCompanyId : purchTable.dataAreaId)
            {
                select firstOnly PackingSlipId from custPackingSlipJour
                order by RecId desc
                where custPackingSlipJour.SalesId == purchTable.InterCompanyOriginalSalesId;
            }
    
            if (custPackingSlipJour.PackingSlipId == purchParmTable.Num)
            {
                ret = true;
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>