<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HiGHPlanboardContextMenuBuilder_GBOAPeriod</Name>
	<SourceCode>
		<Declaration><![CDATA[
class HiGHPlanboardContextMenuBuilder_GBOAPeriod extends HiGHPlanboardContextMenuBuilder
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>populate</Name>
				<Source><![CDATA[
    public void populate()
    {
        RefTableId entityTableId = sender.parmRowItemRefTableId();
        RefRecId entityRecId = sender.parmRowItemRefRecId();

        Object caller = callerFormRun as Object;
        BOBObjectAvailabilityForm callerClass = callerFormRun.getFormClass();
        FromDateTime selectionFromDateTime = sender.parmStartDateTime();
        ToDateTime selectionToDateTime = sender.parmEndDateTime();
        callerClass.setSelectionFromDateTime(selectionFromDateTime);
        callerClass.setSelectionToDateTime(selectionToDateTime);

        if(selectionFromDateTime > selectionToDateTime) // swap dates
        {
            TransDateTime placeholder = selectionFromDateTime;
            selectionFromDateTime = selectionToDateTime;
            selectionToDateTime = placeholder;
        }

        if(entityTableId == tableNum(BOBObjectTable))
        {
            BOBObjectView objectView;

            select firstOnly ObjectId, InventSerialId, Category, FirstOnRentDate, LastOnRentDate, PhysicalOwner, DepotStartDate, DepotEndDate from objectView
            where objectView.RecId == entityRecId;

            FromDate selectionFromDate = DateTimeUtil::date(selectionFromDateTime);
            ToDate selectionToDate = DateTimeUtil::date(selectionToDateTime);
            BOBObjectAvailabilitySettings settings = BOBObjectAvailabilitySettings::findOrCreate();

            #DNRConstants

            if(objectView.Category == BOBObjectCategory::External)
            {
                BOBObjectTable objectTable;

                select firstOnly createdDateTime from objectTable
                where objectTable.ObjectId == objectView.ObjectId
                &&    objectView.Category == BOBObjectCategory::External;

                if(objectTable.createdDateTime && DateTimeUtil::applyTimeZoneOffset(objectTable.createdDateTime, DateTimeUtil::getUserPreferredTimeZone()) <= selectionFromDateTime)
                {
                    menuItemCollection.addEnd(HiGHPlanBoardMenuItem::newField("@DNR6701", true, #CreateWorkOrder));
                }
                else
                {
                    menuItemCollection.addEnd(HiGHPlanBoardMenuItem::newField(strFmt("@DNR8471", objectView.ObjectId, objectView.InventSerialId)));
                }
            }
            else if(objectView.PhysicalOwner
                &&  objectView.FirstOnRentDate
                &&  selectionFromDateTime >= DateTimeUtil::newDateTime(objectView.FirstOnRentDate, 0)
                &&  (!objectView.LastOnRentDate || selectionToDateTime <= DateTimeUtil::newDateTime(objectView.LastOnRentDate, #INVTimeMax))
                &&  (!settings.Depot || (objectView.DepotStartDate <= selectionFromDate && (!objectView.DepotEndDate || objectView.DepotEndDate >= selectionToDate))))
            {
                menuItemCollection.addEnd(HiGHPlanBoardMenuItem::newField("@DNR5971", true, #CreateRentalQuotation));
                menuItemCollection.addEnd(HiGHPlanBoardMenuItem::newField("@DNR916", true, #CreateRentalOrder));
                menuItemCollection.addEnd(HiGHPlanBoardMenuItem::newField("@DNR6701", true, #CreateWorkOrder));
            }
            else
            {
                menuItemCollection.addEnd(HiGHPlanBoardMenuItem::newField(strFmt("@DNR8471", objectView.ObjectId, objectView.InventSerialId)));
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>