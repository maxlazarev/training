<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRInterCompanySyncSalesLineTypeClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(InterCompanySyncSalesLineType))]
public final class DNRInterCompanySyncSalesLineTypeClass_Extension
{
    private InventDim salesLineOrigInventDim;

    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>skipSynchronization</Name>
				<Source><![CDATA[
    protected boolean skipSynchronization()
    {
        boolean isRentalDirectDelivery;

        boolean ret = next skipSynchronization();

        if ((salesTable.InterCompanyDirectDelivery || salesTable.InterCompanyDirectDeliveryOrig)
        &&  salesTable.SalesType == SalesType::RORRental)
        {
            isRentalDirectDelivery = true;
        }
    
        if (isRentalDirectDelivery
        // never create supplementary item line across companies
        &&  !salesLine.InterCompanyInventTransId
        &&  salesLine.RORLineType != RORLineType::Normal)
        {
            //return true;
            ret = true;
        }
    
        // The body of the previous if-statement said 'return true;', meaning that we do not want to execute the subsequent logic.
        // I have therefore made the statement 'salesLineOrigInventDim = salesLine.orig().inventDim();' conditional. The condition
        // is the negation of the condition in the previous if-statement.  
        if (!isRentalDirectDelivery
        ||  salesLine.InterCompanyInventTransId
        ||  salesLine.RORLineType == RORLineType::Normal)
        {
            salesLineOrigInventDim = salesLine.orig().inventDim();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchaseOrderLineData</Name>
				<Source><![CDATA[
    protected void setPurchaseOrderLineData()
    {
        next setPurchaseOrderLineData();

        if (create || salesLine.fieldChanged(fieldNum(SalesLine, RORLineType)))
        {
            axPurchLine.parmRORLineType(salesLine.RORLineType);
        }
    
        if (create || salesLine.fieldChanged(fieldNum(SalesLine, RORTradeType)))
        {
            axPurchLine.parmRORTradeType(axPurchLine.purchLine().inventTable().RORGetItemTradeType((salesLine.RORTradeType == RORTradeType::SalesPurch) ? RORTradeType::SalesPurch : RORTradeType::SubRental));
        }
    
        if (create || salesLine.fieldChanged(fieldNum(SalesLine, RORKitComponentType)))
        {
            axPurchLine.parmRORKitComponentType(salesLine.RORKitComponentType);
        }
    
        if (create || salesLine.fieldChanged(fieldNum(SalesLine, INVRentalModeId)))
        {
            axPurchLine.parmINVRentalModeId(salesLine.INVRentalModeId);
        }
    
        if (create || salesLine.fieldChanged(fieldNum(SalesLine, INVRateMultiplierTier)))
        {
            axPurchLine.parmINVRateMultiplierTier(salesLine.INVRateMultiplierTier);
        }

        if (create || salesLine.fieldChanged(fieldNum(SalesLine, INVInvoiceProfileId)))
        {
            axPurchLine.parmINVInvoiceProfileId(salesLine.INVInvoiceProfileId);
        }

        if (create || salesLine.fieldChanged(fieldNum(SalesLine, DNRCalendarId)))
        {
            axPurchLine.parmDNRCalendarId(salesLine.DNRCalendarId);
        }

        if (create || salesLine.fieldChanged(fieldNum(SalesLine, RORPriceTimeUnit)))
        {
            axPurchLine.parmRORPriceTimeUnit(salesLine.RORPriceTimeUnit);
        }

        if (create || salesLine.fieldChanged(fieldNum(SalesLine, ItemId)))
        {
            axPurchLine.parmRORPriceTimeUnit(salesLine.RORPriceTimeUnit);
        }

        if (create || salesLine.fieldChanged(fieldNum(SalesLine, BOBRentalTypeIdRequested)))
        {
            axPurchLine.parmBOBRentalTypeId(salesLine.BOBRentalTypeIdRequested);
        }
       
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventoryDimensions</Name>
				<Source><![CDATA[
    protected void setInventoryDimensions()
    {
        next setInventoryDimensions();

        // assign the same object to original rental order line and IC sub rental skipping validation as object exists in other company.
        if (salesLine.RORTradeType == RORTradeType::Rental 
        &&  salesLineInventDim.inventSerialId != axPurchLine.axInventDim().inventDim().InventSerialId)
        {
            axPurchLine.axInventDim().parmInventSerialId(salesLineInventDim.inventSerialId);
            axPurchLine.axInventDim().setInventSerialId();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>recalcPricingInfo</Name>
				<Source><![CDATA[
    protected void recalcPricingInfo()
    {
        next recalcPricingInfo();

        axPurchLine.parmRORRentalGrossAmount(purchLineLocal.RORRentalGrossAmount);
        axPurchLine.parmRORIsPriceFixed(purchLineLocal.RORIsPriceFixed);
        axPurchLine.parmRORIsPriceNet(purchLineLocal.RORIsPriceNet);
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyModifiedPricingFieldsFromPurchLine</Name>
				<Source><![CDATA[
    protected void copyModifiedPricingFieldsFromPurchLine()
    {
        if (create || salesLine.fieldChanged(fieldNum(SalesLine, RORRentalGrossAmount)))
        {
            axPurchLine.parmRORRentalGrossAmount(salesLine.RORRentalGrossAmount);
        }
        else
        {
            axPurchLine.parmRORRentalGrossAmount(axPurchLine.purchLine().RORRentalGrossAmount);
        }
        
        next copyModifiedPricingFieldsFromPurchLine();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>