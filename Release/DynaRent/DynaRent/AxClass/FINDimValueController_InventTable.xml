<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FINDimValueController_InventTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
class FINDimValueController_InventTable extends FINDimValueController
{
    InventTable         callerInventTable;
    BOBObjectSubGroupId objSubGroupId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findItemGroup</Name>
				<Source><![CDATA[
    protected FINDimValueResult findItemGroup()
    {
        return FINDimValueResult::constructValue(callerInventTable.itemGroupId());
    }

]]></Source>
			</Method>
			<Method>
				<Name>findObjSubGroupId</Name>
				<Source><![CDATA[
    protected FINDimValueResult findObjSubGroupId()
    {
        return FINDimValueResult::constructValue(objSubGroupId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDescription</Name>
				<Source><![CDATA[
    protected Description getDescription()
    {
        return callerInventTable.NameAlias;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDimensionFieldId</Name>
				<Source><![CDATA[
    protected FieldId getDimensionFieldId()
    {
        return fieldNum(InventTable, DefaultDimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(InventTable _inventTable)
    {
        EcoResProduct   ecoResProduct;
        BOBRentalType   rentalType;
              
        super(_inventTable);
        callerInventTable = _inventTable;
       
        select firstonly ObjectSubGroupId from rentalType
            exists join ecoResProduct
            where ecoResProduct.BOBRentalTypeId == rentalType.RentalTypeId
            &&    ecoResProduct.RecId == _inventTable.Product;
        
        objSubGroupId = rentalType.ObjectSubGroupId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>