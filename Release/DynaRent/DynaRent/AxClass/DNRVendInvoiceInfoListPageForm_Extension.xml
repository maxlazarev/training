<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRVendInvoiceInfoListPageForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(VendInvoiceInfoListPage))]
public final class DNRVendInvoiceInfoListPageForm_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setButtonAccessMultiSelect</Name>
				<Source><![CDATA[
    void setButtonAccessMultiSelect()
    {
        next setButtonAccessMultiSelect();

        VendInvoiceInfoListPageMultiSelect vendInvoiceInfoListPageMultiSelect = VendInvoiceInfoListPageMultiSelect::determineMultiSelectState(vendInvoiceInfoTable_ds, VendInvoiceInfoTable, vendInvoiceListPageState);
        if (vendInvoiceInfoListPageMultiSelect.parmRecordsMarked())
        {
            boolean shouldBeEnabled = vendInvoiceInfoListPageMultiSelect.parmShouldBeEnabled();
            boolean isInvoiceOpen = vendInvoiceInfoListPageMultiSelect.parmIsInvoiceOpen();
            boolean crossCompaniesMarked = vendInvoiceInfoListPageMultiSelect.parmCrossCompaniesMarked();
            boolean inWorkflowReviewOrRejected = vendInvoiceInfoListPageMultiSelect.parmInWorkflowReviewOrRejected();
            boolean isInvoiceFromPool = vendInvoiceInfoListPageMultiSelect.DNRParmIsInvoiceFromPool();
            boolean hasIncompleteWorkflowStatus = vendInvoiceInfoListPageMultiSelect.DNRParmHasIncompleteWorkflowStatus();

            post.enabled(shouldBeEnabled && !isInvoiceFromPool && !hasIncompleteWorkflowStatus);
            vendInvoiceInfoTable_ds.allowDelete(shouldBeEnabled && !inWorkflowReviewOrRejected && !isInvoiceFromPool);
            Matching.enabled(vendInvoiceInfoTable.INVPurchaseType != PurchaseType::RORSubRental);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>