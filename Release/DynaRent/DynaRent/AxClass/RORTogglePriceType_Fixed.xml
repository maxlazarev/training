<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RORTogglePriceType_Fixed</Name>
	<SourceCode>
		<Declaration><![CDATA[
class RORTogglePriceType_Fixed extends RORTogglePriceType
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canRecalculatePrices</Name>
				<Source><![CDATA[
    protected boolean canRecalculatePrices(RORRentalLine _rentalLine)
    {
        return !_rentalLine.IsPriceFixed && _rentalLine.RORRentalLine::canUpdateKitPricing();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        if (rentalLine.RORGetParentLine().IsPriceFixed)
        {
            error("@DNR10092");
        }
        else
        {
            super();
        }
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPriceType</Name>
				<Source><![CDATA[
    protected void setPriceType(RORRentalLine _rentalLine)
    {
        // Check if supplied line is already fixed.  If so then we should undo selection for all prices
        // on this kit, otherwise fix them.
        _rentalLine.IsPriceFixed = !rentalLine.IsPriceFixed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static server RORTogglePriceType construct(Common _common)
    {
        return new RORTogglePriceType_Fixed(_common);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateButtonDesign</Name>
				<Source><![CDATA[
    public client static void updateButtonDesign(FormFunctionButtonControl _toggleButton, RORRentalLine _rentalLine)
    {
        if (!_rentalLine)
        {
            _toggleButton.enabled(false);
        }
        else
        {
            _toggleButton.enabled(true);
            _toggleButton.text(_rentalLine.isPriceFixed ? "@DNR389" : "@DNR385");
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>