<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WPPAddItemRequirements</Name>
	<SourceCode>
		<Declaration><![CDATA[
class WPPAddItemRequirements
{
    Common          callerCommon;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createItemReqFromWorkOrder</Name>
				<Source><![CDATA[
    private void createItemReqFromWorkOrder()
    {
        WPPWorkOrderTable   workOrderTable;
        WPPWorkOrderLine    workOrderLine;
    
        workOrderTable = callerCommon as WPPWorkOrderTable;
    
        select firstOnly RecId, ItemReqAdded from workOrderLine
        where workOrderLine.WorkOrderId == workOrderTable.WorkOrderId
        &&    workOrderLine.ItemReqAdded;
    
        if (this.mustCreateItemReq(workOrderLine))
        {
            ttsBegin;
            while select  workOrderLine
            where workOrderLine.WorkOrderId == workOrderTable.WorkOrderId
            {
                workOrderLine.createItemReq(true);
            }
            ttsCommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createItemReqFromWorkOrderLine</Name>
				<Source><![CDATA[
    private void createItemReqFromWorkOrderLine()
    {
        WPPWorkOrderLine    workOrderLine;
    
        workOrderLine = callerCommon as WPPWorkOrderLine;
    
        if (this.mustCreateItemReq(workOrderLine))
        {
            workOrderLine.selectForUpdate(true);
            workOrderLine.createItemReq(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createItemReqFromWorkOrderLineListPage</Name>
				<Source><![CDATA[
    private void createItemReqFromWorkOrderLineListPage()
    {
        WPPWorkOrderLineListPageView    workOrderLineListPageView;
        WPPWorkOrderLine                workOrderLine;
    
        workOrderLineListPageView = callerCommon as WPPWorkOrderLineListPageView;
        workOrderLine = WPPWorkOrderLine::findRecId(workOrderLineListPageView.WorkOrderLineRecId, true);
    
        if (this.mustCreateItemReq(workOrderLine))
        {
            workOrderLine.createItemReq(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustCreateItemReq</Name>
				<Source><![CDATA[
    private boolean mustCreateItemReq(WPPWorkOrderLine _workOrderLine)
    {
        boolean ret;
    
        ret = true;
    
        if (_workOrderLine
        &&  _workOrderLine.ItemReqAdded)
        {
            ret = Box::yesNo("@DNR8399", DialogButton::Yes) == DialogButton::Yes;
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCallerCommon</Name>
				<Source><![CDATA[
    public Common parmCallerCommon(Common _callerCommon = callerCommon)
    {
        callerCommon = _callerCommon;
    
        return callerCommon;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        switch (callerCommon.TableId)
        {
            case tableNum(WPPWorkOrderTable):
                this.createItemReqFromWorkOrder();
                break;
    
            case tableNum(WPPWorkOrderLine):
                this.createItemReqFromWorkOrderLine();
                break;
    
            case tableNum(WPPWorkOrderLineListPageView):
                this.createItemReqFromWorkOrderLineListPage();
                break;
    
            default:
                throw error(Error::missingRecord(classStr(WPPAddItemRequirements)));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static WPPAddItemRequirements construct()
    {
        return new WPPAddItemRequirements();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        WPPAddItemRequirements          addItemRequirements;
        FormDataSource                  formDataSource;
        WPPWorkOrderLineListPageView    workOrderLineListPageViewFind;
    
        if (!_args.dataset()
        ||  (_args.dataset() != tableNum(WPPWorkOrderTable)
        &&   _args.dataset() != tableNum(WPPWorkOrderLine)
        &&   _args.dataset() != tableNum(WPPWorkOrderLineListPageView)))
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }
    
        addItemRequirements = WPPAddItemRequirements::construct();
        addItemRequirements.parmCallerCommon(_args.record());
        addItemRequirements.run();
    
        if (FormDataUtil::isFormDataSource(_args.record()))
        {
            formDataSource = FormDataUtil::getFormDataSource(_args.record());
    
            if (_args.dataset() == tableNum(WPPWorkOrderLineListPageView))
            {
                workOrderLineListPageViewFind.data(_args.record());
                formDataSource.positionToRecord(workOrderLineListPageViewFind);
            }
            else
            {
                formDataSource.research(true);
                formDataSource.refresh();
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>