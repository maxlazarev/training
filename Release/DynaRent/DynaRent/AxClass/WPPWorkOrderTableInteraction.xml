<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WPPWorkOrderTableInteraction</Name>
	<SourceCode>
		<Declaration><![CDATA[
class WPPWorkOrderTableInteraction extends PageInteraction
{
    Page                                page;

    WPPWorkOrderTable                   workOrderTable;
    WPPWorkOrderLine                    workOrderLine;
    WPPWorkOrderStatusRegistration      workOrderStatusRegistration;

    WPPWorkOrderTableInteractionHelper  workOrderTableInteractionHelper;

    SecurityRights                      rights;

    // The following variable is only here to decrease compile time as the formControlStr intrinsic method will be executed many times.
    str macroFormControlStr;
    #localmacro.SetEnabled
        macroFormControlStr = %1;
        if (page.actionPaneControlVisible(macroFormControlStr))
        {
            page.actionPaneControlEnabled(macroFormControlStr, %2);
        }
    #endmacro
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>enableHeaderActions</Name>
				<Source><![CDATA[
    public void enableHeaderActions()
    {
        workOrderTableInteractionHelper.initHeaderActions(workOrderTable);
    
        this.enableHeaderInquiryActions();
        this.enableHeaderBillActions();
        this.enableHeaderMaintenanceActions();
        this.enableHeaderFunctionsActions();
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableHeaderBillActions</Name>
				<Source><![CDATA[
    private void enableHeaderBillActions()
    {
        #SetEnabled(formControlStr(WPPWorkOrderTable, CtrlProposal), workOrderTableInteractionHelper.parmWorkOrderHasProjInvoiceProjId() && workOrderTableInteractionHelper.parmWorkOrderHasProjInvoiceProposal())
        #SetEnabled(formControlStr(WPPWorkOrderTable, CtrlInvoices), workOrderTableInteractionHelper.parmWorkOrderHasProjInvoiceProjId() && workOrderTableInteractionHelper.parmWorkOrderHasProjInvoiceJournal())
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableHeaderInquiryActions</Name>
				<Source><![CDATA[
    protected void enableHeaderInquiryActions()
    {
        #SetEnabled(formControlStr(WPPWorkOrderTable, WPPViewDetails), workOrderTableInteractionHelper.parmConnectedToOrigin())
        #SetEnabled(formControlStr(WPPWorkOrderTable, BOBObjectTableForm), workOrderTableInteractionHelper.parmButtonBusinessObjectEnabled())
        #SetEnabled(formControlStr(WPPWorkOrderTable, BOBMaintenanceHistory), workOrderTable.BOBObjectTableRecId)
        #SetEnabled(formControlStr(WPPWorkOrderTable, BOBObjectMaintenancePlan), workOrderTableInteractionHelper.parmButtonObjectMaintenancePlanEnabled())
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableHeaderMaintenanceActions</Name>
				<Source><![CDATA[
    private void enableHeaderMaintenanceActions()
    {
        #SetEnabled(formControlStr(WPPWorkOrderTable, WPPAddItemRequirements), workOrderTableInteractionHelper.parmButtonAddItemReqEnabled())
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableHeaderFunctionsActions</Name>
				<Source><![CDATA[
    private void enableHeaderFunctionsActions()
    {
        #SetEnabled(formControlStr(WPPWorkOrderTable, ChangeProjectContract), workOrderTableInteractionHelper.parmButtonChangeProjectContract())
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableLineActions</Name>
				<Source><![CDATA[
    public void enableLineActions()
    {
        workOrderTableInteractionHelper.initLineActions(workOrderLine, workOrderStatusRegistration);
    
        this.enableLineJournalActions();
        this.enableLineInquiryActions();
        this.enableLineStatusActions();
        this.enableLineItemTaskActions();
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableLineInquiryActions</Name>
				<Source><![CDATA[
    private void enableLineInquiryActions()
    {
        #SetEnabled(formcontrolstr(WPPWorkOrderTable, WPPWorkOrderLineSubTask), workOrderTable.BOBObjectTableRecId)
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableLineItemTaskActions</Name>
				<Source><![CDATA[
    private void enableLineItemTaskActions()
    {
        #SetEnabled(formcontrolstr(WPPWorkOrderTable, mbLinesItemTasks), workOrderTableInteractionHelper.parmMenuButtonItemTasksEnabled())
    
        if (workOrderTableInteractionHelper.parmMenuButtonItemTasksEnabled())
        {
            #SetEnabled(formcontrolstr(WPPWorkOrderTable, ctrlProjItemReq), workOrderTableInteractionHelper.parmButtonProjItemReqEnabled())
            #SetEnabled(formcontrolstr(WPPWorkOrderTable, ctrlSalesOrderTable), workOrderTableInteractionHelper.parmButtonSalesOrderTableEnabled())
            #SetEnabled(formcontrolstr(WPPWorkOrderTable, ctrlPurchOrderTable), workOrderTableInteractionHelper.parmButtonPurchOrderTableEnabled())
            #SetEnabled(formcontrolstr(WPPWorkOrderTable, ctrlProdTable), workOrderTableInteractionHelper.parmButtonProdTableEnabled())
            #SetEnabled(formcontrolstr(WPPWorkOrderTable, ctrlPurchReqTable), workOrderTableInteractionHelper.parmButtonPurchReqTableEnabled())
            #SetEnabled(formcontrolstr(WPPWorkOrderTable, ctrlPurchRFQCaseTable), workOrderTableInteractionHelper.parmButtonPurchRFQCaseTableEnabled())
            #SetEnabled(formcontrolstr(WPPWorkOrderTable, ctrlSalesAgreementDetails), workOrderTableInteractionHelper.parmButtonSalesAgreementDetailsEnabled())
            #SetEnabled(formcontrolstr(WPPWorkOrderTable, ctrlPurchAgreementDetails), workOrderTableInteractionHelper.parmButtonPurchAgreementDetailsEnabled())
    
            #SetEnabled(formcontrolstr(WPPWorkOrderTable, ctrlProjItemReqEdit), workOrderTableInteractionHelper.parmButtonProjItemReqEditEnabled())
            #SetEnabled(formcontrolstr(WPPWorkOrderTable, ctrlSalesOrderTableEdit), workOrderTableInteractionHelper.parmButtonSalesOrderTableEditEnabled())
            #SetEnabled(formcontrolstr(WPPWorkOrderTable, ctrlPurchOrderTableEdit), workOrderTableInteractionHelper.parmButtonPurchOrderTableEditEnabled())
            #SetEnabled(formcontrolstr(WPPWorkOrderTable, ctrlProdTableEdit), workOrderTableInteractionHelper.parmButtonProdTableEditEnabled())
            #SetEnabled(formcontrolstr(WPPWorkOrderTable, ctrlPurchReqTableEdit), workOrderTableInteractionHelper.parmButtonPurchReqTableEditEnabled())
            #SetEnabled(formcontrolstr(WPPWorkOrderTable, ctrlPurchRFQCaseTableEdit), workOrderTableInteractionHelper.parmButtonPurchRFQCaseTableEditEnabled())
            #SetEnabled(formcontrolstr(WPPWorkOrderTable, ctrlSalesAgreementDetailsEdit), workOrderTableInteractionHelper.parmButtonSalesAgreementDetEditEnabled())
            #SetEnabled(formcontrolstr(WPPWorkOrderTable, ctrlPurchAgreementDetailsEdit), workOrderTableInteractionHelper.parmButtonPurchAgreementDetEditEnabled())
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableLineJournalActions</Name>
				<Source><![CDATA[
    private void enableLineJournalActions()
    {
        #SetEnabled(formcontrolstr(WPPWorkOrderTable, mbLinesJournals), workOrderTableInteractionHelper.parmButtonJournalsEnabled())
        #SetEnabled(formcontrolstr(WPPWorkOrderTable, HourEntry), workOrderTableInteractionHelper.parmButtonHourEntryEnabled())
        #SetEnabled(formcontrolstr(WPPWorkOrderTable, ExpenseEntry), workOrderTableInteractionHelper.parmButtonExpenseEntryEnabled())
        #SetEnabled(formcontrolstr(WPPWorkOrderTable, ItemJournalEntry), workOrderTableInteractionHelper.parmButtonItemJournalEntryEnabled())
        #SetEnabled(formcontrolstr(WPPWorkOrderTable, FeeEntry), workOrderTableInteractionHelper.parmButtonFeeEntryEnabled())
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableLineStatusActions</Name>
				<Source><![CDATA[
    private void enableLineStatusActions()
    {
        #SetEnabled(formcontrolstr(WPPWorkOrderTable, WPPWorkOrderStatusUpdate_Created), workOrderTableInteractionHelper.parmButtonStatusCreatedEnabled())
        #SetEnabled(formcontrolstr(WPPWorkOrderTable, WPPWorkOrderStatusUpdate_Confirmed), workOrderTableInteractionHelper.parmButtonStatusConfirmedEnabled())
        #SetEnabled(formcontrolstr(WPPWorkOrderTable, WPPWorkOrderStatusUpdate_Planned), workOrderTableInteractionHelper.parmButtonStatusPlannedEnabled())
        #SetEnabled(formcontrolstr(WPPWorkOrderTable, WPPWorkOrderStatusUpdate_Released), workOrderTableInteractionHelper.parmButtonStatusReleasedEnabled())
        #SetEnabled(formcontrolstr(WPPWorkOrderTable, WPPWorkOrderStatusUpdate_InProgress), workOrderTableInteractionHelper.parmButtonStatusInProgressEnabled())
        #SetEnabled(formcontrolstr(WPPWorkOrderTable, WPPWorkOrderStatusUpdate_Completed), workOrderTableInteractionHelper.parmButtonStatusCompletedEnabled())
        #SetEnabled(formcontrolstr(WPPWorkOrderTable, WPPWorkOrderStatusUpdate_CheckedWorkshop), workOrderTableInteractionHelper.parmButtonStatusCheckedWorkshopEnabled())
        #SetEnabled(formcontrolstr(WPPWorkOrderTable, WPPWorkOrderStatusUpdate_CheckedAdmin), workOrderTableInteractionHelper.parmButtonStatusCheckedAdminEnabled())
        #SetEnabled(formcontrolstr(WPPWorkOrderTable, WPPWorkOrderStatusUpdate_Invoiced), workOrderTableInteractionHelper.parmButtonStatusInvoicedEnabled())
        #SetEnabled(formcontrolstr(WPPWorkOrderTable, WPPWorkOrderStatusUpdate_Closed), workOrderTableInteractionHelper.parmButtonStatusClosedEnabled())
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    private void init()
    {
        WPPWorkOrderStatusGroup workOrderStatusGroup;
        WPPWorkOrderTaskTable   workOrderTaskTable;
    
        page = this.page();
    
        workOrderTable = page.activeRecord('WorkOrderTable');
        workOrderLine  = page.activeRecord('WorkOrderLine');
    
        rights = SecurityRights::construct();
    
        workOrderTableInteractionHelper = WPPWorkOrderTableInteractionHelper::construct();
    
        select firstOnly workOrderStatusRegistration
        where workOrderStatusRegistration.Status == workOrderLine.Status
            exists join workOrderStatusGroup
            where workOrderStatusGroup.WorkOrderStatusGroupId == workOrderStatusRegistration.WorkOrderStatusGroupId
                join TableId from workOrderTaskTable
                where workOrderTaskTable.WorkOrderStatusGroupId == workOrderStatusGroup.WorkOrderStatusGroupId
                &&    workOrderTaskTable.TaskId                 == workOrderLine.TaskId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>workOrderLine_DS_selectionChanged</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Enables the header action menu item buttons when the active work order header has been updated.
    /// </summary>
    [FormDataSourceInteractionAttribute('workOrderLine', 'selectionChanged')]
    public void workOrderLine_DS_selectionChanged()
    {
        this.init();
    
        this.enableLineActions();
    }

]]></Source>
			</Method>
			<Method>
				<Name>workOrderTable_DS_selectionChanged</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Enables the header action menu item buttons when the active work order header has been updated.
    /// </summary>
    [FormDataSourceInteractionAttribute('WorkOrderTable', 'selectionChanged')]
    public void workOrderTable_DS_selectionChanged()
    {
        this.init();
    
        this.enableHeaderActions();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>