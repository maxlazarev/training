<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRCustQuotationTransTable_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(tableStr(CustQuotationTrans))]
public final class DNRCustQuotationTransTable_Extension
{
    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromSalesQuotationLine</Name>
				<Source><![CDATA[
    void initFromSalesQuotationLine(SalesQuotationLine _salesQuotationLine)
    {
        next initFromSalesQuotationLine(_salesQuotationLine);

        this.RORTradeType = _salesQuotationLine.RORTradeType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORGetHeader</Name>
				<Source><![CDATA[
    // extension methods

    public RORRentalHeader RORGetHeader(boolean _forUpdate = false)
    {
        return this.custQuotationJour(_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORGetParentLine</Name>
				<Source><![CDATA[
    public RORRentalLine RORGetParentLine(boolean _forUpdate = false)
    {
        CustQuotationTrans custQuotationTrans;
        ;
    
        if (this.RORParentLineRecId)
        {
            custQuotationTrans.selectForUpdate(_forUpdate);
    
            select firstonly custQuotationTrans
            where custQuotationTrans.SalesId        == this.SalesId
            &&    custQuotationTrans.QuotationDate  == this.QuotationDate
            &&    custQuotationTrans.QuotationId    == this.QuotationId
            &&    custQuotationTrans.RecId          == this.RORParentLineRecId;
    
            return custQuotationTrans;
        }
        else
        {
            return null;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>