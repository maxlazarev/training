<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRProjJournalFormTrans_HourClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(ProjJournalFormTrans_Hour))]
public final class DNRProjJournalFormTrans_HourClass_Extension
{
    private boolean copiedFromOriginal;

    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>fieldModifiedActivityIdPost</Name>
				<Source><![CDATA[
    public void fieldModifiedActivityIdPost()
    {
        this.WPPCopyOriginalLine(projJournalTrans.ActivityNumber);

        next fieldModifiedActivityIdPost();
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNRParmCopiedFromOriginal</Name>
				<Source><![CDATA[
    // extension methods

    public boolean DNRParmCopiedFromOriginal(boolean _copiedFromOriginal = copiedFromOriginal)
    {
        copiedFromOriginal = _copiedFromOriginal;
        return copiedFromOriginal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>WPPCopyOriginalLine</Name>
				<Source><![CDATA[
    private void WPPCopyOriginalLine(ProjActivityNumber _activityNumber = '', ProjCategoryId _categoryId = '')
    {
        WPPWorkOrderLineHourTransLink   workOrderLineHourTransLinkOrig, workOrderLineHourTransLinkCur;
        ProjJournalTrans                projJournalTransOrig;
    
        copiedFromOriginal = false;
    
        workOrderLineHourTransLinkOrig = WPPWorkOrderLineHourTransLink::findOriginalTransLinkFromJournalTrans(projJournalTrans.JournalId,
                                                                                                              projJournalTrans.RecId,
                                                                                                              _activityNumber,
                                                                                                              _categoryId);
    
        if (!workOrderLineHourTransLinkOrig && projJournalTrans.RecId)
        {
            select firstOnly workOrderLineHourTransLinkOrig
                exists join workOrderLineHourTransLinkCur
                where workOrderLineHourTransLinkCur.WorkOrderLineRecId != 0
                &&    workOrderLineHourTransLinkCur.WorkOrderLineRecId == workOrderLineHourTransLinkOrig.WorkOrderLineRecId
                &&    workOrderLineHourTransLinkCur.RecId != workOrderLineHourTransLinkOrig.RecId
                &&    workOrderLineHourTransLinkCur.RefTableId == projJournalTrans.TableId
                &&    workOrderLineHourTransLinkCur.RefRecId == projJournalTrans.RecId;
        }
    
        if (workOrderLineHourTransLinkOrig)
        {
            select firstOnly projJournalTransOrig
            where projJournalTransOrig.RecId == workOrderLineHourTransLinkOrig.RefRecId;
    
            projJournalTrans.RORCopyAll = NoYes::No;
            projJournalTrans.initFromProjJournalTrans(projJournalTransOrig);
            // parmSalesPrice is called later in the process and this will prevent it set to the original price
            this.parmSalesPrice(projJournalTrans.SalesPrice);
    
            copiedFromOriginal = true;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>WPPFieldModifiedBreakQtyPost</Name>
				<Source><![CDATA[
    public void WPPFieldModifiedBreakQtyPost()
    {
        projJournalTrans.setQtyFromToTime();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>