<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRContactPersonLookupForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(ContactPersonLookup))]
public final class DNRContactPersonLookupForm_Extension
{
    private TableGroupAll       subscriptionType;
    private RAGRelationAccount  subscriber;

    // extension methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>RAGApplyRangeRole</Name>
				<Source><![CDATA[
    public void RAGApplyRangeRole(FormDataSource _dataSource, RORContactPersonRoleFilter _roleFilter)
    {
        if(_roleFilter != RORContactPersonRoleFilter::All)
        {
            QueryBuildRange qbr = _dataSource.query().dataSourceTable(tableNum(ContactPerson)).addRange(fieldNum(ContactPerson, RORIsOperator));
            qbr.value(SysQuery::value(_roleFilter == RORContactPersonRoleFilter::Operator ? NoYes::Yes : NoYes::No));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>RAGApplyRangeSubscription</Name>
				<Source><![CDATA[
    public void RAGApplyRangeSubscription(FormDataSource _dataSource)
    {
        if(subscriber)
        {
            QueryBuildDataSource qbdsBusRelTable = _dataSource.query().dataSourceTable(tableNum(ContactPerson)).addDataSource(tableNum(smmBusRelTable));
            qbdsBusRelTable.relations(true);
            qbdsBusRelTable.joinMode(JoinMode::ExistsJoin);

            switch(subscriptionType)
            {
                case TableGroupAll::Table:
                    qbdsBusRelTable.addRange(fieldNum(smmBusRelTable, BusRelAccount)).value(subscriber);
                    break;

                case TableGroupAll::GroupId:
                    qbdsBusRelTable.addRange(fieldNum(smmBusRelTable, RAGBusRelGroupId)).value(subscriber);
                    break;

                default:
                    // do nothing
                    break;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>RAGParmSubscriber</Name>
				<Source><![CDATA[
    public RAGRelationAccount RAGParmSubscriber(RAGRelationAccount _subscriber = subscriber)
    {
        subscriber = _subscriber;
        return subscriber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RAGParmSubscriptionType</Name>
				<Source><![CDATA[
    public TableGroupAll RAGParmSubscriptionType(TableGroupAll _subscriptionType = subscriptionType)
    {
        subscriptionType = _subscriptionType;
        return subscriptionType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_ContactPersonDS_OnInitialized</Name>
				<Source><![CDATA[
    // event handler methods

    [FormDataSourceEventHandler(formDataSourceStr(ContactPersonLookup, ContactPerson), FormDataSourceEventType::Initialized)]
    public static void DNREvent_ContactPersonDS_OnInitialized(FormDataSource _sender, FormDataSourceEventArgs _eventArgs)
    {
        FormRun formRun         = _sender.formRun() as FormRun;
        Object  formRunObject   = formRun as Object;
        Args    formRunArgs     = formRun.args();

        if(formRunArgs && formRunArgs.parmEnumType() == enumNum(RORContactPersonRoleFilter))
        {
            RORContactPersonRoleFilter roleFilter = formRunArgs.parmEnum();

            if (formHasMethod(formRunObject, identifierStr(RAGApplyRangeRole))
            &&  roleFilter != RORContactPersonRoleFilter::All)
            {
                formRunObject.RAGApplyRangeRole(_sender, roleFilter);
            }
        }

        if (formHasMethod(formRunObject, identifierStr(RAGparmSubscriber))
        &&  formRunObject.RAGParmSubscriber())
        {
            formRunObject.RAGApplyRangeSubscription(_sender);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>