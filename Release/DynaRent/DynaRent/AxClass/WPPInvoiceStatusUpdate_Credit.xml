<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WPPInvoiceStatusUpdate_Credit</Name>
	<SourceCode>
		<Declaration><![CDATA[
class WPPInvoiceStatusUpdate_Credit extends WPPInvoiceStatusUpdate
{
    List                recordList;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getProjInvoiceTable</Name>
				<Source><![CDATA[
    private ProjInvoiceTable getProjInvoiceTable(TmpFrmVirtual  _tmpFrmVirtual)
    {
        ProjTable           projTable;
        ProjInvoiceTable    projInvoiceTable;
        ProjEmplTrans       projEmplTrans;
        ProjCostTrans       projCostTrans;
        ProjRevenueTrans    projRevenueTrans;
        ProjItemTrans       projItemTrans;
        ProjOnAccTrans      projOnAccTrans;
    
        switch (_tmpFrmVirtual.TableNum)
        {
            // project transactions
            case tablenum(ProjEmplTrans):
            case tablenum(ProjInvoiceEmpl):
                projEmplTrans    = ProjEmplTrans::find(_tmpFrmVirtual.Id);
                projTable        = ProjTable::find(projEmplTrans.ProjId);
                projInvoiceTable = ProjInvoiceTable::find(projTable.ProjInvoiceProjId);
                break;
    
            case tablenum(ProjInvoiceCost):
            case tablenum(ProjCostTrans):
                projCostTrans    = ProjCostTrans::find(_tmpFrmVirtual.Id);
                projTable        = ProjTable::find(projCostTrans.ProjId);
                projInvoiceTable = ProjInvoiceTable::find(projTable.ProjInvoiceProjId);
                break;
    
            case tablenum(ProjInvoiceRevenue):
            case tablenum(ProjRevenueTrans):
                projRevenueTrans = ProjRevenueTrans::find(_tmpFrmVirtual.Id);
                projTable        = ProjTable::find(projRevenueTrans.ProjId);
                projInvoiceTable = ProjInvoiceTable::find(projTable.ProjInvoiceProjId);
                break;
    
            case tablenum(ProjInvoiceItem):
            case tablenum(ProjItemTrans):
                projItemTrans    = ProjItemTrans::find(_tmpFrmVirtual.Id);
                projTable        = ProjTable::find(projItemTrans.ProjId);
                projInvoiceTable = ProjInvoiceTable::find(projTable.ProjInvoiceProjId);
                break;
    
            case tablenum(ProjInvoiceOnAcc):
            case tablenum(ProjOnAccTrans):
                projOnAccTrans   = ProjOnAccTrans::find(_tmpFrmVirtual.Id);
                projTable        = ProjTable::find(projOnAccTrans.ProjId);
                projInvoiceTable = ProjInvoiceTable::find(projTable.ProjInvoiceProjId);
                break;
    
            default:
                break;
        }
    
        return projInvoiceTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new()
    {
        //recordList = _args.object();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReferenceList</Name>
				<Source><![CDATA[
    public List parmReferenceList(List _recordList = recordList)
    {
        recordList = _recordList;
    
        return recordList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        ListEnumerator      enumerator = recordList.getEnumerator();
        TmpFrmVirtual       tmpFrmVirtual;
        ProjInvoiceTable    projInvoiceTable;
    
        while (enumerator.moveNext())
        {
            tmpFrmVirtual    = enumerator.current();
            projInvoiceTable = this.getProjInvoiceTable(tmpFrmVirtual);
    
            if (projInvoiceTable)
            {
                if (this.existOpenChargeable_Hour()
                ||  this.existOpenChargeable_Expense()
                ||  this.existOpenChargeable_Item()
                ||  this.existOpenChargeable_Fee()
                ||  this.existOpenChargeable_OnAccount())
                {
                    this.setInvoiceStatus(WPPInvoiceStatus::PartlyCharged, projInvoiceTable.projInvoiceProjId);
                }
                else
                if (projInvoiceTable.WPPInvoiceStatus != WPPInvoiceStatus::FullyCharged)
                {
                    this.setInvoiceStatus(WPPInvoiceStatus::FullyCharged, projInvoiceTable.projInvoiceProjId);
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>