<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RORBatchPrintInvoice</Name>
	<SourceCode>
		<Declaration><![CDATA[
abstract class RORBatchPrintInvoice extends DNRRunBaseBatchSRSPrintable
{
    QueryRun queryRun;

    #define.CurrentVersion(2)
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    public ClassDescription caption()
    {
        return "@DNR4643";
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmDefault</Name>
				<Source><![CDATA[
    public void initParmDefault()
    {
        super();
        queryRun = this.queryBuild();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion, printDestinationSettings.pack(), usePrintManagement, queryRun.pack()];
    }

]]></Source>
			</Method>
			<Method>
				<Name>printJournals</Name>
				<Source><![CDATA[
    protected abstract void printJournals()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryBuild</Name>
				<Source><![CDATA[
    protected abstract QueryRun queryBuild()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryRun</Name>
				<Source><![CDATA[
    public QueryRun queryRun()
    {
        return queryRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        if (dialog)
        {
            usePrintManagement = dialog.dialogForm().control(#UsePrintManagement).value();
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        this.printJournals();
    }

]]></Source>
			</Method>
			<Method>
				<Name>showQueryValues</Name>
				<Source><![CDATA[
    public boolean showQueryValues()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        Integer     version = RunBase::getVersion(packedClass);
        container   packedPrintDestinationSettings;
        container   packedQueryRun;
        ;
        switch (version)
        {
            case 1:
                [version, packedPrintDestinationSettings, packedQueryRun] = packedClass;
                if (packedPrintDestinationSettings)
                {
                    this.printSettings(new SRSPrintDestinationSettings(packedPrintDestinationSettings));
                }
                if (SysQuery::isPackedOk(packedQueryRun))
                {
                    queryRun = new QueryRun(packedQueryRun);
                }
                break;
            case #CurrentVersion:
                [version, packedPrintDestinationSettings, usePrintManagement, packedQueryRun] = packedClass;
                if (packedPrintDestinationSettings)
                {
                    this.printSettings(new SRSPrintDestinationSettings(packedPrintDestinationSettings));
                }
                if (SysQuery::isPackedOk(packedQueryRun))
                {
                    queryRun = new QueryRun(packedQueryRun);
                }
                break;
            default :
                return false;
        }
    
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>