<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRProjUnpostedTransListPageInteractionClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(ProjUnpostedTransListPageInteraction))]
public final class DNRProjUnpostedTransListPageInteractionClass_Extension
{
    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initializeQuery</Name>
				<Source><![CDATA[
    public void initializeQuery(Query _query)
    {
        Common                          externalRecord;
        QueryBuildDataSource            queryBuildDataSource;
        WPPWorkOrderTable               workOrderTable;
        WPPWorkOrderView                workOrderView;
        WPPWorkOrderLineListPageView    workOrderLineListPageView;

        if (this.listPage().listPageArgs() &&
            this.listPage().listPageArgs().externalRecord() &&
            this.listPage().listPageArgs().menuItemName() ==  menuitemDisplayStr(ProjUnpostedProjectTransactions))
        {
            externalRecord = this.listPage().listPageArgs().externalRecord();

            switch (externalRecord.TableId)
            {
                case tableNum(WPPWorkOrderTable):
                    workOrderTable = externalRecord as WPPWorkOrderTable;
                    queryBuildDataSource = _query.dataSourceTable(tablenum(ProjTable));
                    queryBuildDataSource = queryBuildDataSource.addDataSource(tableNum(WPPWorkOrderLine));
                    queryBuildDataSource.joinMode(JoinMode::ExistsJoin);
                    queryBuildDataSource.addLink(fieldNum(ProjTable, ProjId), fieldNum(WPPWorkOrderLine, ProjId));
                    queryBuildDataSource.addRange(fieldNum(WPPWorkOrderLine, WorkOrderId)).value(workOrderTable.WorkOrderId);
                    break;

                case tableNum(WPPWorkOrderView):
                    workOrderView = externalRecord as WPPWorkOrderView;
                    queryBuildDataSource = _query.dataSourceTable(tablenum(ProjTable));
                    queryBuildDataSource = queryBuildDataSource.addDataSource(tableNum(WPPWorkOrderLine));
                    queryBuildDataSource.joinMode(JoinMode::ExistsJoin);
                    queryBuildDataSource.addLink(fieldNum(ProjTable, ProjId), fieldNum(WPPWorkOrderLine, ProjId));
                    queryBuildDataSource.addRange(fieldNum(WPPWorkOrderLine, WorkOrderId)).value(workOrderView.WorkOrderId);
                    break;

                case tableNum(WPPWorkOrderLineListPageView):
                    workOrderLineListPageView = externalRecord as WPPWorkOrderLineListPageView;
                    queryBuildDataSource = _query.dataSourceTable(tablenum(ProjTable));
                    queryBuildDataSource = queryBuildDataSource.addDataSource(tableNum(WPPWorkOrderLine));
                    queryBuildDataSource.joinMode(JoinMode::ExistsJoin);
                    queryBuildDataSource.addLink(fieldNum(ProjTable, ProjId), fieldNum(WPPWorkOrderLine, ProjId));
                    queryBuildDataSource.addRange(fieldNum(WPPWorkOrderLine, WorkOrderId)).value(workOrderLineListPageView.WorkOrderId);
                    break;
            }
        }

        next initializeQuery(_query);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>