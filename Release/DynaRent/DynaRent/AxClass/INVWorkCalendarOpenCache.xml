<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>INVWorkCalendarOpenCache</Name>
	<SourceCode>
		<Declaration><![CDATA[
class INVWorkCalendarOpenCache
{
    // For each calendar Id, holds the start and end dates which the cache currently covers
    Map             mapCoveredRanges;
    Map             mapCalendarCache;
    DNRCalendarId   calendarIdCurrentCache;
    Map             mapDateCache; // Sub-cache of mapCalendarCache

    //Map         mapWorkingTimeCache; // Sub-cache of mapDateCache
    
    boolean     missingSetup;
    

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>chargedPeriodsPerDate</Name>
				<Source><![CDATA[
    public container chargedPeriodsPerDate(DNRCalendarId _calendarId,
                                           TransDate  _checkDate,
                                           TimeOfDay  _checkTime = 0,
                                           boolean    _startDate = false,
                                           boolean    _inMinutes = false,
                                           TimeOfDay  _checkTimeSecond = 0,
                                           boolean    _endDate = false,
                                           Qty        _minQty = 0,
                                           Qty        _maxQty = 0)
    {
        #TimeConstants
    
        int chargedPeriodsPerDate;
        Qty        minQty = _minQty * (_inMinutes ? #MinutesPerHour : 1);
        Qty        maxQty = _maxQty * (_inMinutes ? #MinutesPerHour : 1);
    
        TimeOfDay  startTime, endTime;
        
        return [chargedPeriodsPerDate, startTime, endTime];
    }

]]></Source>
			</Method>
			<Method>
				<Name>chargePeriodChargeablePeriodsPerDate</Name>
				<Source><![CDATA[
    public int chargePeriodChargeablePeriodsPerDate(DNRCalendarId  _calendarId,
                                                    TransDate      _checkDate,
                                                    boolean        _inMinutes = false,
                                                    Qty            _minQty = 0,
                                                    Qty            _maxQty = 0)
    {
        #TimeConstants
    
        int chargePeriodChargeablePeriodsPerDate;
        Qty        minQty = _minQty * (_inMinutes ? #MinutesPerHour : 1);
        Qty        maxQty = _maxQty * (_inMinutes ? #MinutesPerHour : 1);
        
    
        return chargePeriodChargeablePeriodsPerDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dateExistsForCalendar</Name>
				<Source><![CDATA[
    public boolean dateExistsForCalendar(DNRCalendarId _calendarId, TransDate _checkDate)
    {
        boolean dateExists;
        
    
        return dateExists;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dateIsOpen</Name>
				<Source><![CDATA[
    public boolean dateIsOpen(DNRCalendarId _calendarId, TransDate _checkDate)
    {
        boolean isOpen;
       
    
        return isOpen;
    }

]]></Source>
			</Method>
			<Method>
				<Name>endOpenTime</Name>
				<Source><![CDATA[
    public TimeOfDay endOpenTime(DNRCalendarId _calendarId, TransDate _checkDate)
    {
        TimeOfDay endOpenTimeFirstDate;
        
    
        return endOpenTimeFirstDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>invoicePeriodChargeablePeriodsPerDate</Name>
				<Source><![CDATA[
    public int invoicePeriodChargeablePeriodsPerDate(DNRCalendarId _calendarId,
                                                     TransDate    _checkDate,
                                                     boolean      _inMinutes = false,
                                                     Qty          _minQty = 0,
                                                     Qty          _maxQty = 0)
    {
        #TimeConstants
    
        int invoicePeriodChargeablePeriodsPerDate;
        Qty        minQty = _minQty * (_inMinutes ? #MinutesPerHour : 1);
        Qty        maxQty = _maxQty * (_inMinutes ? #MinutesPerHour : 1);
        ;
    
    
        return invoicePeriodChargeablePeriodsPerDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateCache</Name>
				<Source><![CDATA[
    public void populateCache(DNRCalendarId _calendarId, TransDate _startDate, TransDate _endDate, boolean _mayCheckHourRegistration = false)
    {
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>startOpenTime</Name>
				<Source><![CDATA[
    public TimeOfDay startOpenTime(DNRCalendarId _calendarId, TransDate _checkDate)
    {
        TimeOfDay startOpenTimeLastDate;
        ;
    
    
        return startOpenTimeLastDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public client server static INVWorkCalendarOpenCache construct()
    {
        return new INVWorkCalendarOpenCache();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>