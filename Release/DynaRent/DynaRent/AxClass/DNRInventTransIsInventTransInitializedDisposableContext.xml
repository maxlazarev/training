<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRInventTransIsInventTransInitializedDisposableContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
class DNRInventTransIsInventTransInitializedDisposableContext implements System.IDisposable
{
    static DNRInventTransIsInventTransInitializedDisposableContext instance;

    private NoYes BOBIsCompensatingTrans;
    private BOBTransDateTime BOBReturnNoteUpdDateTime;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        if (instance)
        {
            throw error ("Nesting of DNRInventTransIsInventTransInitializedDisposableContext is not supported.");
        }
        
        instance = this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dispose</Name>
				<Source><![CDATA[
    public void dispose()
    {
        instance = null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>current</Name>
				<Source><![CDATA[
    static public DNRInventTransIsInventTransInitializedDisposableContext current()
    {
        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNRParmIsCompensatingTrans</Name>
				<Source><![CDATA[
    public NoYes DNRParmIsCompensatingTrans(NoYes _BOBIsCompensatingTrans = BOBIsCompensatingTrans)
    {
        BOBIsCompensatingTrans = _BOBIsCompensatingTrans;
        return BOBIsCompensatingTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNRParmReturnNoteUpdDateTime</Name>
				<Source><![CDATA[
    public BOBTransDateTime DNRParmReturnNoteUpdDateTime(BOBTransDateTime _BOBReturnNoteUpdDateTime = BOBReturnNoteUpdDateTime)
    {
        BOBReturnNoteUpdDateTime = _BOBReturnNoteUpdDateTime;
        return BOBReturnNoteUpdDateTime;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>