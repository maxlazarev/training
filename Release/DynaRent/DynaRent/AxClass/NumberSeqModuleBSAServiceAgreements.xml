<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>NumberSeqModuleBSAServiceAgreements</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class NumberSeqModuleBSAServiceAgreements extends NumberSeqApplicationModule
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>loadModule</Name>
				<Source><![CDATA[
    protected void loadModule()
    {
        NumberSeqDatatype dataType = NumberSeqDatatype::construct();
        ;
    
        // Business object service agreement contract ID
        dataType.parmDatatypeId(extendedTypeNum(BSAContractId));
        dataType.parmReferenceHelp("@DNR8411");
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardfetchAheadQty(5);
        dataType.parmWizardIsManual(NoYes::No);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmSortField(1);
        dataType.parmWizardHighest(999999999);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);
    
        // Autocreated subscriptions
        dataType.parmDatatypeId(extendedTypeNum(SMASubscriptionId));
        dataType.parmReferenceHelp("@DNR8440");
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardfetchAheadQty(5);
        dataType.parmWizardIsManual(NoYes::No);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmSortField(1);
        dataType.parmWizardHighest(999999999);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqModule</Name>
				<Source><![CDATA[
    public NumberSeqModule numberSeqModule()
    {
        return NumberSeqModule::BSABusinessObjectServiceAgreements;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildModulesMapSubsciber</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Appends the current class to the map that links modules to number sequence data type generators.
    /// </summary>
    [SubscribesTo(classstr(NumberSeqGlobal),delegatestr(NumberSeqGlobal,buildModulesMapDelegate))]
    static void buildModulesMapSubsciber(Map numberSeqModuleNamesMap)
    {
        NumberSeqGlobal::addModuleToMap(classnum(NumberSeqModuleBSAServiceAgreements), numberSeqModuleNamesMap);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>