<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RORSubStatusDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
[SRSReportParameterAttribute(classStr(RORSubStatusContract))]
class RORSubStatusDP extends SrsReportDataProviderPreProcess
{
    CustRORSubStatusJour                subStatusJour;
    CustRORSubStatusTrans               subStatusTrans;

    VendRORSubStatusJour                subStatusJourSubRental;
    VendRORSubStatusTrans               subStatusTransSubRental;

    RORTmpSubStatusHeader               tmpSubStatusHeader;
    RORTmpSubStatusDetails              tmpSubStatusDetails;
    FormletterJournalPrint              formletterJournalPrint;
    CompanyInfo                         companyInfo;
    RecId                               formLetterRecId;
    RecId                               recId;
   
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getTmpSubStatusDetails</Name>
				<Source><![CDATA[
    [SRSReportDataSetAttribute(tableStr(RORTmpSubStatusDetails))]
    public RORTmpSubStatusDetails getTmpSubStatusDetails()
    {
        select tmpSubStatusDetails;
        return tmpSubStatusDetails;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTmpSubStatusHeader</Name>
				<Source><![CDATA[
    [SRSReportDataSetAttribute(tableStr(RORTmpSubStatusHeader))]
    public RORTmpSubStatusHeader getTmpSubStatusHeader()
    {
        select tmpSubStatusHeader;
        return tmpSubStatusHeader;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    public void processReport()
    {
        QueryRun                tradeLoopTrans;
        RORSubStatusContract    contract;
    
        tmpSubStatusHeader.setConnection(this.parmUserConnection());
        tmpSubStatusDetails.setConnection(this.parmUserConnection());
    
        contract                    = this.parmDataContract() as RORSubStatusContract;
        recId                       = contract.parmRecordId();
        formLetterRecId             = contract.parmFormLetterRecordId();
    
        companyInfo                 = CompanyInfo::find();

        if (contract.parmTableId() == tableNum(CustRORSubStatusJour))
        {
            this.unpackSalesFormLetter();

            subStatusJour               = CustRORSubStatusJour::findRecId(recId);
    
            this.setTmpReturnNoteHeader();
    
            tradeLoopTrans = new TradeLoopTrans(subStatusJour, tableNum(CustRORSubStatusTrans)).buildQueryRun();
    
            while (tradeLoopTrans.next())
            {
                subStatusTrans = tradeLoopTrans.get(tableNum(CustRORSubStatusTrans));
                this.setTmpSubStatusDetails();
            }
        }
        else if (contract.parmTableId() == tableNum(VendRORSubStatusJour))
        {
            subStatusJourSubRental  = VendRORSubStatusJour::findRecId(recId);

            this.setTmpReturnNoteHeader();
    
            tradeLoopTrans = new TradeLoopTrans(subStatusJourSubRental, tableNum(VendRORSubStatusTrans)).buildQueryRun();
    
            while (tradeLoopTrans.next())
            {
                subStatusTransSubRental = tradeLoopTrans.get(tableNum(VendRORSubStatusTrans));
                this.setTmpSubStatusDetails();
            }

        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTmpReturnNoteHeader</Name>
				<Source><![CDATA[
    private void setTmpReturnNoteHeader()
    {
        tmpSubStatusHeader.CompanyAddress          = companyInfo.postalAddress().Address;
        tmpSubStatusHeader.CompanyCoRegNum         = companyInfo.CoRegNum;
        tmpSubStatusHeader.CompanyGiro             = companyInfo.Giro;
        tmpSubStatusHeader.CompanyLogo             = FormLetter::companyLogo();
        tmpSubStatusHeader.CompanyName             = companyInfo.name();
        tmpSubStatusHeader.CompanyPhone            = companyInfo.phone();
        tmpSubStatusHeader.CompanyTeleFax          = companyInfo.teleFax();

        if (subStatusJour)
        {
            tmpSubStatusHeader.CustomerRef             = subStatusJour.CustomerRef;
            tmpSubStatusHeader.DeliveryAddress         = subStatusJour.deliveryAddress();
            tmpSubStatusHeader.DeliveryName            = subStatusJour.DeliveryName;
            tmpSubStatusHeader.DocumentDate            = subStatusJour.Date;
            tmpSubStatusHeader.PrintLogo               = (conLen(FormLetter::companyLogo()) > 0);
            tmpSubStatusHeader.PurchaseOrder           = subStatusJour.PurchaseOrder;
            tmpSubStatusHeader.SubStatusId             = subStatusJour.SubStatusId;
            tmpSubStatusHeader.SalesAdministrator      = HcmWorker::find(subStatusJour.WorkerSalesTaker).PersonnelNumber;
            tmpSubStatusHeader.SalesId                 = subStatusJour.SalesId;
        }

        else if (subStatusJourSubRental)
        {
            tmpSubStatusHeader.DeliveryAddress         = subStatusJourSubRental.deliveryAddress();
            tmpSubStatusHeader.DeliveryName            = subStatusJourSubRental.DeliveryName;
            tmpSubStatusHeader.DocumentDate            = subStatusJourSubRental.Date;
            tmpSubStatusHeader.PrintLogo               = (conLen(FormLetter::companyLogo()) > 0);
            tmpSubStatusHeader.SubStatusId             = subStatusJourSubRental.SubStatusId;
            tmpSubStatusHeader.SalesAdministrator      = HcmWorker::find(subStatusJourSubRental.Purchaser).PersonnelNumber;
            tmpSubStatusHeader.SalesId                 = subStatusJourSubRental.PurchId;
        }
        tmpSubStatusHeader.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTmpSubStatusDetails</Name>
				<Source><![CDATA[
    private void setTmpSubStatusDetails()
    {
        if (subStatusTrans)
        {
            tmpSubStatusDetails.DeliveryDate   = subStatusTrans.DlvDate;
            tmpSubStatusDetails.ItemId         = subStatusTrans.ItemId;
            tmpSubStatusDetails.Name           = subStatusTrans.Name;
            tmpSubStatusDetails.Qty            = subStatusTrans.Qty;
            tmpSubStatusDetails.SalesUnitTxt   = subStatusTrans.salesUnitTxt();
        }

        else if (subStatusTransSubRental)
        {
            tmpSubStatusDetails.DeliveryDate   = subStatusTransSubRental.SubStatusDate;
            tmpSubStatusDetails.ItemId         = subStatusTransSubRental.ItemId;
            tmpSubStatusDetails.Name           = subStatusTransSubRental.Name;
            tmpSubStatusDetails.Qty            = subStatusTransSubRental.Qty;
            tmpSubStatusDetails.SalesUnitTxt   = subStatusTransSubRental.purchUnitTxt();
        }
        tmpSubStatusDetails.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpackSalesFormLetter</Name>
				<Source><![CDATA[
    private void unpackSalesFormLetter()
    {
        SRSTmpDataStore srsTmpDataStore;
    
        if (formLetterRecId)
        {
            ttsBegin;
            select forUpdate firstonly Value from srsTmpDataStore
            where srsTmpDataStore.RecId == formLetterRecId;
    
            if (srsTmpDataStore.RecId)
            {
                formletterJournalPrint = SalesConfirmJournalPrint::construct();
                formletterJournalPrint.unpack(srsTmpDataStore.Value);
                srsTmpDataStore.delete();
            }
            ttsCommit;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>