<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRUtilClass</Name>
	<SourceCode>
		<Declaration><![CDATA[
class DNRUtilClass
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>crossCompanyJumpRef</Name>
				<Source><![CDATA[
    public static void crossCompanyJumpRef(CompanyId _companyId, RefTableId _refTableId, str _value, Object _callerForm = null, Common _record = null)
    {
        void jumpRef()
        {
            FormName    refFormName;
            RefFieldId  refFieldId = DNRUtilClass::getLookupField(_refTableId);
            Args        args = new Args();
            
            if (_record)
            {
                args.record(_record);
            }
            else
            {
                Query query = new Query();
                QueryBuildDataSource qbds = query.addDataSource(_refTableId);
                qbds.addRange(refFieldId).value(queryValue(_value));
                qbds.firstOnly(true);

                QueryRun qr = new QueryRun(query);

                if (qr.next())
                {
                    Common common = DictTable::createRecord(tableId2Name(_refTableId));
                    common = qr.get(_refTableId);

                    if (common)
                    {
                        args.record(common);

                        switch (common.TableId)
                        {
                            case tableNum(InventTable):
                                refFormName = formStr(EcoResProductDetailsExtended);
                                break;

                            case tableNum(ProjGroup):
                                refFormName = formStr(ProjGroup);
                                break;

                            case tableNum(CustTable):
                                refFormName = formStr(CustTable);
                                break;

                            case tableNum(VendTable):
                                refFormName = formStr(VendTable);
                                break;

                            case tableNum(PurchLine):
                                PurchLine purchLine = common;
                                refFormName = (purchLine.PurchaseType == PurchaseType::RORSubRental) ? formStr(RORPurchTable) : formStr(PurchTable);
                                break;

                            case tableNum(PurchTable):
                                PurchTable purchTable = common;
                                refFormName = (purchTable.PurchaseType == PurchaseType::RORSubRental ? formStr(RORPurchTable) : formStr(PurchTable));
                                break;

                            case tableNum(SalesQuotationLine):
                                SalesQuotationLine salesQuotationLine = common;
                                switch(salesQuotationLine.QuotationType)
                                {
                                    case QuotationType::RORRental:
                                        refFormName = formStr(RORSalesQuotationTable);
                                        break;
                                    case QuotationType::RORProjRental:
                                        refFormName = formStr(RORSalesQuotationProjTable);
                                        break;
                                    default:
                                        refFormName = formStr(SalesQuotationTable);
                                        break;
                                }
                                break;

                            case tableNum(SalesQuotationTable):
                                SalesQuotationTable salesQuotationTable = common;
                                switch(salesQuotationTable.QuotationType)
                                {
                                    case QuotationType::RORRental:
                                        refFormName = formStr(RORSalesQuotationTable);
                                        break;
                                    case QuotationType::RORProjRental:
                                        refFormName = formStr(RORSalesQuotationProjTable);
                                        break;
                                    default:
                                        refFormName = formStr(SalesQuotationTable);
                                        break;
                                }
                                break;

                            case tableNum(SalesLine):
                                SalesLine salesLine = common;
                                refFormName = (salesLine.SalesType == SalesType::RORRental ? formStr(RORSalesTable) : formStr(SalesTable));
                                break;

                            case tableNum(SalesTable):
                                SalesTable salesTable = common;
                                refFormName = (salesTable.SalesType == SalesType::RORRental ? formStr(RORSalesTable) : formStr(SalesTable));
                                break;
                            
                            case tableNum(ProjTable):
                                refFormName = formStr(ProjTable);
                                break;

                            default:
                                throw error(strFmt("@SYS31187", tableId2name(_refTableId)));
                        }
                    }
                }
            }
             
            args.lookupField(refFieldId);
            args.lookupValue(_value);
            args.caller(_callerForm);
            args.name(refFormName);

            FormRun formRun = ClassFactory::formRunClassOnClient(args);
            formRun.init();
            formRun.run();

            if (refFormName == formStr(WPPWorkOrderLineDetails))
            {
                formRun.detach();
            }
            else
            {
                formRun.wait();
            }
        }

        if (_companyId != curExt())
        {
            changeCompany(_companyId)
            {
                jumpRef();
            }
        }
        else
        {
            jumpRef();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLookupField</Name>
				<Source><![CDATA[
    private static RefFieldId getLookupField(RefTableId _refTableId)
    {
        RefFieldId ret;

        switch (_refTableId)
        {
            case tableNum(InventTable):
                ret = fieldNum(InventTable, ItemId);
                break;

            case tableNum(ProjGroup):
                ret = fieldNum(ProjGroup, ProjGroupId);
                break;

            case tableNum(PurchLine):
                ret = fieldNum(PurchLine, PurchId);
                break;

            case tableNum(PurchTable):
                ret = fieldNum(purchTable, PurchId);
                break;

            case tableNum(SalesQuotationLine):
                ret = fieldNum(SalesQuotationLine, QuotationId);
                break;

            case tableNum(SalesQuotationTable):
                ret = fieldNum(SalesQuotationTable, QuotationId);
                break;

            case tableNum(SalesLine):
                ret = fieldNum(SalesLine, SalesId);
                break;

            case tableNum(SalesTable):
                ret = fieldNum(SalesTable, SalesId);
                break;

            case tableNum(CustTable):
                ret = fieldNum(CustTable, Party);
                break;

            case tableNum(VendTable):
                ret = fieldNum(VendTable, Party);
                break;
            
            case tableNum(ProjTable):
                ret = fieldNum(ProjTable, ProjId);
                break;

            default:
                throw error(strFmt("@SYS31187", tableId2name(_refTableId)));
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>