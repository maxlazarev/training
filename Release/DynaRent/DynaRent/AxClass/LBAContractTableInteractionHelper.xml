<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LBAContractTableInteractionHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
class LBAContractTableInteractionHelper
{
    LBAContractTable    contractTable;

    UnknownNoYes        buttonImportTerms;
    UnknownNoYes        buttonUpdateTerms;
    UnknownNoYes        buttonStartContract;
    UnknownNoYes        buttonStopContract;
    UnknownNoYes        buttonTerminateContract;
    UnknownNoYes        buttonMaintainObjects;

    #localmacro.GetCached
        if (%1 == UnknownNoYes::Unknown)
        {
            %1 = (%2) ? UnknownNoYes::Yes : UnknownNoYes::No;
        }

        return %1 == UnknownNoYes::Yes;
    #endmacro
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initHeaderActions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize work order header controls visibility states.
    /// </summary>
    /// <param name="_contractTable">The header record.</param>
    public void initHeaderActions(LBAContractTable _contractTable)
    {
        contractTable = _contractTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmButtonImportTermsEnabled</Name>
				<Source><![CDATA[
    public boolean parmButtonImportTermsEnabled()
    {
        #GetCached(buttonImportTerms, contractTable.ContractSTatus == LBAContractStatus::Created)
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmButtonMaintainObjectsEnabled</Name>
				<Source><![CDATA[
    public boolean parmButtonMaintainObjectsEnabled()
    {
        #GetCached(buttonMaintainObjects, contractTable.ContractType == LBAContractType::Multiple)
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmButtonStartContractEnabled</Name>
				<Source><![CDATA[
    public boolean parmButtonStartContractEnabled()
    {
        #GetCached(buttonStartContract, contractTable.ContractStatus == LBAContractStatus::TermsImported)
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmButtonStopContractEnabled</Name>
				<Source><![CDATA[
    public boolean parmButtonStopContractEnabled()
    {
        #GetCached(buttonStopContract, contractTable.ContractStatus == LBAContractStatus::Running && contractTable.Stopped == NoYes::No)
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmButtonTerminateContractEnabled</Name>
				<Source><![CDATA[
    public boolean parmButtonTerminateContractEnabled()
    {
        #GetCached(buttonTerminateContract, contractTable.ContractStatus == LBAContractStatus::Running && contractTable.Stopped == NoYes::Yes)
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmButtonUpdateTermsEnabled</Name>
				<Source><![CDATA[
    public boolean parmButtonUpdateTermsEnabled()
    {
        #GetCached(buttonUpdateTerms, contractTable.ContractStatus == LBAContractStatus::TermsImported || contractTable.ContractStatus == LBAContractStatus::Running)
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static LBAContractTableInteractionHelper construct()
    {
        return new LBAContractTableInteractionHelper();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>