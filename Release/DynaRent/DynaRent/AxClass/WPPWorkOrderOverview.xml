<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WPPWorkOrderOverview</Name>
	<SourceCode>
		<Declaration><![CDATA[
class WPPWorkOrderOverview
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        BOBMaintenanceHistoryView       maintenanceHistoryView;
        WPPWorkOrderTable               workOrderTable;
        WPPWorkOrderView                workOrderView;
        WPPWorkOrderLineListPageView    workOrderLineListPageView;
        DataArea                        dataArea;
        SRSReportRun                    reportRun;
        SRSPrintDestinationSettings     printDestinationSettings;
        SRSReportRunController          controller;
        SrsReportDataContract           contract;
        WPPWorkOrderHeaderContract      dataContract;
    
        if (_args)
        {
            switch (_args.dataset())
            {
                case tableNum(BOBMaintenanceHistoryView):
                    maintenanceHistoryView = _args.record();
                    workOrderTable = WPPWorkOrderTable::find(maintenanceHistoryView.WorkOrderId);
                    break;
    
                case tableNum(WPPWorkOrderView):
                    workOrderView = _args.record();
                    workOrderTable = WPPWorkOrderTable::find(workOrderView.WorkOrderId);
                    break;
    
                case tableNum(WPPWorkOrderView):
                    workOrderView = _args.record();
                    workOrderTable = WPPWorkOrderTable::find(workOrderView.WorkOrderId);
                    break;
    
                case tableNum(WPPWorkOrderLineListPageView):
                    workOrderLineListPageView = _args.record();
                    workOrderTable = WPPWorkOrderTable::find(workOrderLineListPageView.WorkOrderId);
                    break;
    
                case tableNum(WPPWorkOrderTable):
                    workOrderTable = _args.record();
                    break;
            }
        }
    
        if (!workOrderTable)
        {
            throw error(strFmt("@SYS134996", tableStr(WPPWorkOrderTable)));
        }
    
        reportRun = new SRSReportRun();
        reportRun.reportName(ssrsReportStr(WPPWorkOrderOverview, Report));
        reportRun.readPrintDestinationSettings();
    
        printDestinationSettings = reportRun.printDestinationSettings();
    
        if (SrsReportRunUtil::showSettingsDialog(printDestinationSettings))
        {
            reportRun.printDestinationSettings(printDestinationSettings);
            reportRun.savePrintDestinationSettings();
    
            select firstOnly Id from dataArea
            where dataArea.id == workOrderTable.CompanyId
            &&    dataArea.isVirtual == NoYes::No;
    
            changeCompany(dataArea ? dataArea.id : curext())
            {
                controller = new SrsReportRunController();
                controller.parmArgs(_args);
                controller.parmReportName(reportRun.reportName());
                controller.parmShowDialog(false);

                contract = controller.parmReportContract();
                contract.parmReportCaption("@DNR6464");
                contract.parmPrintSettings(printDestinationSettings);

                dataContract = contract.parmRdpContract();
                dataContract.parmWorkOrderId(workOrderTable.WorkOrderId);
    
                controller.runReport();
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>