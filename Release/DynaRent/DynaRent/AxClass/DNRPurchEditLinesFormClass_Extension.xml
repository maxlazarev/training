<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRPurchEditLinesFormClass_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(PurchEditLinesForm))]
public final class DNRPurchEditLinesFormClass_Extension
{
    private BOBRentalSubStatus rentalSubStatus;

    // extension methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>BOBTimeCaption</Name>
				<Source><![CDATA[
    public str BOBTimeCaption()
    {
        return "@SYS8827";
    }

]]></Source>
			</Method>
			<Method>
				<Name>INVCanShowCalculationPoint</Name>
				<Source><![CDATA[
    public boolean INVCanShowCalculationPoint()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORparmRentalSubStatus</Name>
				<Source><![CDATA[
    public BOBRentalSubStatus RORparmRentalSubStatus(BOBRentalSubStatus _rentalSubStatus = rentalSubStatus)
    {
        rentalSubStatus = _rentalSubStatus;
        return rentalSubStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>WPPEnableDuplicateTask</Name>
				<Source><![CDATA[
    public boolean WPPEnableDuplicateTask(WPPWorkOrderId    _workOrderId,
                                          PurchParmUpdate   _purchParmUpdate)
    {
        if (_workOrderId
        &&  (_purchParmUpdate.DocumentStatus == DocumentStatus::PickingList  ||
             _purchParmUpdate.DocumentStatus == DocumentStatus::PackingSlip  ||
             _purchParmUpdate.DocumentStatus == DocumentStatus::RORSubStatus ||
             _purchParmUpdate.DocumentStatus == DocumentStatus::RORReturnNote))
        {
            return true;
        }
    
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>WPPobjectIsAvailable</Name>
				<Source><![CDATA[
    public NoYes WPPobjectIsAvailable(WPPWorkOrderId _workOrderId)
    {
        BOBObjectView       objectView;
        BOBObjectTable      objectTable;
        WPPWorkOrderTable   workOrderTable;
    
        select firstOnly IsAvailable from objectView
            exists join objectTable
            where objectTable.ObjectId == objectView.ObjectId
                join TableId from workOrderTable
                where workOrderTable.BOBObjectTableRecId == objectTable.RecId
                &&    workOrderTable.WorkOrderId         == _workOrderId;
    
        return objectView.IsAvailable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>