<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LogisticsLocationSelectForm_BOBBusObj</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LogisticsLocationSelectForm_BOBBusObj extends LogisticsLocationSelectForm
{
    BOBObjectId objectId;
    LogisticsLocationSelectSourceType defaultSource;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allowedSources</Name>
				<Source><![CDATA[
    public Set allowedSources()
    {
        Set allowedItems = super();

        // allow all sources
        allowedItems.add(LogisticsLocationSelectSourceType::BusinessRelation);
        allowedItems.add(LogisticsLocationSelectSourceType::RequestForQuote);
        allowedItems.add(LogisticsLocationSelectSourceType::RequestForQuoteLine);
        allowedItems.add(LogisticsLocationSelectSourceType::PurchReqLine);
        allowedItems.add(LogisticsLocationSelectSourceType::ServiceOrder);
        allowedItems.add(LogisticsLocationSelectSourceType::Project);
        allowedItems.add(LogisticsLocationSelectSourceType::PurchReqLineRequsterHCMWorker);
        allowedItems.add(LogisticsLocationSelectSourceType::SalesQuotation);
        allowedItems.add(LogisticsLocationSelectSourceType::SalesQuotationLine);
        allowedItems.add(LogisticsLocationSelectSourceType::SalesOrder);
        allowedItems.add(LogisticsLocationSelectSourceType::SalesLine);
        allowedItems.add(LogisticsLocationSelectSourceType::PurchaseOrder);
        allowedItems.add(LogisticsLocationSelectSourceType::PurchaseOrderLine);
        allowedItems.add(LogisticsLocationSelectSourceType::RORVenue);
    
        return allowedItems;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyAddressToCaller</Name>
				<Source><![CDATA[
    public void copyAddressToCaller(Common _transferFromTable, LogisticsPostalAddressRecId _addressRecId)
    {
        Object callingFormObj = callingForm;
        callingFormObj.setAddress(_addressRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultSource</Name>
				<Source><![CDATA[
    public LogisticsLocationSelectSourceType defaultSource(LogisticsLocationSelectSourceType _source = defaultSource)
    {
        return defaultSource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLogisticsPostalAddressRecId</Name>
				<Source><![CDATA[
    public RecId getLogisticsPostalAddressRecId()
    {
        return (select firstonly LocationRecId from BOBObjectView
                where BOBObjectView.ObjectId == objectId).LocationRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLookupRecord</Name>
				<Source><![CDATA[
    public Common getLookupRecord()
    {
        LogisticsPostalAddress address;
        BOBObjectView objectView;
        BOBObjectLocationLog locationLog;
        ;
    
        select firstOnly address
            exists join locationLog
            where locationLog.ObjectId == objectId
            &&    locationLog.PostalAddress == address.RecId
                join TableId from objectView
                where objectView.ObjectId == locationLog.ObjectId
                &&    objectView.LocationRecId == locationLog.RecId;
    
        return address;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new(BOBObjectId _objectId)
    {
        objectId = _objectId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDefaultSource</Name>
				<Source><![CDATA[
    public void parmDefaultSource(LogisticsLocationSelectSourceType _source)
    {
        defaultSource = _source;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static LogisticsLocationSelectForm_BOBBusObj construct(Common _caller)
    {
        BOBObjectTable objectTable;
        BOBObjectView objectView;
        ;
    
        switch(_caller.TableId)
        {
            case tableNum(BOBObjectTable):
                objectTable = _caller;
                return new LogisticsLocationSelectForm_BOBBusObj(objectTable.ObjectId);
    
            case tableNum(BOBObjectView):
                objectView = _caller;
                return new LogisticsLocationSelectForm_BOBBusObj(objectView.ObjectId);
    
            default:
                throw error(strFmt("@SYS31187", tableId2name(_caller.TableId)));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        Args                                    thisArgs;
        FormRun                                 formRun;
        LogisticsLocationSelectForm_BOBBusObj   selectForm;
        Common                                  callerBuffer;
        ;
    
        callerBuffer = _args.record();
    
        selectForm = LogisticsLocationSelectForm_BOBBusObj::construct(callerBuffer);
        selectForm.parmCallingForm(_args.caller());
        selectForm.parmDefaultSource(_args.parmEnum());
    
        thisArgs = new Args();
        thisArgs.name(formStr(LogisticsLocationSelect));
        thisArgs.record(callerBuffer);
        thisArgs.parm(int642str(selectForm.getLogisticsPostalAddressRecId()));
        thisArgs.parmObject(selectForm);
    
        formRun = classFactory.formRunClass(thisArgs);
        formRun.init();
    
        if(formRun)
        {
            formRun.run();
            formRun.wait();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>