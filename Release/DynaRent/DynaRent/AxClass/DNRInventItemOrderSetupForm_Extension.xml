<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRInventItemOrderSetupForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(InventItemOrderSetup))]
public final class DNRInventItemOrderSetupForm_Extension
{
    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>enableDimControls</Name>
				<Source><![CDATA[
    void enableDimControls()
    {
        next enableDimControls();

        this.ROREnableRentalDimControls();
        this.ROREnableSubRentalDimControls();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    void updateDesign(InventDimFormDesignUpdate _mode)
    {
        next updateDesign(_mode);
        
        if(_mode == InventDimFormDesignUpdate::Active)
        {
            this.WPPenableWorkOrderControls();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>ROREditTaxItemGroupCTRL_OnLookup</Name>
				<Source><![CDATA[
    // extension methods

    public void ROREditTaxItemGroupCTRL_OnLookup(FormControl _sender, FormControlEventArgs _eventArgs)
    {
        FormStringControl                   strCtrl     = _sender as FormStringControl ;
        FormControlCancelableSuperEventArgs eventArgs   = _eventArgs as FormControlCancelableSuperEventArgs;
        
        eventArgs.CancelSuperCall();
        strCtrl.performTypeLookup(extendedTypeNum(TaxItemGroup));
    }

]]></Source>
			</Method>
			<Method>
				<Name>ROREnableRentalDimControls</Name>
				<Source><![CDATA[
    private void ROREnableRentalDimControls()
    {
        boolean isSiteSpecific = !this.isSettingsSiteSpecific();

        RORInventDimRental_ds.object(fieldNum(InventDim, InventSiteId)).visible(true);
        RORInventDimRental_ds.object(fieldNum(InventDim, InventLocationId)).visible(true);
        RORInventItemRentalSetup_ds.object(fieldNum(RORInventItemRentalSetup, TaxItemGroup)).visible(true);
        RORInventItemRentalSetup_ds.object(fieldNum(RORInventItemRentalSetup, WPPWorkOrderTemplateId)).visible(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>ROREnableSubRentalDimControls</Name>
				<Source><![CDATA[
    private void ROREnableSubRentalDimControls()
    {
        boolean isSiteSpecific = !this.isSettingsSiteSpecific();

        RORInventDimSubRental_ds.object(fieldNum(InventDim, InventSiteId)).visible(true);
        RORInventDimSubRental_ds.object(fieldNum(InventDim, InventLocationId)).visible(true);
        RORInventItemSubRentalSetup_ds.object(fieldNum(RORInventItemSubRentalSetup, TaxItemGroup)).visible(true);
        RORInventItemSubRentalSetup_ds.object(fieldNum(RORInventItemSubRentalSetup, WPPWorkOrderTemplateId)).visible(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORValidateInventDimRental</Name>
				<Source><![CDATA[
    public boolean RORValidateInventDimRental()
    {
        RORInventItemRentalSetup.InventDimId            = InventDim::findOrCreate(inventDim_ds.cursor()).InventDimId;
        RORInventItemRentalSetup.InventDimIdDefault     = InventDim::findOrCreate(RORInventDimRental_ds.cursor()).InventDimId;
    
        return RORInventItemRentalSetup.validateField(fieldnum(RORInventItemRentalSetup, InventDimIdDefault));
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORValidateInventDimSubRental</Name>
				<Source><![CDATA[
    public boolean RORValidateInventDimSubRental()
    {
        RORInventItemSubRentalSetup.InventDimId        = InventDim::findOrCreate(inventDim_ds.cursor()).InventDimId;
        RORInventItemSubRentalSetup.InventDimIdDefault = InventDim::findOrCreate(RORInventDimSubRental_ds.cursor()).InventDimId;
    
        return RORInventItemSubRentalSetup.validateField(fieldnum(RORInventItemSubRentalSetup, InventDimIdDefault));
    }

]]></Source>
			</Method>
			<Method>
				<Name>WPPenableWorkOrderControls</Name>
				<Source><![CDATA[
    private void WPPenableWorkOrderControls()
    {
        boolean showWorkOrderGroups = this.isSettingsDefault();

        // Purch
        WPPPurchWorkOrderTemplate.visible(showWorkOrderGroups);
        RORPurchTaxItemGroup.visible(showWorkOrderGroups);

        // Sales
        WPPSalesWorkOrderTemplate.visible(showWorkOrderGroups);
        RORSalesTaxItemGroup.visible(showWorkOrderGroups);

        // Rental
        RentalDefaultSettingsGroup.visible(showWorkOrderGroups);

        // Sub rental
        SubRentalDefaultSettingsGroup.visible(showWorkOrderGroups);
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORGetInventTable</Name>
				<Source><![CDATA[
    public InventTable RORGetInventTable()
    {
        return inventTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_RORInventItemRentalSetupDS_OnInitValue</Name>
				<Source><![CDATA[
    // event handler methods

    [FormDataSourceEventHandler(formDataSourceStr(InventItemOrderSetup, RORInventItemRentalSetup), FormDataSourceEventType::InitValue)]
    public static void DNREvent_RORInventItemRentalSetupDS_OnInitValue(FormDataSource _sender, FormDataSourceEventArgs _eventArgs)
    {
        Object                      formRunObject   = _sender.formRun() as Object;
        RORInventItemRentalSetup    rentalSetup     = _sender.cursor() as RORInventItemRentalSetup;
        InventTable                 inventTable     = formRunObject.RORGetInventTable();

        rentalSetup.ItemId = inventTable.ItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_RORInventItemRentalSetupDS_ValidatingWrite</Name>
				<Source><![CDATA[
    [FormDataSourceEventHandler(formDataSourceStr(InventItemOrderSetup, RORInventItemRentalSetup), FormDataSourceEventType::ValidatingWrite)]
    public static void DNREvent_RORInventItemRentalSetupDS_ValidatingWrite(FormDataSource _sender, FormDataSourceEventArgs _eventArgs)
    {
        Object formRunObject = _sender.formRun() as Object;

        if (!formRunObject.RORValidateInventDimRental())
        {
            throw error("@SYS104318");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_RORInventItemRentalSetupDS_OnValidatingWrite</Name>
				<Source><![CDATA[
    [FormDataSourceEventHandler(formDataSourceStr(InventItemOrderSetup, RORInventItemRentalSetup), FormDataSourceEventType::ValidatingWrite)]
    public static void DNREvent_RORInventItemRentalSetupDS_OnValidatingWrite(FormDataSource _sender, FormDataSourceEventArgs _eventArgs)
    {
        RORInventItemRentalSetup    callerRecord            = _sender.cursor() as RORInventItemRentalSetup;
        FormDataSource              fds                     = _sender.joinSourceDataSource();
        InventItemPurchSetup        inventItemPurchSetup    = fds.cursor();
        
        callerRecord.Sequence = inventItemPurchSetup.Sequence;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_RORInventItemSubRentalSetupDS_OnInitValue</Name>
				<Source><![CDATA[
    [FormDataSourceEventHandler(formDataSourceStr(InventItemOrderSetup, RORInventItemSubRentalSetup), FormDataSourceEventType::InitValue)]
    public static void DNREvent_RORInventItemSubRentalSetupDS_OnInitValue(FormDataSource _sender, FormDataSourceEventArgs _eventArgs)
    {
        Object                      formRunObject   = _sender.formRun() as Object;
        RORInventItemSubRentalSetup subRentalSetup  = _sender.cursor() as RORInventItemSubRentalSetup;
        InventTable                 inventTable     = formRunObject.RORGetInventTable();

        subRentalSetup.ItemId = inventTable.ItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_RORInventItemSubRentalSetupDS_ValidatingWrite</Name>
				<Source><![CDATA[
    [FormDataSourceEventHandler(formDataSourceStr(InventItemOrderSetup, RORInventItemSubRentalSetup), FormDataSourceEventType::ValidatingWrite)]
    public static void DNREvent_RORInventItemSubRentalSetupDS_ValidatingWrite(FormDataSource _sender, FormDataSourceEventArgs _eventArgs)
    {
        Object formRunObject = _sender.formRun() as Object;
        
        if (!formRunObject.RORValidateInventDimSubRental())
        {
            throw error("@SYS104318");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_RORInventItemSubRentalSetupDS_OnValidatingWrite</Name>
				<Source><![CDATA[
    [FormDataSourceEventHandler(formDataSourceStr(InventItemOrderSetup, RORInventItemSubRentalSetup), FormDataSourceEventType::ValidatingWrite)]
    public static void DNREvent_RORInventItemSubRentalSetupDS_OnValidatingWrite(FormDataSource _sender, FormDataSourceEventArgs _eventArgs)
    {
        RORInventItemSubRentalSetup callerRecord            = _sender.cursor() as RORInventItemSubRentalSetup;
        FormDataSource              fds                     = _sender.joinSourceDataSource();
        InventItemPurchSetup        inventItemPurchSetup    = fds.cursor();
        
        callerRecord.Sequence = inventItemPurchSetup.Sequence;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_SalesTaxItemGroup_M_ROREditTaxItemGroupCTRL_OnLookup</Name>
				<Source><![CDATA[
    [FormControlEventHandler(formControlStr(InventItemOrderSetup, SalesTaxItemGroup_M_ROREditTaxItemGroup), FormControlEventType::Lookup)]
    public static void DNREvent_SalesTaxItemGroup_M_ROREditTaxItemGroupCTRL_OnLookup(FormControl _sender, FormControlEventArgs _eventArgs)
    {
        Object formRunObject = _sender.formRun() as Object;
        formRunObject.ROREditTaxItemGroupCTRL_OnLookup(_sender, _eventArgs);
    }

]]></Source>
			</Method>
			<Method>
				<Name>DNREvent_PurchTaxItemGroup_M_ROREditTaxItemGroupCTRL_OnLookup</Name>
				<Source><![CDATA[
    [FormControlEventHandler(formControlStr(InventItemOrderSetup, PurchTaxItemGroup_M_ROREditTaxItemGroup), FormControlEventType::Lookup)]
    public static void DNREvent_PurchTaxItemGroup_M_ROREditTaxItemGroupCTRL_OnLookup(FormControl _sender, FormControlEventArgs _eventArgs)
    {
        Object formRunObject = _sender.formRun() as Object;
        formRunObject.ROREditTaxItemGroupCTRL_OnLookup(_sender, _eventArgs);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>