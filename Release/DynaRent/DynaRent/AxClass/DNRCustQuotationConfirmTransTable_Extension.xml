<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRCustQuotationConfirmTransTable_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(tableStr(CustQuotationConfirmTrans))]
public final class DNRCustQuotationConfirmTransTable_Extension
{
    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromSalesQuotationLine</Name>
				<Source><![CDATA[
    void  initFromSalesQuotationLine(SalesQuotationLine  _salesQuotationLine)
    {
        next initFromSalesQuotationLine(_salesQuotationLine);

        this.RORTradeType = _salesQuotationLine.RORTradeType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORGetHeader</Name>
				<Source><![CDATA[
    // extension methods

    public RORRentalHeader RORGetHeader(boolean _forUpdate = false)
    {
        return this.custQuotationConfirmJour(_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORGetParentLine</Name>
				<Source><![CDATA[
    public RORRentalLine RORGetParentLine(boolean _forUpdate = false)
    {
        CustQuotationConfirmTrans custQuotationConfirmTrans;
    
        if(this.RORParentLineRecId)
        {
            custQuotationConfirmTrans.selectForUpdate(_forUpdate);
    
            select firstonly custQuotationConfirmTrans
            where custQuotationConfirmTrans.SalesId             == this.SalesId
            &&    custQuotationConfirmTrans.QuotationDate       == this.QuotationDate
            &&    custQuotationConfirmTrans.QuotationConfirmId  == this.QuotationConfirmId
            &&    custQuotationConfirmTrans.RecId               == this.RORParentLineRecId;
    
            return custQuotationConfirmTrans;
        }
        else
        {
            return null;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>