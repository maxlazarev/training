<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRSalesFormletterParmDataPackingSlipStrategy</Name>
	<SourceCode>
		<Declaration><![CDATA[
[DNRExtensionStrategyFactoryAttribute(classStr(SalesFormletterParmDataPackingSlip))]
class DNRSalesFormletterParmDataPackingSlipStrategy extends DNRSalesFormletterParmDataStrategy
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>BOBSetTransDateTime</Name>
				<Source><![CDATA[
    public void BOBSetTransDateTime(SalesParmTable _salesParmTable, SalesTable _salesTable, SalesLine _salesLine = null)
    {
        RORRentalDateTimes  rentalDateTimesLine;
        TransDateTime       onRentWithTimeZone;

        if (_salesLine.ItemId == RORParameters::find().ItemIdFuel)
        {
            _salesParmTable.TransDate    = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
            _salesParmTable.BOBTransTime = DateTimeUtil::time(DateTimeUtil::getSystemDateTime());

            return;
        }

        RORRentalDateTimes rentalDateTimes = _salesTable.RORRentalDateTimesHost::rentalDateTimes();
    
        if (_salesLine)
        {
            rentalDateTimesLine = _salesLine.RORRentalDateTimesHost::rentalDateTimes();
        }
    
        if (rentalDateTimesLine)
        {
            onRentWithTimeZone = DateTimeUtil::applyTimeZoneOffset(rentalDateTimesLine.getOnRentDateTime(), DateTimeUtil::getUserPreferredTimeZone());
    
            _salesParmTable.TransDate = DateTimeUtil::date(onRentWithTimeZone);
            _salesParmTable.BOBTransTime = DateTimeUtil::time(onRentWithTimeZone);
        }
        else if (rentalDateTimes)
        {
            onRentWithTimeZone = DateTimeUtil::applyTimeZoneOffset(rentalDateTimes.getOnRentDateTime(), DateTimeUtil::getUserPreferredTimeZone());
    
            _salesParmTable.TransDate = DateTimeUtil::date(onRentWithTimeZone);
            _salesParmTable.BOBTransTime = DateTimeUtil::time(onRentWithTimeZone);
        }
        else
        {
            super(_salesParmTable, _salesTable);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>INVSetInvoiceDateTime</Name>
				<Source><![CDATA[
    public void INVSetInvoiceDateTime(SalesParmLine _salesParmLine, SalesLine _salesLine = null)
    {
        _salesParmLine.INVSetInvoiceDateTime(/*FormLetterContract, */null, _salesLine, false, DateTimeUtil::minValue(), this.parmSalesFormletterParmData());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>