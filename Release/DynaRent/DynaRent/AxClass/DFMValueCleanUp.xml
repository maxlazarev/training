<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DFMValueCleanUp</Name>
	<SourceCode>
		<Declaration><![CDATA[
class DFMValueCleanUp extends RunBaseBatch
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>deleteOrphanedValues</Name>
				<Source><![CDATA[
    private void deleteOrphanedValues()
    {
        Query                   query;
        QueryBuildDataSource    qbdsParentRecord;
        QueryRun                queryRun;
        DFMValueTrans           valueTransSelect, valueTransDelete;
        FieldId                 recIdFieldId;
        Common                  parentRecord;
        int64                   deleteCnt;
        #define.RecId('RecId')
        ;
    
        while select RefTableId, RefRecId from valueTransSelect
        group by RefTableId, RefRecId
        {
            query = new Query();
            recIdFieldId = fieldName2id(valueTransSelect.RefTableId, #RecId);
    
            qbdsParentRecord = query.addDataSource(valueTransSelect.RefTableId);
            qbdsParentRecord.addSelectionField(recIdFieldId);
            qbdsParentRecord.firstOnly(true);
            qbdsParentRecord.firstFast(true);
            qbdsParentRecord.addRange(recIdFieldId).value(int642str(valueTransSelect.RefRecId));
    
            queryRun = new QueryRun(query);
            queryRun.next(); // we're only interested in the first record
    
            parentRecord = queryRun.get(valueTransSelect.RefTableId);
    
            if(!parentRecord.RecId)
            {
                delete_from valueTransDelete
                where valueTransDelete.RefTableId == valueTransSelect.RefTableId
                &&    valueTransDelete.RefRecId == valueTransSelect.RefRecId;
    
                deleteCnt += valueTransDelete.RowCount();
            }
        }
    
        info(strFmt("@SYS34367", deleteCnt));
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    Object dialog()
    {
        DialogRunbase dialog = super();
        dialog.addText("@DFM101");
    
        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        #OCCRetryCount
    
        try
        {
            ttsbegin;
    
            this.deleteOrphanedValues();
    
            ttscommit;
        }
        catch (Exception::Deadlock)
        {
            retry;
        }
    
        catch (Exception::UpdateConflict)
        {
            if (appl.ttsLevel() == 0)
            {
                if (xSession::currentRetryCount() >= #RetryNum)
                {
                    throw Exception::UpdateConflictNotRecovered;
                }
                else
                {
                    retry;
                }
            }
            else
            {
                throw Exception::UpdateConflict;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>runsImpersonated</Name>
				<Source><![CDATA[
    public boolean runsImpersonated()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    server static DFMValueCleanUp construct()
    {
        return new DFMValueCleanUp();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public static ClassDescription description()
    {
        return "@DFM104";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        DFMValueCleanUp cleanUp = DFMValueCleanUp::construct();
        ;
    
        if(cleanUp.prompt())
        {
            cleanUp.runOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>