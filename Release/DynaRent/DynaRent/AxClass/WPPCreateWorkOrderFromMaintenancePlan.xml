<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WPPCreateWorkOrderFromMaintenancePlan</Name>
	<SourceCode>
		<Declaration><![CDATA[
class WPPCreateWorkOrderFromMaintenancePlan
{
    WPPWorkOrderTableForm workOrderTableForm;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        if (!_args || _args.dataset() != tableNum(BOBObjectMaintenancePlan))
        {
            throw error(strFmt("@SYS29104", classStr(WPPCreateWorkOrderFromBusinessObject)));
        }

        WPPCreateWorkOrderFromMaintenancePlan   workOrderFromMaintenancePlanObj = new WPPCreateWorkOrderFromMaintenancePlan();
        workOrderFromMaintenancePlanObj.run(_args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run(Args _args)
    {
        BOBObjectMaintenancePlan    objectMaintenancePlan = _args.record();
        WPPWorkOrderTable           workOrderTable = this.createWorkOrderFromMaitenancePlan(objectMaintenancePlan);

        if (workOrderTable)
        {
            Args workOrderCreateArgs = new Args();
            workOrderCreateArgs.record(workOrderTable);
            workOrderCreateArgs.caller(_args.caller());
            workOrderCreateArgs.parmObject(_args.caller());
            workOrderCreateArgs.openMode(OpenMode::Edit);
    
            if (workOrderTableForm.parmShowDelayedMaintenance())
            {
                new MenuFunction(menuitemDisplayStr(BOBMaintenanceTaskMove_Delayed), MenuItemType::Display).run(workOrderCreateArgs);
            }
            else
            {
                new MenuFunction(menuitemDisplayStr(WPPWorkOrderTableForEdit), MenuItemType::Display).run(workOrderCreateArgs);
            }
    
            BOBMaintenanceManager::runFromCommon(objectMaintenancePlan, workOrderTable.WorkOrderId);
        }
    
        if (FormDataUtil::isFormDataSource(objectMaintenancePlan))
        {
            FormDataSource formDataSource = FormDataUtil::getFormDataSource(objectMaintenancePlan);
            formDataSource.research(true);
            formDataSource.refresh();
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>initWorkorderTableForm</Name>
				<Source><![CDATA[
    protected void initWorkorderTableForm(BOBObjectMaintenancePlan _objectMaintenancePlan)
    {
        workOrderTableForm = WPPWorkOrderTableForm::construct();
        workOrderTableForm.BOBparmObjectTableRecId(BOBObjectTable::findObjectId(_objectMaintenancePlan.ObjectId).RecId);
        workOrderTableForm.parmCommon(_objectMaintenancePlan);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createWorkOrderFromMaitenancePlan</Name>
				<Source><![CDATA[
    public WPPWorkOrderTable createWorkOrderFromMaitenancePlan(BOBObjectMaintenancePlan  _objectMaintenancePlan)
    {
        Args                        workOrderCreateArgs;
        WPPWorkOrderTable           workOrderTable;
        FormDataSource              formDataSource;
        
        this.initWorkorderTableForm(_objectMaintenancePlan);
    
        if (workOrderTableForm.create())
        {
            workOrderTable = workOrderTableForm.parmWorkOrderTable();
        }

        return workOrderTable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>