<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WPPDataUpgrade</Name>
	<SourceCode>
		<Declaration><![CDATA[
class WPPDataUpgrade extends RunBaseBatch
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public Object dialog()
    {
        DialogRunbase dialog;
    
        dialog = super();
        dialog.addText("@DNR7153");
    
        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        #OCCRetryCount
    
        try
        {
            ttsbegin;
    
            this.updateWorkOrderTypeProjGroup();
            this.updateWorkOrderLineNumber();
            this.updateWorkOrderStatusPostingSetup();
    
            ttscommit;
        }
        catch (Exception::Deadlock)
        {
            retry;
        }
        catch (Exception::UpdateConflict)
        {
            if (appl.ttsLevel() == 0)
            {
                if (xSession::currentRetryCount() >= #RetryNum)
                {
                    throw Exception::UpdateConflictNotRecovered;
                }
                else
                {
                    retry;
                }
            }
            else
            {
                throw Exception::UpdateConflict;
            }
        }
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateWorkOrderLineNumber</Name>
				<Source><![CDATA[
    private void updateWorkOrderLineNumber()
    {
        DataArea            dataArea;
        WPPWorkOrderLine    workOrderLine;
        WPPWorkOrderId      prevWorkOrderId;
        Line                lineNumber;
    
        while select id from dataArea
        where !dataArea.isVirtual
        {
            changeCompany (dataArea.id)
            {
                workOrderLine = null;
    
                ttsBegin;
                while select forupdate workOrderLine
                where !workOrderLine.LineNumber
                {
                    if (workOrderLine.WorkOrderId != prevWorkOrderId)
                    {
                        lineNumber = WPPWorkOrderLine::lastLineNumber(workOrderLine.WorkOrderId);
                        prevWorkOrderId = workOrderLine.WorkOrderId;
                    }
    
                    lineNumber++;
                    workOrderLine.LineNumber = lineNumber;
                    workOrderLine.update();
                }
                ttsCommit;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateWorkOrderStatusPostingSetup</Name>
				<Source><![CDATA[
    private void updateWorkOrderStatusPostingSetup()
    {
        DataArea                        dataArea;
        WPPWorkOrderStatusPostingSetup  workOrderStatusPostingSetup;
        WPPWorkOrderTaskTable           workOrderTaskTable;
    
        while select id from dataArea
        where !dataArea.isVirtual
        {
            changeCompany (dataArea.id)
            {
                workOrderStatusPostingSetup = null;
                workOrderTaskTable = null;
    
                update_recordSet workOrderTaskTable
                setting SetObjectAvailStatus = WPPWorkOrderLineStatusNone::None
                    exists join workOrderStatusPostingSetup
                    where workOrderStatusPostingSetup.TaskId == workOrderTaskTable.TaskId
                    &&    workOrderStatusPostingSetup.BOBRentalSubStatus == BOBRentalSubStatus::Picked;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateWorkOrderTypeProjGroup</Name>
				<Source><![CDATA[
    private void updateWorkOrderTypeProjGroup()
    {
        ProjGroup   projGroup;
        DataArea            dataArea;
    
        while select id from dataArea
        where !dataArea.isVirtual
        {
            changeCompany (dataArea.id)
            {
                projGroup = null;
    
                while select forUpdate projGroup
                {
                    projGroup.WPPWorkOrderType = projGroup.WPPWorkOrderType - 1;
                    projGroup.update();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    static void main(Args args)
    {
        WPPDataUpgrade dataUpgrade = new WPPDataUpgrade();
    
        if (dataUpgrade.prompt())
        {
            dataUpgrade.runOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>