<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesCreateOrderFromRORVenue</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SalesCreateOrderFromRORVenue</c> class creates the sales order for a specific Venue.
/// </summary>
class SalesCreateOrderFromRORVenue
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        Args                            salesOrderCreateArgs;
        SalesTable                      salesTable;
        RORVenueTable                   venueTable;
        CustTable                       custTable;
        smmBusRelTable                  smmBusRelTable;
        SalesTableForm                  salesTableForm;
    
        if (!_args || !_args.record())
        {
            throw error(strFmt("@SYS29104", classStr(SalesCreateOrderFromRORVenue)));
        }
    
        switch (_args.dataset())
        {
            case tableNum(RORVenueTable):
                venueTable = _args.record();
    
                if (venueTable.smmBusRelAccount)
                {
                    select firstOnly AccountNum, InvoiceAccount from custTable
                        exists join smmBusRelTable
                        where smmBusRelTable.Party == custTable.Party
                        &&    smmBusRelTable.BusRelAccount == venueTable.smmBusRelAccount;
                }
                break;
    
            default:
                throw error(strfmt("@SYS29104", classstr(SalesCreateOrderFromRORVenue)));
        }
    
        if (_args.parmEnum() == SalesTableFormId::RORRentalOrder)
        {
            salesTableForm = SalesTableForm::construct(_args.parmEnum(), salesTable);
            salesTableForm.RORparmVenueCode(venueTable.VenueCode);
            salesTableForm.custAccount(custTable.AccountNum);
            salesTableForm.invoiceAccount(custTable.InvoiceAccount ? custTable.InvoiceAccount : custTable.AccountNum);
            if (venueTable.WPPIsRentalProject)
            {
                salesTableForm.projId(venueTable.WPPProjId);
            }
    
            if (salesTableForm.create())
            {
                salesTable = salesTableForm.salesTable();
            }
        }
    
        if (!salesTable)
        {
            return; // Venue creation was canceled
        }
    
        salesOrderCreateArgs = new Args();
        salesOrderCreateArgs.record(salesTable);
        salesOrderCreateArgs.caller(_args.caller());
        salesOrderCreateArgs.parmObject(_args.caller());
        salesOrderCreateArgs.openMode(OpenMode::Edit);
    
        switch (salesTable.SalesType)
        {
            case SalesType::RORRental:
                new MenuFunction(menuitemdisplaystr(RORSalesTableForEdit), MenuItemType::Display).run(salesOrderCreateArgs);
                break;
    
            default:
                new MenuFunction(menuitemDisplayStr(SalesTableForEdit), MenuItemType::Display).run(salesOrderCreateArgs);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>