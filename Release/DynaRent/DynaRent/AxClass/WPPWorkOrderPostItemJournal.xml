<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WPPWorkOrderPostItemJournal</Name>
	<SourceCode>
		<Declaration><![CDATA[
class WPPWorkOrderPostItemJournal extends RunBaseBatch
{
    QueryRun                queryRun;

    int                     key;

    #Define.CurrentVersion(1)

    #LOCALMACRO.CurrentList
    key
    #ENDMACRO
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    //protected Object dialog()
    public Object dialog()
    {
        DialogRunbase  dialogRunbase = super();
    
        this.initQuery();
    
        return dialogRunbase;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmDefault</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the internal variables.
    /// </summary>
    /// <remarks>
    /// This method is called when no <c>SysLastValue</c> record was found when you called the
    /// <c>SysLastValue.GetLast</c> method. Remember to call the <c>super</c> method.
    /// </remarks>
    public void initParmDefault()
    {
        super();
    
        this.queryBuild();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQuery</Name>
				<Source><![CDATA[
    private void initQuery()
    {
        QueryBuildDataSource qbdsWorkOrderline;
    
        qbdsWorkOrderline = queryRun.query().dataSourceTable(tableNum(WPPWorkOrderLine));
        SysQuery::findOrCreateRange(qbdsWorkOrderline, fieldNum(WPPWorkOrderLine, Status));
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion, #CurrentList, queryRun.pack()];
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryBuild</Name>
				<Source><![CDATA[
    public QueryRun queryBuild()
    {
        Query                   query;
        QueryBuildDataSource    qbdsWorkOrderLine, qbdsInventJournalTrans, qbdsInventJournalTable;
        QueryBuildRange         qbrJournalType, qbrNumOfLines, qbrPosted;
    
        query = new Query();
    
        qbdsInventJournalTable = query.addDataSource(tableNum(InventJournalTable));
        qbdsInventJournalTable.addSelectionField(fieldNum(InventJournalTable, JournalId));
        qbdsInventJournalTable.addGroupByField(fieldNum(InventJournalTable, JournalId));
    
        qbrJournalType = qbdsInventJournalTable.addRange(fieldNum(InventJournalTable, JournalType));
        qbrJournalType.value(SysQuery::value(InventJournalType::project));
        qbrJournalType.status(RangeStatus::Locked);
    
        qbrNumOfLines = qbdsInventJournalTable.addRange(fieldNum(InventJournalTable, NumOfLines));
        qbrNumOfLines.value(SysQuery::range(1, 0));
        qbrNumOfLines.status(RangeStatus::Locked);
    
        qbrPosted = qbdsInventJournalTable.addRange(fieldNum(InventJournalTable, Posted));
        qbrPosted.value(SysQuery::value(NoYes::No));
        qbrPosted.status(RangeStatus::Locked);
    
        qbdsInventJournalTrans = qbdsInventJournalTable.addDataSource(tableNum(InventJournalTrans));
        qbdsInventJournalTrans.addSelectionField(fieldNum(InventJournalTrans, JournalId));
        qbdsInventJournalTrans.addGroupByField(fieldNum(InventJournalTrans, JournalId));
        qbdsInventJournalTrans.addLink(fieldNum(InventJournalTable, JournalId), fieldNum(InventJournalTrans, JournalId));
    
        qbdsWorkOrderLine = qbdsInventJournalTrans.addDataSource(tableNum(WPPWorkOrderLine));
        qbdsWorkOrderLine.addSelectionField(fieldNum(WPPWorkOrderLine, ProjId));
        qbdsWorkOrderLine.addGroupByField(fieldNum(WPPWorkOrderLine, ProjId));
        qbdsWorkOrderLine.addLink(fieldNum(InventJournalTrans, ProjId), fieldNum(WPPWorkOrderLine, ProjId));
    
        queryRun = new SysQueryRun(query);
    
        return queryRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryRun</Name>
				<Source><![CDATA[
    public QueryRun queryRun()
    {
        return queryRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        InventJournalTable  inventJournalTable;
        JournalCheckPost    inventJournalCheckPost;
    
        ttsBegin;
        while (queryRun.next())
        {
            inventJournalTable = queryRun.get(tableNum(InventJournalTable));
    
            inventJournalCheckPost = InventJournalCheckPost::newJournalCheckPost(JournalCheckPostType::Post,
                                                                                 InventJournalTable::find(inventJournalTable.JournalId));
            inventJournalCheckPost.parmTransferErrors(NoYes::Yes);
            inventJournalCheckPost.parmAutoBlock(true);
            inventJournalCheckPost.runOperation();
        }
        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showQueryValues</Name>
				<Source><![CDATA[
    public boolean showQueryValues()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    boolean unpack(container _packedClass)
    {
        Integer         version = conPeek(_packedClass, 1);
        container       packedQuery;
    
        switch (version)
        {
            case #CurrentVersion:
                [version, #CurrentList, packedQuery] = _packedClass;
                if (SysQuery::isPackedOk(packedQuery))
                {
                    queryRun = new QueryRun(packedQuery);
                }
                else
                {
                    queryRun = this.queryBuild();
                }
                break;
    
            default:
                return false;
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static server WPPWorkOrderPostItemJournal construct()
    {
        return new WPPWorkOrderPostItemJournal();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public static client server ClassDescription description()
    {
        return "@DNR6669";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static server void main(Args _args)
    {
        WPPWorkOrderPostItemJournal workOrderPostItemJournal;
    
        workOrderPostItemJournal = WPPWorkOrderPostItemJournal::construct();
    
        if (workOrderPostItemJournal.prompt())
        {
            workOrderPostItemJournal.runOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>