<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DNRSalesAgreementForm_SalesAgreementHeaderDS_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formDataSourceStr(SalesAgreement, SalesAgreementHeader))]
public final class DNRSalesAgreementForm_SalesAgreementHeaderDS_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        next initValue();

        FormRun formRun = this.formRun() as FormRun;
        if(formRun.args().dataset() == tableNum(WPPWorkOrderLine))
        {
            WPPWorkOrderLine workOrderLine = element.args().record();
            ProjTable projTable = workOrderLine.projTable();
            FormDataSource agreementHeaderDefault_ds = formRun.dataSource(formDataSourceStr(SalesAgreement, AgreementHeaderDefault)) as FormDataSource;
            AgreementHeaderDefault agreementHeaderDefault = agreementHeaderDefault_ds.cursor() as AgreementHeaderDefault;
        
            agreementHeaderDefault.initFromProjTable(projTable);
        
            if(workOrderLine.workOrderTable().CustVendAccountType == CustVendACType::Cust
            && formRun.DNRAgreementHeaderDefault_dsValidateProject())
                // Workaround because the compiler says it cannot find the method
                //&& agreementHeaderDefault_ds.validateProject())
            {
                formRun.DNRAgreementHeaderDefault_dsModifiedProject();
                // Workaround because the compiler says it cannot find the method
                //agreementHeaderDefault_ds.modifiedProject();
            }
            else
            {
                agreementHeaderDefault.Project = '';
                agreementHeaderDefault.ProjectDataAreaId = '';
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>