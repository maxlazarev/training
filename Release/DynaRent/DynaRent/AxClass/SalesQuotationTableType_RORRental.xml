<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesQuotationTableType_RORRental</Name>
	<SourceCode>
		<Declaration><![CDATA[
[SalesQuotationTypeFactoryAttribute(QuotationType::RORRental)]
class SalesQuotationTableType_RORRental extends SalesQuotationTableType_Sales
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void  initValue()
    {
        super();
    
        salesQuotationTable.QuotationType = QuotationType::RORRental;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastConfirm</Name>
				<Source><![CDATA[
    display QuotationDocNum lastConfirm()
    {
        CustQuotationConfirmSalesLink    custQuotationConfirmSalesLink;
        CustQuotationConfirmJour         custQuotationConfirmJour;
    
        select firstonly TableId from custQuotationConfirmSalesLink
                order by QuotationDate desc, QuotationConfirmId desc
                where custQuotationConfirmSalesLink.OrigQuotationId == salesQuotationTable.QuotationId
            join QuotationDocNum from custQuotationConfirmJour
                where custQuotationConfirmJour.QuotationConfirmId   == custQuotationConfirmSalesLink.QuotationConfirmId   &&
                      custQuotationConfirmJour.QuotationDate        == custQuotationConfirmSalesLink.QuotationDate &&
                      custQuotationConfirmJour.QuotationType        == QuotationType::RORRental;
        return custQuotationConfirmJour.QuotationDocNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mayConfirmationBeUpdated</Name>
				<Source><![CDATA[
    boolean mayConfirmationBeUpdated()
    {
        return (!salesQuotationTable.isTemplate() &&
                    (salesQuotationTable.QuotationStatus == SalesQuotationStatus::Sent
                     && salesQuotationTable.CustAccount
                     && smmOpportunityTable::find(salesQuotationTable.OpportunityId).Status != smmOpportunityStatus::Postponed
                    )
               );
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORCanTypeBeChanged</Name>
				<Source><![CDATA[
    public boolean RORCanTypeBeChanged(SalesQuotationTable _salesQuotationTable)
    {
        boolean     ret = true;
        DictEnum    dictEnum;
    
        if ((_salesQuotationTable.QuotationType == QuotationType::Sales
        &&   salesQuotationTable.QuotationType != QuotationType::Sales)
        ||  (_salesQuotationTable.QuotationType == QuotationType::Project
        &&   salesQuotationTable.QuotationType != QuotationType::Project))
        {
            dictEnum = new DictEnum(enumNum(QuotationType));
            ret = checkFailed(strFmt("@DNR6715", dictEnum.value2Label(enum2int(_salesQuotationTable.QuotationType)), "@SYS80119", "@SYS107971"));
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORlastQuotationInspection</Name>
				<Source><![CDATA[
    display QuotationIdBase RORlastQuotationInspection()
    {
        CustQuotationSalesLink    custQuotationSalesLink;
        CustQuotationJour         custQuotationJour;
    
        select firstonly TableId from custQuotationSalesLink
        order by QuotationDate desc, QuotationId desc
        where custQuotationSalesLink.OrigQuotationId == salesQuotationTable.QuotationId
            join QuotationDocNum from custQuotationJour
            where custQuotationJour.QuotationId         == custQuotationSalesLink.QuotationId
            &&    custQuotationJour.QuotationDate       == custQuotationSalesLink.QuotationDate
            &&    custQuotationJour.BOBRentalSubStatus  == BOBRentalSubStatus::QuotationInspected;
    
        return custQuotationJour.QuotationDocNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static SalesQuotationTableType  construct(SalesQuotationTable    _salesQuotationTable)
    {
        return new SalesQuotationTableType_RORRental(_salesQuotationTable);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>