<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RORVendDocumentLineInterfaceCls_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(VendDocumentLineInterface))]
public final class RORVendDocumentLineInterfaceCls_Extension
{
    // chain-of-command wrapper methods

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createPurchQuantity</Name>
				<Source><![CDATA[
    protected PurchQuantity createPurchQuantity(DocumentStatus _documentStatus,
        boolean _creditRemaining,
        boolean _setInventNow,
        boolean _setInventQtys)
    {
        PurchQuantity ret = next createPurchQuantity(_documentStatus, _creditRemaining, _setInventNow, _setInventQtys);

        if (ret && _documentStatus == DocumentStatus::RORSubStatus)
        {
            // Set substatus based on current posting substatus to get correct quantity when changing DeliverNow on salesParmLine (partial bulk qty posting).
            this.RORSetSubstatusFromVendInvoiceInfoLine(ret);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RORSetSubstatusFromVendInvoiceInfoLine</Name>
				<Source><![CDATA[
    // extension methods
    private void RORSetSubstatusFromVendInvoiceInfoLine(PurchQuantity _purchQuantity)
    {
        VendDocumentLineMap vendDocumentLineMap = this.parmVendDocumentLine();
        PurchParmLine purchParmLine = vendDocumentLineMap as PurchParmLine;

        if (purchParmLine
        &&  _purchQuantity.RORparmRentalSubStatus() == BOBRentalSubStatus::None)
        {            
            PurchParmTable purchParmTable = purchParmLine.purchParmTable();

            if (purchParmTable.BOBRentalSubStatus != BOBRentalSubStatus::None)
            {            
                _purchQuantity.RORparmRentalSubStatus(purchParmTable.BOBRentalSubStatus);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>