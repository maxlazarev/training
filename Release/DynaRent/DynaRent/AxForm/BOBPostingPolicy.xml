<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>BOBPostingPolicy</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class BOBPostingPolicy extends FormRun
{
    int                 backColorActive;
    int                 backColorInactive;
    boolean             hideWarning;

    // Yellow Message Bar Control
    //Microsoft.Dynamics.Framework.UI.WinForms.Controls.MessagePane       yellowBarPane;
    //Microsoft.Dynamics.Framework.UI.WinForms.Controls.MessageBar        yellowBar;
    //Microsoft.Dynamics.Framework.UI.WinForms.Controls.MessageBarType    yellowBarType;

}
]]></Source>
			</Method>
			<Method>
				<Name>clearWarningTxt</Name>
				<Source><![CDATA[
    public void clearWarningTxt()
    {
        Microsoft.Dynamics.Framework.UI.WinForms.Controls.MessageBarCollection bars;
        int barCount, x;
    
        //bars = yellowBarPane.get_MessageBars();
        //barCount = bars.get_Count();

        //for (x = 0; x < barCount; x++)
        //{
        //    yellowBarPane.Remove(bars.get_Item(x));
        //}
    }

]]></Source>
			</Method>
			<Method>
				<Name>createYellowBarMessagePane</Name>
				<Source><![CDATA[
    private void createYellowBarMessagePane()
    {
        // grab the instance of the message bar control and set its properties
        //yellowBarPane = YellowBarMessagePane.control();
    
        // we're not using any actions, so we don't need the control to be part of the tab sequence
        //yellowBarPane.set_Enabled(false);
    
        // we'll host a single message
        //yellowBarPane.set_MaximumMessageBars(9);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();
    
        backColorActive = WinAPI::RGB2int(255, 255, 255); // white
        backColorInactive = WinAPI::RGB2int(200, 200, 200); // gray
    
        //this.createYellowBarMessagePane();
    }

]]></Source>
			</Method>
			<Method>
				<Name>showWarningMessage</Name>
				<Source><![CDATA[
    public void showWarningMessage(str _message)
    {
        Microsoft.Dynamics.Framework.UI.WinForms.Controls.MessageBarCollection bars;
        int barCount;
    
        // Only add the message if it isn't already there
        //bars = yellowBarPane.get_MessageBars();
        //barCount = bars.get_Count();
        //if (barCount == 0)
        //{
    
            // create a message bar
            //yellowBar = new Microsoft.Dynamics.Framework.UI.WinForms.Controls.MessageBar();
    
            // x++ mechanism for getting enum value, in this case let's make it a warning
            // Microsoft.Dynamics.Framework.UI.WinForms.Controls.MessageBarType::Warning
            //yellowBarType = Microsoft.Dynamics.Framework.UI.WinForms.Controls.MessageBarType::Warning;
    
            //yellowBarPane.BeginUpdate();
            //yellowBar.set_MessageBarType(yellowBarType);
            //yellowBar.set_Enabled(true);
            //yellowBar.set_Text(_message);
            //yellowBarPane.Add(yellowBar);
            //yellowBarPane.EndUpdate();
    
            //this.arrange();
        //}
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    public void updateDesign()
    {
        PostingPolicy_ds.object(fieldnum(BOBPostingPolicy, AllowNegativeRentalInventory)).allowEdit(PostingPolicy.IncludeInAvailabilityOverview);
        PostingPolicy_ds.object(fieldnum(BOBPostingPolicy, RentalSumRounding)).allowEdit(PostingPolicy.IncludeInAvailabilityOverview);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>PostingPolicy</Name>
				<Methods>
					<Method>
						<Name>checkInconsistency</Name>
						<Source><![CDATA[
        public void checkInconsistency()
        {
            Map         availabilityMap;
            Set         availabilityPerOrderSet;
            boolean     showWarning;
        
            boolean checkShowWarning(ABC _checkType, FieldId _fieldId)
            {
                boolean ret;
                ;
        
                switch (_checkType)
                {
                    case ABC::A :
                        if (availabilityMap.exists(_fieldId))
                        {
                            availabilityPerOrderSet = availabilityMap.lookup(_fieldId);
                            if (!availabilityPerOrderSet.in(BOBRentalSubstatus::Delivered)
                            ||  !availabilityPerOrderSet.in(BOBRentalSubstatus::Invoiced))
                            {
                                ret = true;
                            }
                        }
                        break;
        
                    case ABC::B :
                        if (availabilityMap.exists(_fieldId))
                        {
                            availabilityPerOrderSet = availabilityMap.lookup(_fieldId);
                            if (!availabilityPerOrderSet.in(BOBRentalSubstatus::Delivered)
                            ||  !availabilityPerOrderSet.in(BOBRentalSubstatus::Invoiced))
                            {
                                ret = true;
                            }
                        }
                        break;
        
                    case ABC::C :
                        if (availabilityMap.exists(_fieldId))
                        {
                            availabilityPerOrderSet = availabilityMap.lookup(_fieldId);
                            if (!availabilityPerOrderSet.in(BOBRentalSubstatus::Ordered)
                            &&  !availabilityPerOrderSet.in(BOBRentalSubstatus::Confirmed))
                            {
                                ret = true;
                            }
                        }
                        break;
                }
        
                if (ret)
                {
                    showWarning = true;
                }
        
                return ret;
            }
        
            element.clearWarningTxt();
        
            if (PostingPolicy.RecId && PostingPolicy.IncludeInAvailabilityOverview)
            {
                availabilityMap = BOBPostingPolicyRule::getAvailabilitySetup(PostingPolicy.RecId);
        
                if (checkShowWarning(ABC::A, fieldNum(BOBPostingPolicyRule, IsAvailableRental)))
                {
                    element.showWarningMessage(strFmt("@DNR8249",
                        fieldId2pname(tableNum(BOBPostingPolicyRule), fieldNum(BOBPostingPolicyRule, IsAvailableRental)),
                        BOBRentalSubstatus::Delivered,
                        BOBRentalSubstatus::Invoiced));
                }
        
                if (checkShowWarning(ABC::A, fieldNum(BOBPostingPolicyRule, IsAvailableSubRental)))
                {
                    element.showWarningMessage(strFmt("@DNR8249",
                        fieldId2pname(tableNum(BOBPostingPolicyRule), fieldNum(BOBPostingPolicyRule, IsAvailableSubRental)),
                        BOBRentalSubstatus::Delivered,
                        BOBRentalSubstatus::Invoiced));
                }
        
                if (checkShowWarning(ABC::B, fieldNum(BOBPostingPolicyRule, IsAvailableSales)))
                {
                    element.showWarningMessage(strFmt("@DNR8249",
                        fieldId2pname(tableNum(BOBPostingPolicyRule), fieldNum(BOBPostingPolicyRule, IsAvailableSales)),
                        BOBRentalSubstatus::Delivered,
                        BOBRentalSubstatus::Invoiced));
                }
        
                if (checkShowWarning(ABC::A, fieldNum(BOBPostingPolicyRule, IsAvailablePurchase)))
                {
                    element.showWarningMessage(strFmt("@DNR8249",
                        fieldId2pname(tableNum(BOBPostingPolicyRule), fieldNum(BOBPostingPolicyRule, IsAvailablePurchase)),
                        BOBRentalSubstatus::Delivered,
                        BOBRentalSubstatus::Invoiced));
                }
        
                if (checkShowWarning(ABC::C, fieldNum(BOBPostingPolicyRule, IsAvailableRental)))
                {
                    element.showWarningMessage(strFmt("@DNR8250",
                        BOBRentalSubstatus::Ordered,
                        BOBRentalSubstatus::Confirmed,
                        fieldId2pname(tableNum(BOBPostingPolicyRule), fieldNum(BOBPostingPolicyRule, IsAvailableRental))));
                }
        
                if (checkShowWarning(ABC::C, fieldNum(BOBPostingPolicyRule, IsAvailableSubRental)))
                {
                    element.showWarningMessage(strFmt("@DNR8250",
                        BOBRentalSubstatus::Ordered,
                        BOBRentalSubstatus::Confirmed,
                        fieldId2pname(tableNum(BOBPostingPolicyRule), fieldNum(BOBPostingPolicyRule, IsAvailableSubRental))));
                }
        
                if (checkShowWarning(ABC::C, fieldNum(BOBPostingPolicyRule, IsAvailableSales)))
                {
                    element.showWarningMessage(strFmt("@DNR8250",
                        BOBRentalSubstatus::Ordered,
                        BOBRentalSubstatus::Confirmed,
                        fieldId2pname(tableNum(BOBPostingPolicyRule), fieldNum(BOBPostingPolicyRule, IsAvailableSales))));
                }
        
                if (checkShowWarning(ABC::C, fieldNum(BOBPostingPolicyRule, IsAvailablePurchase)))
                {
                    element.showWarningMessage(strFmt("@DNR8250",
                        BOBRentalSubstatus::Ordered,
                        BOBRentalSubstatus::Confirmed,
                        fieldId2pname(tableNum(BOBPostingPolicyRule), fieldNum(BOBPostingPolicyRule, IsAvailablePurchase))));
                }
        
                if (availabilityMap.exists(fieldNum(BOBPostingPolicyRule, IsAvailableSales)))
                {
                    availabilityPerOrderSet = availabilityMap.lookup(fieldNum(BOBPostingPolicyRule, IsAvailableSales));
        
                    if (availabilityPerOrderSet.in(BOBRentalSubstatus::Returned))
                    {
                        element.showWarningMessage(strFmt("@DNR8468",
                            BOBRentalSubstatus::Returned,
                            fieldId2pname(tableNum(BOBPostingPolicyRule), fieldNum(BOBPostingPolicyRule, IsAvailableSales))));
                    }
                }
        
                if (availabilityMap.exists(fieldNum(BOBPostingPolicyRule, IsAvailablePurchase)))
                {
                    availabilityPerOrderSet = availabilityMap.lookup(fieldNum(BOBPostingPolicyRule, IsAvailablePurchase));
                    if (availabilityPerOrderSet.in(BOBRentalSubstatus::Returned))
                    {
                        element.showWarningMessage(strFmt("@DNR8468",
                            BOBRentalSubstatus::Returned,
                            fieldId2pname(tableNum(BOBPostingPolicyRule), fieldNum(BOBPostingPolicyRule, IsAvailablePurchase))));
                    }
                }
            }
        
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
        
            ret = super();
        
            this.checkInconsistency();
            element.updateDesign();
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>AllowObjectAssignOverlap</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret = super();
        
                if (PostingPolicy.AllowObjectAssignOverlap && Box::yesNo("@DNR:AllowOverlapConfirmText", DialogButton::No) == DialogButton::No)
                {
                    ret = false;
                }
        
                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>IncludeInAvailabilityOverview</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
            
                if(PostingPolicy.IncludeInAvailabilityOverview)
                {
                    PostingPolicy.RentalSumRounding = BOBRentalSumRoundingRange::Hour24;
                }
                else
                {
                    PostingPolicy.AllowNegativeRentalInventory = NoYes::No;
                    PostingPolicy.RentalSumRounding = BOBRentalSumRoundingRange::None;
                }
            
                element.updateDesign();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>PostingPolicyRule</Name>
				<Methods>
					<Method>
						<Name>enableAvailabilityChekbox</Name>
						<Source><![CDATA[
        private void enableAvailabilityChekbox()
        {
            boolean includeInOverview = PostingPolicy.IncludeInAvailabilityOverview;
            ;
        
            PostingPolicyRule_ds.object(fieldNum(BOBPostingPolicyRule, IsAvailablePurchase)).allowEdit(includeInOverview && PostingPolicyRule.checkAvailabilitySetupCombination(fieldNum(BOBPostingPolicyRule, IsAvailablePurchase)));
            PostingPolicyRule_ds.object(fieldNum(BOBPostingPolicyRule, IsAvailableSales)).allowEdit(includeInOverview && PostingPolicyRule.checkAvailabilitySetupCombination(fieldNum(BOBPostingPolicyRule, IsAvailableSales)));
            PostingPolicyRule_ds.object(fieldNum(BOBPostingPolicyRule, IsAvailableSubrental)).allowEdit(includeInOverview && PostingPolicyRule.checkAvailabilitySetupCombination(fieldNum(BOBPostingPolicyRule, IsAvailableSubrental)));
            PostingPolicyRule_ds.object(fieldNum(BOBPostingPolicyRule, IsAvailableRental)).allowEdit(includeInOverview);
            PostingPolicyRule_ds.object(fieldNum(BOBPostingPolicyRule, IsAvailableWorkOrder)).allowEdit(includeInOverview);
        
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
        
            this.enableAvailabilityChekbox();
        
            ret = super();
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            super();
        
            this.clearDisplayOption(this.cursor());
        
            PostingPolicy_ds.checkInconsistency();
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayOption</Name>
						<Source><![CDATA[
        public void displayOption(Common _record, FormRowDisplayOption _options)
        {
            BOBPostingPolicyRule rule = _record;
            ;
        
            _options.backColor(rule.RentalControl || rule.SubRentalControl ?
                               backColorActive :
                               backColorInactive);
        
            super(_record, _options);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="" />
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>PostingPolicy</Name>
			<Table>BOBPostingPolicy</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AllowNegativeRentalInventory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AllowObjectAssignOverlap</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncludeInAvailabilityOverview</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PolicyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RentalSumRounding</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>PostingPolicyRule</Name>
			<Table>BOBPostingPolicyRule</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsAvailablePurchase</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsAvailableRental</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsAvailableSales</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsAvailableSubRental</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsAvailableWorkOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingPolicyRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RentalControl</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SubRentalControl</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SubStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>PostingPolicy</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<StartPosition>Last</StartPosition>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@DNR6031</Caption>
		<Pattern xmlns="">SimpleListDetails</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<Style xmlns="">SimpleListDetails</Style>
		<TitleDataSource xmlns="">PostingPolicy</TitleDataSource>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>429496729</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneTabControl">
						<Name>ActionPaneTab</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ActionPaneTab</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls />
						<AlignChild>No</AlignChild>
						<AlignChildren>No</AlignChildren>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GridContainer</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>858993458</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<TypeName>str</TypeName>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
									<TypeName>str</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>Grid</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToContent</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Grid_PolicyId</Name>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>PolicyId</DataField>
								<DataSource>PostingPolicy</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Grid_Name</Name>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Name</DataField>
								<DataSource>PostingPolicy</DataSource>
							</AxFormControl>
						</Controls>
						<AlternateRowShading>No</AlternateRowShading>
						<DataGroup>General</DataGroup>
						<DataSource>PostingPolicy</DataSource>
						<GridLinesStyle>Vertical</GridLinesStyle>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>List</Style>
					</AxFormControl>
				</Controls>
				<RightMargin>0</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DetailsHeader</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>DetailsHeader_PolicyId</Name>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>PolicyId</DataField>
						<DataSource>PostingPolicy</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>DetailsHeader_Name</Name>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>Name</DataField>
						<DataSource>PostingPolicy</DataSource>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<DataSource>PostingPolicy</DataSource>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>DetailsTab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPageAvailability</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BOBRentalInventory</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>BOBRentalInventory_IncludeInAvailabilityOverview</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>IncludeInAvailabilityOverview</DataField>
										<DataSource>PostingPolicy</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>BOBRentalInventory_AllowNegativeRentalInventory</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AllowNegativeRentalInventory</DataField>
										<DataSource>PostingPolicy</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>BOBRentalInventory_AllowObjectAssignOverlap</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>AllowObjectAssignOverlap</DataField>
										<DataSource>PostingPolicy</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>BOBRentalInventory_RentalSumRoundingRangeOutbound</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>RentalSumRounding</DataField>
										<DataSource>PostingPolicy</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<DataGroup>BOBRentalInventory</DataGroup>
								<DataSource>PostingPolicy</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<HideIfEmpty>No</HideIfEmpty>
						<Caption>@DNR1298</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPagePolicyRules</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>Custom</Pattern>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridPolicyRules</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>GridPolicyRules_SubStatus</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>SubStatus</DataField>
										<DataSource>PostingPolicyRule</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>GridPolicyRules_RentalControl</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>RentalControl</DataField>
										<DataSource>PostingPolicyRule</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>GridPolicyRules_SubRentalControl</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>SubRentalControl</DataField>
										<DataSource>PostingPolicyRule</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>GridPolicyRules_IsAvailablePurchase</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>IsAvailablePurchase</DataField>
										<DataSource>PostingPolicyRule</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>GridPolicyRules_IsAvailableSubRental</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>IsAvailableSubRental</DataField>
										<DataSource>PostingPolicyRule</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>GridPolicyRules_IsAvailableSales</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>IsAvailableSales</DataField>
										<DataSource>PostingPolicyRule</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>GridPolicyRules_IsAvailableRental</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>IsAvailableRental</DataField>
										<DataSource>PostingPolicyRule</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>GridPolicyRules_IsAvailableWorkOrder</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>IsAvailableWorkOrder</DataField>
										<DataSource>PostingPolicyRule</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>General</DataGroup>
								<DataSource>PostingPolicyRule</DataSource>
								<ShowRowLabels>No</ShowRowLabels>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS133140</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>