<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>BOBMaintenanceTask</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class BOBMaintenanceTask extends FormRun
{
    WPPWorkOrderTable               workOrderTable;
    WPPWorkOrderView                workOrderView;
    WPPWorkOrderLineListPageView    workOrderLineListPageView;

    BOBObjectTableRecId             objectTableRecId;
    ProjGroupId                     projGroupId;
    WPPWorkOrderId                  workOrderId;
    InventSerialId                  inventSerialId;
    AssetId                         assetId;
    boolean                         showOkCancelButtonGroup;
    ProjGroupId                     projGroupIdFilterValue;
    InventSerialId                  inventSerialIdFilterValue;
    AssetId                         assetIdFilterValue;

    QueryBuildRange                 qbrProjGroupId;
}
]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        FormDataSource          formDataSource;
        BOBMaintenanceTaskForm  maintenanceTaskForm;
    
        if (element.closedOk())
        {
            maintenanceTaskForm = BOBMaintenanceTaskForm::construct();
            maintenanceTaskForm.mergeDelayedMaintenance(MaintenanceTaskView_ds, workOrderId);
        }
    
        if (showOkCancelButtonGroup)
        {
            if (element.args().parmObject())
            {
                new MenuFunction(menuitemDisplayStr(WPPWorkOrderTableForEdit), MenuItemType::Display).run(element.args());
            }
            else
            if (element.args().dataset() == tableNum(WPPWorkOrderTable))
            {
                formDataSource = FormDataUtil::getFormDataSource(element.args().record());
    
                if (formDataSource)
                {
                    formDataSource.research(true);
                    formDataSource.refresh();
                }
            }
        }
    
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    [SuppressBPWarningAttribute("BPCheckInvalidInitFormMethodWarning", "Validation of caller must be performed before invoking super()")]
    public void init()
    {
        showOkCancelButtonGroup = element.args().menuItemName() == menuitemDisplayStr(BOBMaintenanceTaskMove_Delayed) ||
                                  element.args().menuItemName() == menuitemDisplayStr(BOBMaintenanceTaskMove_Future);
    
        this.initFromCaller();
    
        super();
    
        element.updateDesign();
        element.setSelection();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCaller</Name>
				<Source><![CDATA[
    private void initFromCaller()
    {
        if (element.args() && element.args().caller() && element.args().record())
        {
            switch (element.args().dataset())
            {
                case tableNum(WPPWorkOrderTable):
                    workOrderTable      = element.args().record();
                    objectTableRecId    = workOrderTable.BOBObjectTableRecId;
                    projGroupId         = workOrderTable.ProjGroupId;
                    workOrderId         = workOrderTable.WorkOrderId;

                    break;

                case tableNum(WPPWorkOrderView):
                    workOrderView       = element.args().record();
                    objectTableRecId    = workOrderView.BOBObjectTableRecId;
                    projGroupId         = workOrderView.ProjGroupId;
                    workOrderId         = workOrderView.WorkOrderId;

                    break;

                case tableNum(WPPWorkOrderLineListPageView):
                    workOrderLineListPageView   = element.args().record();
                    objectTableRecId            = workOrderLineListPageView.BOBObjectTableRecId;
                    projGroupId                 = workOrderLineListPageView.ProjGroupId;
                    workOrderId                 = workOrderLineListPageView.WorkOrderId;

                    break;

                case tableNum(WPPWorkOrderLine):
                    WPPWorkOrderLine workOrderLine = element.args().record();

                    objectTableRecId = workOrderLine.workOrderTable().BOBObjectTableRecId;

                    break;

                case tableNum(BOBObjectTable):
                    BOBObjectTable objectTable = element.args().record();

                    objectTableRecId = objectTable.RecId;

                    break;

                case tableNum(BOBObjectView):
                    BOBObjectView objectView = element.args().record();

                    objectTableRecId = BOBObjectTable::findObjectId(objectView.ObjectId).RecId;

                    break;

                case tableNum(BOBObjectViewV2):
                    BOBObjectViewV2 objectViewV2 = element.args().record();

                    objectTableRecId = BOBObjectTable::findObjectId(objectViewV2.ObjectId).RecId;

                    break;

                case tableNum(RORRentalOrderLineView):
                    RORRentalOrderLineView rentalOrderLineView = element.args().record();

                    objectTableRecId = BOBObjectTable::findInventSerialId(rentalOrderLineView.inventSerialId).RecId;

                    break;

                case tableNum(RORRentalFuelMgtView):
                    RORRentalFuelMgtView rentalFuelMgtView = element.args().record();

                    objectTableRecId = BOBObjectTable::findInventSerialId(rentalFuelMgtView.InventSerialId).RecId;

                    break;

                case tableNum(BOBTmpObjectAvailability):
                    BOBTmpObjectAvailability objectAvailability = element.args().record();

                    objectTableRecId = BOBObjectTable::findInventSerialId(objectAvailability.inventSerialId).RecId;

                    break;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSelection</Name>
				<Source><![CDATA[
    private void setSelection()
    {
        if (workOrderTable)
        {
            ProjGroupIdFilter.text(workOrderTable.ProjGroupId);
            projGroupIdFilterValue = workOrderTable.ProjGroupId;
        }
        else
        if (workOrderView)
        {
            ProjGroupIdFilter.text(workOrderView.ProjGroupId);
            projGroupIdFilterValue = workOrderView.ProjGroupId;
        }
        else
        if (workOrderLineListPageView)
        {
            ProjGroupIdFilter.text(workOrderLineListPageView.ProjGroupId);
            projGroupIdFilterValue = workOrderLineListPageView.ProjGroupId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    private void updateDesign()
    {
        if (!element.args().dataset())
        {
            InventSerialIdFilter.visible(true);
            //AssetIdFilter.visible(true);
        }
    
        if (!showOkCancelButtonGroup)
        {
            //ButtonGroupOkCancel.visible(false);
            grid.showRowLabels(false);
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>MaintenanceTaskView</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            this.modifyQuery();
        
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildDataSource        qbdsMaintenanceTaskView;
            BOBDelayedFutureMaintenance delayedFutureMaintenance;
        
            delayedFutureMaintenance = element.args().parmEnum();
        
            super();
        
            qbdsMaintenanceTaskView = this.query().dataSourceTable(tableNum(BOBMaintenanceTaskView));
        
            qbdsMaintenanceTaskView.addSortField(fieldNum(BOBMaintenanceTaskView, WorkOrderId), SortOrder::Ascending);
            qbrProjGroupId = qbdsMaintenanceTaskView.addRange(fieldNum(BOBMaintenanceTaskView, ProjGroupId));
        
            switch (delayedFutureMaintenance)
            {
                case BOBDelayedFutureMaintenance::Delayed:
                    qbdsMaintenanceTaskView.addRange(fieldNum(BOBMaintenanceTaskView, RequestedStartDateTime)).value(SysQuery::range(DateTimeUtil::minValue(), DateTimeUtil::getSystemDateTime()));
                    break;
        
                case BOBDelayedFutureMaintenance::Future:
                    qbdsMaintenanceTaskView.addRange(fieldNum(BOBMaintenanceTaskView, RequestedStartDateTime)).value(SysQuery::range(DateTimeUtil::getSystemDateTime(), DateTimeUtil::maxValue()));
                    break;
        
                default:
                    // Do nothing
            }
        
            if (objectTableRecId)
            {
                qbdsMaintenanceTaskView.addRange(fieldNum(BOBMaintenanceTaskView, ObjectTableRecId)).value(SysQuery::value(objectTableRecId));
            }
        
            if ((workOrderTable || workOrderView || workOrderLineListPageView)
            &&   showOkCancelButtonGroup)
            {
                if (workOrderTable)
                {
                    qbdsMaintenanceTaskView.addRange(fieldNum(BOBMaintenanceTaskView, WorkOrderId)).value(SysQuery::valueNot(workOrderTable.WorkOrderId));
                }
                else
                if (workOrderView)
                {
                    qbdsMaintenanceTaskView.addRange(fieldNum(BOBMaintenanceTaskView, WorkOrderId)).value(SysQuery::valueNot(workOrderView.WorkOrderId));
                }
                else
                if (workOrderLineListPageView)
                {
                    qbdsMaintenanceTaskView.addRange(fieldNum(BOBMaintenanceTaskView, WorkOrderId)).value(SysQuery::valueNot(workOrderLineListPageView.WorkOrderId));
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>modifyQuery</Name>
						<Source><![CDATA[
        public void modifyQuery()
        {
            Query                   query;
            QueryBuildDataSource    qbdsMaintenanceTaskView;
            QueryBuildDataSource    qbdsObjectTable;
            QueryBuildRange         qbrInventSerialId;
            QueryBuildRange         qbrAssetId;
        
            query = MaintenanceTaskView_ds.query();
            qbdsMaintenanceTaskView = query.dataSourceTable(tableNum(BOBMaintenanceTaskView));
        
            qbrProjGroupId.value(projGroupIdFilterValue ? projGroupIdFilterValue : SysQuery::valueUnlimited());
        
            if (inventSerialIdFilterValue)
            //||  assetIdFilterValue)
            {
                qbdsObjectTable = SysQuery::findOrCreateDataSource(query, tableNum(BOBObjectTable), tableNum(BOBMaintenanceTaskView));
                qbdsObjectTable.addLink(fieldNum(BOBMaintenanceTaskView, ObjectTableRecId), fieldNum(BOBObjectTable, RecId));
                qbdsObjectTable.joinMode(JoinMode::ExistsJoin);
        
                qbrInventSerialId = SysQuery::findOrCreateRange(qbdsObjectTable, fieldNum(BOBObjectTable, InventSerialId));
                //qbrAssetId = SysQuery::findOrCreateRange(qbdsObjectTable, fieldNum(BOBObjectTable, AssetId));
        
                qbrInventSerialId.value(inventSerialIdFilterValue ? inventSerialIdFilterValue : SysQuery::valueUnlimited());
                //qbrAssetId.value(assetIdFilterValue ? assetIdFilterValue : SysQuery::valueUnlimited());
            }
            else
            {
                qbdsObjectTable = query.dataSourceTable(tableNum(BOBObjectTable));
        
                if (qbdsObjectTable)
                {
                    qbdsObjectTable.relations(false);
                    qbdsObjectTable.joinMode(JoinMode::OuterJoin);
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>TaskId</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                Args    args;
                FormRun formRun;

                args = new Args();
                args.name(formStr(WPPWorkOrderTaskTable));
                args.lookupField(fieldNum(WPPWorkOrderTaskTable, TaskId));
                args.lookupValue(MaintenanceTaskView.TaskId);

                formRun = ClassFactory::formRunClassOnClient(args);
                formRun.init();
                formRun.run();
                formRun.wait();
                formRun.detach();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>WorkOrderId</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                Args    args;
                FormRun formRun;

                args = new Args();
                args.name(formStr(WPPWorkOrderTable));
                args.lookupField(fieldNum(WPPWorkOrderTable, WorkOrderId));
                args.lookupValue(MaintenanceTaskView.WorkOrderId);

                formRun = ClassFactory::formRunClassOnClient(args);
                formRun.init();
                formRun.run();
                formRun.wait();
                formRun.detach();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>WPPProjTransactionView</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildDataSource    qbdsProjTransactionView;
        
            super();
        
            qbdsProjTransactionView = this.query().dataSourceTable(tableNum(WPPProjTransactionView));
            qbdsProjTransactionView.addLink(fieldNum(BOBMaintenanceTaskView, ProjId), fieldNum(WPPProjTransactionView, ProjId), MaintenanceTaskView_ds.name());
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>AdditionalHeaderNotes</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args args;
        
            if (MaintenanceTaskView)
            {
                args = new Args();
                args.caller(element);
                args.record(WPPWorkOrderTable::find(MaintenanceTaskView.WorkOrderId));
        
                this.menufunction().run(args);
            }
            else
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AdditionalLineNotes</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args args;
        
            if (MaintenanceTaskView)
            {
                args = new Args();
                args.caller(element);
                args.record(WPPWorkOrderLine::findTaskId(MaintenanceTaskView.WorkOrderId, MaintenanceTaskView.TaskId));
        
                this.menufunction().run(args);
            }
            else
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjGroupIdFilter</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
        
            projGroupIdFilterValue = this.valueStr();
            MaintenanceTaskView_ds.executeQuery();
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventSerialIdFilter</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            InventSerial::BOBlookupInventSerialId(this);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
        
            inventSerialIdFilterValue = this.valueStr();
            MaintenanceTaskView_ds.executeQuery();
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AssetIdFilter</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
        
            assetIdFilterValue = this.valueStr();
            MaintenanceTaskView_ds.executeQuery();
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>MaintenanceTaskView</Name>
			<Table>BOBMaintenanceTaskView</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExecutionGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ObjectTableRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RequestedEndDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RequestedStartDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Status</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaskId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkOrderId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>WPPProjTransactionView</Name>
			<Table>WPPProjTransactionView</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Reference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>MaintenanceTaskView</JoinSource>
			<LinkType>NotExistJoin</LinkType>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@DNR7447</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">SimpleList</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<StatusBarStyle xmlns="">SimpleWithoutClose</StatusBarStyle>
		<Style xmlns="">SimpleList</Style>
		<TitleDataSource xmlns="">MaintenanceTaskView</TitleDataSource>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>268435455</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>DNRAdditionalNotes</Name>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@DNR7146</HelpText>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>AdditionalHeaderNotes</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>DNRAdditionalNoteTable</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
										<Text>@DNR6388</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>AdditionalLineNotes</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>DNRAdditionalNoteTable</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
										<Text>@DNR6389</Text>
									</AxFormControl>
								</Controls>
								<NeedsRecord>Yes</NeedsRecord>
								<Text>@SYS94241</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>CustomFilterGroup</Name>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>CustomAndQuickFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<TypeName>str</TypeName>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
									<TypeName>str</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>ProjectObject</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ProjGroupIdFilter</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>ProjGroupId</ExtendedDataType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventSerialIdFilter</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>InventSerialId</ExtendedDataType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>AssetIdFilter</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>AssetId</ExtendedDataType>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>HorizontalLeft</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>WPPWorkOrderLine_WorkOrderId</Name>
						<ElementPosition>536870910</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>WorkOrderId</DataField>
						<DataSource>MaintenanceTaskView</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>WPPWorkOrderLine_TaskId</Name>
						<ElementPosition>805306365</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>TaskId</DataField>
						<DataSource>MaintenanceTaskView</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>WPPWorkOrderTaskTable_Description</Name>
						<ElementPosition>1073741820</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>Description</DataField>
						<DataSource>MaintenanceTaskView</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateTimeControl">
						<Name>WPPWorkOrderLine_RequestedStartDateTime</Name>
						<ElementPosition>1342177275</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>DateTime</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>RequestedStartDateTime</DataField>
						<DataSource>MaintenanceTaskView</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateTimeControl">
						<Name>WPPWorkOrderLine_RequestedEndDateTime</Name>
						<ElementPosition>1610612730</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>DateTime</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>RequestedEndDateTime</DataField>
						<DataSource>MaintenanceTaskView</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>WPPWorkOrderLine_ExecutionGroupId</Name>
						<ElementPosition>1879048185</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>ExecutionGroupId</DataField>
						<DataSource>MaintenanceTaskView</DataSource>
					</AxFormControl>
				</Controls>
				<DataSource>MaintenanceTaskView</DataSource>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>