<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>BOBRentalInventOnHand</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class BOBRentalInventOnHand extends FormRun
{
    BOBTmpOnHandRentalInventoryForm tmpOnHandRentalInventoryForm;
    UnitQty orderQty;
    int negativeQtyColor;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        negativeQtyColor = WinAPI::RGB2int(255,0,0);
        tmpOnHandRentalInventoryForm = BOBTmpOnHandRentalInventoryForm::construct();
    
        super();
    
        element.initFromCaller();
        TmpRentalInventOnHand_ds.AutoQuery(false);
    
        TmpRentalInventOnHand_ds.updateDesign();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCaller</Name>
				<Source><![CDATA[
    private void initFromCaller()
    {
        PurchLine           purchLine;
        SalesLine           salesLine;
        SalesParmLine       salesParmLine;
        SalesQuotationLine  salesQuotationLine;
        WMSOrder            wmsOrder;
        BOBObjectTable      objectTable;
        BOBObjectView       objectView;
    
        switch (element.args().dataset())
        {
            case tableNum(PurchLine):
                purchLine = element.args().record();
                element.initFromPurchLine(purchLine);
                break;
    
            case tableNum(SalesLine):
                salesLine = element.args().record();
                element.initFromSalesLine(salesLine);
                break;
    
            case tableNum(SalesParmLine):
                salesParmLine = element.args().record();
                salesLine = salesParmLine.salesLine();
                element.initFromSalesLine(salesLine);
                break;
    
            case tableNum(SalesQuotationLine):
                salesQuotationLine = element.args().record();
                element.initFromSalesQuotationLine(salesQuotationLine);
                break;
    
            case tableNum(WMSOrder):
                wmsOrder = element.args().record();
                salesLine = SalesLine::findInventTransId(wmsOrder.inventTransId);
                element.initFromSalesLine(salesLine);
                break;
    
            case tableNum(BOBObjectTable):
                objectTable = element.args().record();
                element.initFromObjectTable(objectTable);
                break;
    
            case tableNum(BOBObjectView):
                objectView = element.args().record();
                objectTable = BOBObjectTable::findObjectId(objectView.ObjectId);
                element.initFromObjectTable(objectTable);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromObjectTable</Name>
				<Source><![CDATA[
    private void initFromObjectTable(BOBObjectTable _objectTable)
    {
        #TimeConstants
    
        ctrlFilterRentalTypeId.text(_objectTable.RentalTypeId);
        ctrlFilterInventLocationId.text(DNRUserDefaults::find().InventLocationId);
        ctrlFilterFromDate.dateValue(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
        ctrlFilterToDate.dateValue(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()) + #daysPerWeek);
    
        if(ctrlFilterRentalTypeId.text() && ctrlFilterInventLocationId.text())
        {
            element.refresh();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPurchLine</Name>
				<Source><![CDATA[
    private void initFromPurchLine(PurchLine _purchLine)
    {
        RORRentalDateTimes  rentalDateTimes;
        ToDate              offRentDate;
    
        if (_purchLine.RORTradeType == RORTradeType::SubRental)
        {
            rentalDateTimes = RORRentalDateTimes::findReference(_purchLine.TableId, _purchLine.RecId);
            offRentDate = DateTimeUtil::date(rentalDateTimes.OffRentDateTime);
        }
        else
        {
            rentalDateTimes.OnRentDateTime = DateTimeUtil::newDateTime(_purchLine.ConfirmedDlv ? _purchLine.ConfirmedDlv : _purchLine.DeliveryDate, 0);
            offRentDate = DateTimeUtil::date(rentalDateTimes.OnRentDateTime) + 14;
        }
    
        orderQty = tmpOnHandRentalInventoryForm.getTotalQtyPerItem(_purchLine.TableId, _purchLine.PurchId, _purchLine.ItemId);
    
        ctrlFilterRentalTypeId.text(_purchLine.BOBRentalTypeId);
        ctrlFilterInventLocationId.text(_purchLine.inventDim().InventLocationId);
        ctrlFilterFromDate.dateValue(DateTimeUtil::date(rentalDateTimes.OnRentDateTime));
        ctrlFilterToDate.dateValue(offRentDate ? offRentDate : DateTimeUtil::date(rentalDateTimes.ExpectedOffRentDateTime));
        ctrlFilterShowNegativeInventoryOnly.value(element.args().menuItemName() != menuitemDisplayStr(BOBRentalInventOnHand));
    
        element.refresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSalesLine</Name>
				<Source><![CDATA[
    private void initFromSalesLine(SalesLine _salesLine)
    {
        RORRentalDateTimes  rentalDateTimes;
        ToDate              offRentDate;
    
        if (_salesLine.RORTradeType == RORTradeType::Rental || _salesLine.RORTradeType == RORTradeType::SubRental)
        {
            rentalDateTimes = RORRentalDateTimes::findReference(_salesLine.TableId, _salesLine.RecId);
            offRentDate = DateTimeUtil::date(rentalDateTimes.OffRentDateTime);
        }
        else
        {
            rentalDateTimes.OnRentDateTime = DateTimeUtil::newDateTime(_salesLine.ReceiptDateRequested ? _salesLine.ReceiptDateRequested : _salesLine.ReceiptDateConfirmed, 0);
            offRentDate = DateTimeUtil::date(rentalDateTimes.OnRentDateTime) + 14;
        }
    
        orderQty = tmpOnHandRentalInventoryForm.getTotalQtyPerItem(_salesLine.TableId, _salesLine.SalesId, _salesLine.ItemId);
    
        ctrlFilterRentalTypeId.text(_salesLine.BOBRentalTypeId());
        ctrlFilterInventLocationId.text(_salesLine.inventDim().InventLocationId);
        ctrlFilterFromDate.dateValue(DateTimeUtil::date(rentalDateTimes.OnRentDateTime));
        ctrlFilterToDate.dateValue(offRentDate ? offRentDate : DateTimeUtil::date(rentalDateTimes.ExpectedOffRentDateTime));
        ctrlFilterShowNegativeInventoryOnly.value(element.args().menuItemName() != menuitemDisplayStr(BOBRentalInventOnHand));
    
        element.refresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSalesQuotationLine</Name>
				<Source><![CDATA[
    private void initFromSalesQuotationLine(SalesQuotationLine _salesQuotationLine)
    {
        RORRentalDateTimes  rentalDateTimes;
        ToDate              offRentDate;
    
        if (_salesQuotationLine.RORTradeType == RORTradeType::Rental || _salesQuotationLine.RORTradeType == RORTradeType::SubRental)
        {
            rentalDateTimes = RORRentalDateTimes::findReference(_salesQuotationLine.TableId, _salesQuotationLine.RecId);
            offRentDate = DateTimeUtil::date(rentalDateTimes.OffRentDateTime);
        }
        else
        {
            rentalDateTimes.OnRentDateTime = DateTimeUtil::newDateTime(_salesQuotationLine.ReceiptDateRequested, 0);
            offRentDate = DateTimeUtil::date(rentalDateTimes.OnRentDateTime) + 14;
        }
    
        orderQty = tmpOnHandRentalInventoryForm.getTotalQtyPerItem(_salesQuotationLine.TableId, _salesQuotationLine.QuotationId, _salesQuotationLine.ItemId);
    
        ctrlFilterRentalTypeId.text(_salesQuotationLine.BOBRentalTypeId());
        ctrlFilterInventLocationId.text(_salesQuotationLine.inventDim().InventLocationId);
        ctrlFilterFromDate.dateValue(DateTimeUtil::date(rentalDateTimes.OnRentDateTime));
        ctrlFilterToDate.dateValue(offRentDate ? offRentDate : DateTimeUtil::date(rentalDateTimes.ExpectedOffRentDateTime));
        ctrlFilterShowNegativeInventoryOnly.value(element.args().menuItemName() != menuitemDisplayStr(BOBRentalInventOnHand));
    
        element.refresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>refresh</Name>
				<Source><![CDATA[
    public void refresh()
    {
        boolean refresh;
    
        refresh = true;
    
        if (!ctrlFilterRentalTypeId.text())
        {
            warning(strFmt("@DNR7115", "@DNR4420"));
    
            refresh = false;
        }
    
        if (!ctrlFilterFromDate.dateValue())
        {
            warning(strFmt("@DNR7115", "@SYS5209"));
    
            refresh = false;
        }
    
        if (!ctrlFilterToDate.dateValue())
        {
            warning(strFmt("@DNR7115", "@SYS14656"));
    
            refresh = false;
        }
    
        if (ctrlFilterFromDate.dateValue() > ctrlFilterToDate.dateValue())
        {
            warning(strFmt("@DNR1125", "@SYS312576", "@SYS312575"));
    
            refresh = false;
        }
    
        if (refresh)
        {
            tmpOnHandRentalInventoryForm.setAvailableInventLocationSet(ctrlFilterRentalTypeId.text(),
                                                                       ctrlFilterInventLocationId.text(),
                                                                       ctrlFilterFromDate.dateValue(),
                                                                       ctrlFilterToDate.dateValue());
            TmpRentalInventOnHand.setTmpData(tmpOnHandRentalInventoryForm.populateTmpBuffer(ctrlFilterRentalTypeId.text(),
                                                                                            ctrlFilterInventLocationId.text(),
                                                                                            ctrlFilterFromDate.dateValue(),
                                                                                            ctrlFilterToDate.dateValue(),
                                                                                            ctrlFilterShowNegativeInventoryOnly.checked(),
                                                                                            orderQty));
            TmpRentalInventOnHand_ds.executeQuery();
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>TmpRentalInventOnHand</Name>
				<Methods>
					<Method>
						<Name>displayOption</Name>
						<Source><![CDATA[
        public void displayOption(Common _record, FormRowDisplayOption _options)
        {
            BOBTmpRentalInventOnHand    tmpRentalInventOnHandLocal = _record;
        
            if (tmpRentalInventOnHandLocal.Available < 0)
            {
                _options.backColor(negativeQtyColor);
                _options.affectedElementsByControl(displayAvailable.id());
            }
        
        
            super(_record, _options);
        }

]]></Source>
					</Method>
					<Method>
						<Name>updateDesign</Name>
						<Source><![CDATA[
        public void updateDesign()
        {
            //TmpRentalInventOnHand_ds.object(fieldNum(BOBTmpRentalInventOnHand, AvailableInclOrder)).visible(element.args().dataset() == tableNum(SalesLine));
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
        
            this.query().dataSourceTable(tableNum(BOBTmpRentalInventOnHand)).clearDynalinks();
        
            this.cacheAddMethod(tableMethodStr(BOBTmpRentalInventOnHand, displayDateDayName));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>TmpRentalInventOnHand_InventLocationId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>sort</Name>
						<Source><![CDATA[
        public int sort(SortOrder _sortDirection)
        {
            int ret;
        
            //ret = super(_sortDirection);
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TmpOnHandRentalInventory_TransDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>sort</Name>
						<Source><![CDATA[
        public int sort(SortOrder _sortDirection)
        {
            int ret;
        
            //ret = super(_sortDirection);
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TmpOnHandRentalInventory_AvailableInclOrder</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>sort</Name>
						<Source><![CDATA[
        public int sort(SortOrder _sortDirection)
        {
            int ret;
        
            //ret = super(_sortDirection);
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>displayNotYetReturned</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            Args            args;
            ;
        
            args = new Args();
            args.caller(element);
            args.record(TmpRentalInventOnHand);
            args.parmEnum(BOBRentalOnHandStatus::NotYetReturned);
        
            new MenuFunction(menuitemDisplayStr(BOBRentalTrans), MenuItemType::Display).run(args);
        
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>displayNotYetDelivered</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            Args            args;
            ;
        
            args = new Args();
            args.caller(element);
            args.record(TmpRentalInventOnHand);
            args.parmEnum(BOBRentalOnHandStatus::NotYetDelivered);
        
            new MenuFunction(menuitemDisplayStr(BOBRentalTrans), MenuItemType::Display).run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<IsObsolete>Yes</IsObsolete>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TmpRentalInventOnHand</Name>
			<Table>BOBTmpRentalInventOnHand</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Available</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AvailableInclOrder</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NotYetDelivered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NotYetReturned</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RentalTypeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<Index>LineNumIdx</Index>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@DNR5790</Caption>
		<Pattern xmlns="">SimpleList</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<Style xmlns="">SimpleList</Style>
		<TitleDataSource xmlns="">TmpRentalInventOnHand</TitleDataSource>
		<Width xmlns="">650</Width>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>429496729</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneTabControl">
						<Name>ActionPaneTab</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ActionPaneTab</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls />
						<AlignChild>No</AlignChild>
						<AlignChildren>No</AlignChildren>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>CustomFilterGroup</Name>
				<ElementPosition>1288490187</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>CustomAndQuickFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<TypeName>str</TypeName>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
									<TypeName>str</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ctrlFilterRentalTypeId</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>613566756</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>BOBRentalTypeId</ExtendedDataType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ctrlFilterInventLocationId</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>920350134</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>InventLocationId</ExtendedDataType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateControl">
						<Name>ctrlFilterFromDate</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1227133512</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Date</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>FromDate</ExtendedDataType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateControl">
						<Name>ctrlFilterToDate</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1533916890</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Date</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>ToDate</ExtendedDataType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>ctrlFilterShowNegativeInventoryOnly</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1840700268</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Label>@DNR7116</Label>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>TmpRentalInventOnHand_InventLocationId</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>397682156</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>InventLocationId</DataField>
						<DataSource>TmpRentalInventOnHand</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateControl">
						<Name>TmpOnHandRentalInventory_TransDate</Name>
						<ElementPosition>596523234</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Date</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>TransDate</DataField>
						<DataSource>TmpRentalInventOnHand</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>displayDateDayName</Name>
						<ElementPosition>894784852</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>displayDateDayName</DataMethod>
						<DataSource>TmpRentalInventOnHand</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>TmpOnHandRentalInventory_AvailableInclOrder</Name>
						<ElementPosition>1908874352</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>AvailableInclOrder</DataField>
						<DataSource>TmpRentalInventOnHand</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>displayAvailable</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1968526675</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>displayAvailableQty</DataMethod>
						<DataSource>TmpRentalInventOnHand</DataSource>
						<Label>@SYS5014</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>displayNotYetReturned</Name>
						<ElementPosition>2028178998</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>displayNotYetReturnedQty</DataMethod>
						<DataSource>TmpRentalInventOnHand</DataSource>
						<Label>@DNR8245</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>displayNotYetDelivered</Name>
						<ElementPosition>2087831321</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>displayNotYetDeliveredQty</DataMethod>
						<DataSource>TmpRentalInventOnHand</DataSource>
						<Label>@DNR8246</Label>
					</AxFormControl>
				</Controls>
				<AlternateRowShading>No</AlternateRowShading>
				<DataSource>TmpRentalInventOnHand</DataSource>
				<MultiSelect>No</MultiSelect>
				<ShowRowLabels>No</ShowRowLabels>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>