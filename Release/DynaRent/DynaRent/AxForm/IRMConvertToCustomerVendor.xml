<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>IRMConvertToCustomerVendor</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class IRMConvertToCustomerVendor extends FormRun
{
    // Tables
    DirPartyTable               dirPartyTable;
    smmBusRelTable              smmBusRelTable;
}
]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    public boolean canClose()
    {
        boolean ret;
    
        ret = super();
    
        if (element.closedOk())
        {
            if (ret
            &&  ConvertToCustomer.checked())
            {
                ret = this.validateCust();
            }
    
            if (ret
            &&  ConvertToVendor.checked())
            {
                ret = this.validateVend();
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        IRMCustTableVendTableNew custTableVendTableNew = IRMCustTableVendTableNew::construct();
        custTableVendTableNew.parmConvertToCust(ConvertToCustomer.checked());
        custTableVendTableNew.parmConvertToVend(ConvertToVendor.checked());
        custTableVendTableNew.parmCommon(element.args().record());
    
        super();

        custTableVendTableNew.run();
    
        FormDataSource formDataSource = FormDataUtil::getFormDataSource(element.args().record());
    
        if (formDataSource)
        {
            formDataSource.research(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    [SuppressBPWarningAttribute("BPCheckInvalidInitFormMethodWarning", "caller should be validated before invoking super()")]
    public void init()
    {
        switch (element.args().dataset())
        {
            case tableNum(DirPartyTable):
                dirPartyTable = element.args().record();
                break;
    
            case tableNum(smmBusRelTable):
                smmBusRelTable = element.args().record();
                dirPartyTable  = DirPartyTable::findRec(smmBusRelTable.Party);
                break;
    
            default:
                throw error(Error::missingFormActiveBuffer(element.name()));
        }
    
        super();
    
        element.updateDesign();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    public void updateDesign()
    {
        boolean isCustomer = DirPartyTableHelper::isCustomer(dirPartyTable.RecId);
        boolean isVendor   = DirPartyTableHelper::isvendor(dirPartyTable.RecId);
    
        ConvertToCustomer.enabled(!isCustomer);
        ConvertToCustomer.value(!isCustomer);
        ConvertToVendor.enabled(!isVendor);
        ConvertToVendor.value(!isVendor);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCust</Name>
				<Source><![CDATA[
    public boolean validateCust()
    {
        boolean ret = true;
    
        // Convert to cust/vend
        if (ret
        &&  (ConvertToVendor.checked() || DirPartyTableHelper::isvendor(dirPartyTable.RecId)))
        {
            if (!smmBusRelTypeGroup::IRMGetCustVendType(false))
            {
                ret = checkFailed(strfmt("@DNR5923", smmBusRelTypeSourceTable::IRMCustVend, tableId2PName(tableNum(smmBusRelTypeGroup))));
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateVend</Name>
				<Source><![CDATA[
    public boolean validateVend()
    {
        boolean ret = true;
    
        // Convert to cust/vend
        if (ret
        &&  (ConvertToCustomer.checked() || DirPartyTableHelper::isCustomer(dirPartyTable.RecId)))
        {
            if (!smmBusRelTypeGroup::IRMGetCustVendType(false))
            {
                ret = checkFailed(strfmt("@DNR5923", smmBusRelTypeSourceTable::IRMCustVend, tableId2PName(tableNum(smmBusRelTypeGroup))));
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="" />
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Caption xmlns="">@DNR5753</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">DropDialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">DropDialog</Style>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>954437176</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>ConvertToCustomer</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@DNR5758</HelpText>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Label>@SYS302</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>ConvertToVendor</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@DNR5759</HelpText>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Label>@SYS8079</Label>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>