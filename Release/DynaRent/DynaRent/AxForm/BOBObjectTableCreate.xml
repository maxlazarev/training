<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>BOBObjectTableCreate</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class BOBObjectTableCreate extends FormRun
{
    LogisticsPostalAddressRecId newAddressRecId;
    BSAParameters   bsaParameters;
    DirPartyRecId   organizationParty;
}
]]></Source>
			</Method>
			<Method>
				<Name>checkEnableOKButton</Name>
				<Source><![CDATA[
    void checkEnableOKButton()
    {
        OKButton.enabled(InventSerialId.text()
                      && ItemId.text()
                      && (ObjectCategory.selection() != BOBObjectCreateCategory::External || organizationParty)
                      && !BOBObjectTable::existInventSerialId(InventSerialId.text())
                      &&  element.validateOnRentDates());
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        BOBObjectId             newObjectId;
        FormDataSource          dataSource;
        BOBObjectCategory       category;
        QueryBuildDataSource    qbds;
        ;
    
        super();
    
        category = element.getSelectedObjectCategory();
        dataSource = FormDataUtil::getFormDataSource(element.args().record());
    
        ttsBegin;
    
        element.createNewSerialNumber();
        newObjectId = BOBObjectManager::newObjectManual(category,
                                                        ObjectName.text(),
                                                        InventSerialId.text(),
                                                        ItemId.text(),
                                                        organizationParty,
                                                        ExternalObjectId.text(),
                                                        WarrantyToDate.dateValue(),
                                                        FirstOnRentDate.dateValue(),
                                                        LastOnRentDate.dateValue(),
                                                        newAddressRecId,
                                                        FleetNum.text(),
                                                        CreateMaintenancePlan.checked());
        ttsCommit;
    
        // Added a sleep. This is needed because otherwise the current address will not show on the object form
        sleep(1000);
    
        if(dataSource)
        {
            switch(dataSource.table())
            {
                case tableNum(BOBObjectTable):
                    qbds = dataSource.queryBuildDataSource();
    
                    if(qbds.findRange(fieldNum(BOBObjectTable, InventSerialId)))
                    {
                        // add an additional range on the new InventSerialId, so it'll be treated as an OR criterion
                        qbds.addRange(fieldNum(BOBObjectTable, InventSerialId)).value(BOBObjectTable::findObjectId(newObjectId).InventSerialId);
                    }
    
                    Args newArgs = new Args();
                    newArgs.record(BOBObjectTable::findObjectId(newObjectId));
                    new MenuFunction(menuItemDisplayStr(BOBObjectTable), MenuItemType::Display).run(newArgs);
                    break;
    
                // RLAM - It looks the following piece of code never gets executed
                /*case tableNum(BOBObjectView):
                    element.args().lookupRecord(BOBObjectTable::findObjectId(newObjectId));
                    dataSource.research(false);
                    break;
    
                default:
                    // do nothing
                    break;*/
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createNewSerialNumber</Name>
				<Source><![CDATA[
    private void createNewSerialNumber()
    {
        InventSerial newSerialNumber;
        ;
    
        newSerialNumber.InventSerialId          = InventSerialId.text();
        newSerialNumber.ItemId                  = ItemId.text();
        newSerialNumber.Description             = ObjectName.text();
        newSerialNumber.ProdDate                = ProdDate.dateValue();
        newSerialNumber.BOBSkipObjectCreation   = NoYes::Yes; // performs validation
        newSerialNumber.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSelectedObjectCategory</Name>
				<Source><![CDATA[
    BOBObjectCategory getSelectedObjectCategory()
    {
        switch(ObjectCategory.selection())
        {
            case BOBObjectCreateCategory::External:
                return BOBObjectCategory::External;
    
            case BOBObjectCreateCategory::Internal:
                return BOBObjectCategory::Internal;
    
            case BOBObjectCreateCategory::Rental:
                return BOBObjectCategory::Rental;
    
            default:
                throw error(Error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();
    
        ObjectCategory.selection(0); // external

        bsaParameters = BSAParameters::find();
        CreateMaintenancePlan.checked(bsaParameters.CopyMaintPlanFromItem);
        CreateMaintenancePlan.enabled(bsaParameters.CopyMaintPlanFromItem);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAddress</Name>
				<Source><![CDATA[
    public void setAddress(LogisticsPostalAddressRecId _addressRecId)
    {
        newAddressRecId = _addressRecId;
        Address.text(LogisticsPostalAddress::findRecId(_addressRecId).Address);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateOnRentDates</Name>
				<Source><![CDATA[
    public boolean validateOnRentDates()
    {
        boolean             ret;
        BOBFirstOnRentDate  newFirstDate = FirstOnRentDate.dateValue();
        BOBLastOnRentDate   newLastDate = LastOnRentDate.dateValue();
        ;
    
        if(!newFirstDate && newLastDate)
        {
            TextOnRentDates.text(strFmt("@DNR1166", "@DNR3771", "@DNR3769"));
            FootNoteOnRentDates.visible(true);
        }
        else if(newFirstDate && newLastDate && newFirstDate > newLastDate)
        {
            TextOnRentDates.text(strFmt("@SYS50105", "@DNR3771", "@DNR3769"));
            FootNoteOnRentDates.visible(true);
        }
        else
        {
            TextOnRentDates.text("");
            FootNoteOnRentDates.visible(false);
            ret = true;
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editOrgName</Name>
				<Source><![CDATA[
    [SysObsolete('DNRDeletedObjects01_2021. Obsolete method')]
    edit Name editOrgName(boolean _set, Name _name)
    {
        if(_set)
        {
            DirPartyTable org;
            org = DirPartyTable::findByName(_name, DirPartyType::Organization);
            organizationParty = org.RecId;
            return org.Name;
        }

        return DirPartyTable::findRec(organizationParty).Name;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>ObjectCategory</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();
        
            if(ObjectCategory.selection() == BOBObjectCreateCategory::External)
            {
                ExternalObjectId.enabled(true);
                OrgName.enabled(true);
                FleetNum.enabled(false);
                FleetNum.text('');
                OrgName.mandatory(true);
                CreateMaintenancePlan.enabled(bsaParameters.CopyMaintPlanFromItem);
            }
            else
            {
                ExternalObjectId.enabled(false);
                ExternalObjectId.text('');
                organizationParty = 0;
                OrgName.text('');
                OrgName.modified();
                OrgName.mandatory(false);
                OrgName.enabled(false);
                CreateMaintenancePlan.enabled(false);
                CreateMaintenancePlan.checked(bsaParameters.CopyMaintPlanFromItem);
            }
        
            if(ObjectCategory.selection() == BOBObjectCreateCategory::Rental)
            {
                FirstOnRentDate.enabled(true);
                LastOnRentDate.enabled(true);
                FleetNum.enabled(true);
            }
            else
            {
                FirstOnRentDate.dateValue(dateNull());
                FirstOnRentDate.enabled(false);
                LastOnRentDate.dateValue(dateNull());
                LastOnRentDate.enabled(false);
            }
            if(ObjectCategory.selection() == BOBObjectCreateCategory::Internal)
            {
                FleetNum.enabled(true);
            }
        
            element.checkEnableOKButton();
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventSerialId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>leave</Name>
						<Source><![CDATA[
        public boolean leave()
        {
            boolean         ret;
            InventSerialId  newSerialNum;
            ;
        
            ret = super();
            newSerialNum = this.text();
        
            if(!newSerialNum)
            {
                TextSerialNumber.text(strFmt("@SYS26332", "@SYS477"));
                FootNoteSerialNumber.visible(true);
                // ret = false;
            }
            else if(BOBObjectTable::existInventSerialId(newSerialNum))
            {
                TextSerialNumber.text(strFmt("@DNR10174", newSerialNum));
                FootNoteSerialNumber.visible(true);
                // ret = false;
            }
            else
            {
                TextSerialNumber.text("");
                FootNoteSerialNumber.visible(false);
            }
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>textChange</Name>
						<Source><![CDATA[
        public void textChange()
        {
            super();
        
            element.checkEnableOKButton();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FleetNum</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;
        
            ret = super();
            ret = ret && BOBObjectTable::validateFleetNum(this.text());
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ItemId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            Args    args;
            ItemId  currentItemId;
            ;
        
            currentItemId = this.text();
        
            args = new Args();
            args.caller(element);
        
            if(currentItemId)
            {
                args.lookupField(fieldNum(InventTable, ItemId));
                args.lookupValue(currentItemId);
            }
            else
            {
                args.formViewOption(FormViewOption::Grid);
            }
        
            new MenuFunction(menuitemDisplayStr(EcoResProductDetailsExtended), MenuItemType::Display).run(args);
        }

]]></Source>
					</Method>
					<Method>
						<Name>leave</Name>
						<Source><![CDATA[
        public boolean leave()
        {
        
            boolean         ret         = super();
            ItemId          newItemId   = this.text();
            BOBRentalType   rentalType  = BOBRentalType::findFromItemId(newItemId);
        
            if(!newItemId)
            {
                TextItemNumber.text("@SYS25157");
                FootNoteItemNumber.visible(true);
            }
            else if(!rentalType || rentalType.Classification != BOBRentalTypeClassification::Serialized)
            {
                TextItemNumber.text(strFmt("@DNR6076", newItemId));
                FootNoteItemNumber.visible(true);
            }
            else
            {
                TextItemNumber.text("");
                FootNoteItemNumber.visible(false);
            }
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            InventTable::BOBLookupRentalItem(this, true);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            InventTable     inventTable;
            EcoResProduct   ecoResProduct;
            BOBRentalType   rentalType;
            boolean         ret;
            ;
        
            ret = super();
        
            element.checkEnableOKButton();
        
            // prefill from rental type description
            select firstOnly Description from rentalType
                join BOBMonthsWarranty from ecoResProduct
                where ecoResProduct.DisplayProductNumber == rentalType.RentalTypeId
                    join ItemId from inventTable
                    where inventTable.ItemId == this.text()
                    &&    inventTable.Product == ecoResProduct.RecId;
        
            // use itemId from table to make sure that capitalization is the same even during manual input e.g. AWPE6M instead of aWpE6m
            if (inventTable.ItemId)
            {
                this.text(inventTable.ItemId);
            }
            ObjectName.text(rentalType.Description);
            WarrantyToDate.dateValue(this.text() && ProdDate.dateValue() ?
                                     dateMthFwd(ProdDate.dateValue(), ecoResProduct.BOBMonthsWarranty) :
                                     dateNull());
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OrgName</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            organizationParty = DirUtilityEx::DNROrgNamelookup(this).RecId;
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            DirPartyPostalAddressView addressView;
            boolean ret
            ;
        
            ret = super();
        
            // prefill address from selected organization's primary address
        
            if(organizationParty)
            {
                select firstOnly Address, PostalAddress from addressView
                where addressView.IsPrimary
                &&    addressView.Party == organizationParty;
            }
               
            Address.text(addressView.Address);
            newAddressRecId = addressView.PostalAddress;
            element.checkEnableOKButton();
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>leave</Name>
						<Source><![CDATA[
        public boolean leave()
        {
            boolean ret;
        
            ret = super();

            if(ret)
            {
                if(!DirOrganization::find(organizationParty).RecId)
                {
                    ret = checkFailed("@DNR10175");
                }
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProdDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            InventTable     inventTable;
            EcoResProduct   ecoResProduct;
            BOBRentalType   rentalType;
            boolean         ret;
            ;
        
            ret = super();
        
            if(ItemId.text() && this.dateValue())
            {
                select firstOnly TableId from rentalType
                    join BOBMonthsWarranty from ecoResProduct
                    where ecoResProduct.DisplayProductNumber == rentalType.RentalTypeId
                        exists join inventTable
                        where inventTable.ItemId == ItemId.text()
                        &&    inventTable.Product == ecoResProduct.RecId;
        
                WarrantyToDate.dateValue(dateMthFwd(this.dateValue(), ecoResProduct.BOBMonthsWarranty));
            }
            else
            {
                WarrantyToDate.dateValue(dateNull());
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FirstOnRentDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>leave</Name>
						<Source><![CDATA[
        public boolean leave()
        {
            boolean ret = super();
            element.validateOnRentDates();
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();
            element.checkEnableOKButton();
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LastOnRentDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>leave</Name>
						<Source><![CDATA[
        public boolean leave()
        {
            boolean ret = super();
            element.validateOnRentDates();
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();
            element.checkEnableOKButton();
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LogisticsLocationSelect</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            FormRun  obj = element.args().caller();
            BOBObjectTable objectTable;
            Args args = new Args();

            if (obj)
            {
                //If the form is called from work space page then there is no datasource record on the args. So passed a blank record from here
                objectTable = (obj.name() == identifierStr(BOBBusinessObjectProcessingWorkspace)) ? objectTable : element.args().record();
            }
            else
            {
                objectTable = element.args().record();
            }

            args.caller(element);
            //args.record(element.args().record());
            args.record(objectTable);
            args.parmEnumType(enumNum(LogisticsLocationSelectSourceType));
            args.parmEnum(LogisticsLocationSelectSourceType::BusinessRelation);
        
            new MenuFunction(menuitemDisplayStr(LogisticsLocationSelectForm_BOBBusObj), MenuItemType::Display).run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Caption xmlns="">@DNR5943</Caption>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>Custom</Pattern>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Group_</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>ObjectCategory</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>357913940</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<EnumType>BOBObjectCreateCategory</EnumType>
								<Label>@SYS69410</Label>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventSerialId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>536870910</ElementPosition>
								<EnableFormRef>No</EnableFormRef>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>InventSerialId</ExtendedDataType>
								<Label>@SYS477</Label>
								<LookupButton>Hidden</LookupButton>
								<Mandatory>Yes</Mandatory>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>FleetNum</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>536870910</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@DNR10133</HelpText>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>BOBFleetNumber</ExtendedDataType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ItemId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>715827880</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>ItemId</ExtendedDataType>
								<Mandatory>Yes</Mandatory>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ObjectName</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>894784850</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>Name</ExtendedDataType>
								<Label>@SYS63179</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ExternalObjectId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741820</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>BOBExternalObjectId</ExtendedDataType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>CreateMaintenancePlan</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>CheckBox</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@DNR10146</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>OrgName</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS38151</Label>
								<LookupOnly>Yes</LookupOnly>
								<Mandatory>Yes</Mandatory>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>ProdDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1342177275</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>InventSerialProdDate</ExtendedDataType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>WarrantyToDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655760</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>BOBWarrantyToDate</ExtendedDataType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>FirstOnRentDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612730</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>BOBFirstOnRentDate</ExtendedDataType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>LastOnRentDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1789569700</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>BOBLastOnRentDate</ExtendedDataType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>AddressGroup</Name>
								<ElementPosition>1968526670</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Address</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>LogisticsAddressing</ExtendedDataType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LogisticsLocationSelect</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>ImageOnly</ButtonDisplay>
										<MenuItemName>LogisticsLocationSelectForm_BOBBusObj</MenuItemName>
										<NormalImage>Map</NormalImage>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<ColumnsMode>Fill</ColumnsMode>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<TopMargin>11</TopMargin>
						<TopMarginMode>Fixed</TopMarginMode>
						<BackgroundColor>WindowBackground</BackgroundColor>
						<FrameType>None</FrameType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Footnote</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FootNoteOnRentDates</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>572662304</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>IconOnRentDates</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<LeftMode>LeftEdge</LeftMode>
										<Type>Image</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackStyle>Transparent</BackStyle>
										<ImageResource>928</ImageResource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>TextOnRentDates</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>StaticText</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Text></Text>
									</AxFormControl>
								</Controls>
								<Columns>2</Columns>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FootNoteItemNumber</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>IconItemNumber</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<LeftMode>LeftEdge</LeftMode>
										<Type>Image</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackStyle>Transparent</BackStyle>
										<ImageResource>928</ImageResource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>TextItemNumber</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>StaticText</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Text></Text>
									</AxFormControl>
								</Controls>
								<Columns>2</Columns>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FootNoteSerialNumber</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>IconSerialNumber</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<LeftMode>LeftEdge</LeftMode>
										<Type>Image</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackStyle>Transparent</BackStyle>
										<ImageResource>928</ImageResource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>TextSerialNumber</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>StaticText</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Text></Text>
									</AxFormControl>
								</Controls>
								<Columns>2</Columns>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<TopMargin>10</TopMargin>
						<TopMarginMode>Fixed</TopMarginMode>
					</AxFormControl>
				</Controls>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<Enabled>No</Enabled>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<AutoRefreshData>Yes</AutoRefreshData>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
						<Text>@SYS112171</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>