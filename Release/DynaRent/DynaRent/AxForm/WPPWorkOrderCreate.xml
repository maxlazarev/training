<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>WPPWorkOrderCreate</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class WPPWorkOrderCreate extends FormRun
{
    WPPWorkOrderTableForm   workOrderTableForm;
    WPPWorkOrderCreateForm  workOrderCreateForm;

    NumberSeqFormHandler    numberSeqFormHandler;

}
]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    public boolean canClose()
    {
        boolean     ret;
        ProjType    projType;
    
        ret = true;
    
        if (element.closedOk())
        {
            if (!TemplateId.text())
            {
                ret = checkFailed(strFmt("@SYS84753", extendedTypeId2pname(extendedTypeNum(WPPWorkOrderTemplateId))));
            }
    
            if (!WPPWorkOrderTable.DNRcheckCustRequisition())
            {
                ret = false;
            }
    
            projType = WPPWorkOrderTable.projGroup().projType;
    
            if ((projType == ProjType::TimeMaterial || projType == ProjType::FixedPrice) && !WPPWorkOrderTable.OrganizationParty)
            {
                ret = checkFailed(strFmt("@SYS84753", "@SYS1996"));
            }
    
            if (dlgReasonCode.mandatory() && !dlgReasonCode.text())
            {
                ret = checkFailed(strFmt("@SYS84753", extendedTypeId2pname(extendedTypeNum(DNRReasonCode))));
            }
    
            if (ret)
            {
                ret = super();
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        workOrderCreateForm.formMethodClose();
    
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        RORRentalOrderLineView  rentalOrderLineView;
        RORRentalFuelMgtView    rentalFuelMgtView;
        SalesLine               salesLine;
        SalesTable              salesTable;
        SalesLineRefRecId       salesLineRecId;
        ;
    
        if (!element.args().caller())
        {
            throw error("@SYS22539");
        }

        super();
    
        workOrderTableForm  = element.args().caller();
        workOrderCreateForm = WPPWorkOrderCreateForm::construct();
    
        switch (workOrderTableForm.parmCommon().TableId)
        {
            case tableNum(ProjTable):
                workOrderCreateForm.parmCallerProjTable(workOrderTableForm.parmCommon());
                break;
    
            case tableNum(RORRentalOrderLineView):
                rentalOrderLineView = workOrderTableForm.parmCommon();
                salesLineRecId = rentalOrderLineView.SalesLineRecId;
                break;
    
            case tableNum(RORRentalFuelMgtView):
                rentalFuelMgtView = workOrderTableForm.parmCommon();
                salesLineRecId = rentalFuelMgtView.SalesLineRecId;
                break;
    
            default:
                // do nothing
                break;
        }
    
        if(salesLineRecId)
        {
            select firstOnly ProjId from salesLine
            where salesLine.RecId == salesLineRecId
                join ProjId from salesTable
                where salesTable.SalesId == salesLine.SalesId;
    
            if(salesLine.ProjId || salesTable.ProjId)
            {
                workOrderCreateForm.parmCallerProjTable(ProjTable::find(salesLine.ProjId ? salesLine.ProjId : salesTable.ProjId));
            }
        }
    
        
        WPPWorkOrderTable_ds.updateDesign();
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqFormHandler</Name>
				<Source><![CDATA[
    NumberSeqFormHandler numberSeqFormHandler()
    {
        if (!numberSeqFormHandler)
        {
            numberSeqFormHandler = NumberSeqFormHandler::newForm(WPPParameters::numRefWorkOrderId().NumberSequenceId,
                                                                 element,
                                                                 WPPWorkOrderTable_ds,
                                                                 fieldNum(WPPWorkOrderTable, WorkOrderId));
        }
    
        return numberSeqFormHandler;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        WPPWorkOrderTable_ds.create();
    
        super();
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>WPPWorkOrderTable</Name>
				<Methods>
					<Method>
						<Name>BOBupdateDesign</Name>
						<Source><![CDATA[
        public void BOBupdateDesign()
        {
            switch (WPPWorkOrderTable.BOBReferenceType)
            {
                case BOBReferenceType::Object:
                    WPPWorkOrderTable.BOBReferenceId = '';
                    break;

                case BOBReferenceType::Component:
                    WPPWorkOrderTable.BOBObjectTableRecId = 0;
                    break;
            }

            WPPWorkOrderTable_ds.object(fieldNum(WPPWorkOrderTable, BOBObjectTableRecId)).allowEdit(WPPWorkOrderTable.BOBReferenceType == BOBReferenceType::Object);
            WPPWorkOrderTable_ds.object(fieldNum(WPPWorkOrderTable, BOBObjectTableRecId)).mandatory(WPPWorkOrderTable.BOBReferenceType == BOBReferenceType::Object);
            WPPWorkOrderTable_ds.object(fieldNum(WPPWorkOrderTable, BOBReferenceId)).allowEdit(WPPWorkOrderTable.BOBReferenceType == BOBReferenceType::Component);
        }

]]></Source>
					</Method>
					<Method>
						<Name>updateDueDate</Name>
						<Source><![CDATA[
        public void updateDueDate()
        {
            WPPWorkOrderTable.BSADueDateTime = WPPWorkOrderTable.BSACalcDueDate();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
        
            WPPWorkOrderTable_ds.cacheAddMethod(tableMethodStr(WPPWorkOrderTable, BSADisplayActiveContractId));

            this.BOBupdateDesign();
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            Common                              common;
            ProjTable                           projTable;
            CustTable                           custTable;
            VendTable                           vendTable;
            RORRentalOrderLineView              rentalOrderLineView;
            SalesLine                           salesLine;
            BOBObjectView                       objectView;
            BOBObjectTable                      objectTable;
            BOBObjectMaintenancePlan            objectMaintenancePlan;
            BOBTmpObjectAvailability            tmpObjectAvailability;
            BOBTmpObjectAvailability_Graphical  tmpObjectAvailability_Graphical;
            WPPWorkOrderTemplateTable           workOrderTemplateTable;
            ProjGroup                           projGroup;
            SalesTable                          salesTable;
        
            super();
        
            common = workOrderTableForm.parmCommon();
        
            WPPWorkOrderTable.BOBReferenceType = BOBReferenceType::Object;
            this.object(fieldNum(WPPWorkOrderTable, BOBReferenceType)).modified();

            WPPWorkOrderTable.BOBObjectTableRecId = workOrderTableForm.BOBparmObjectTableRecId();
            WPPWorkOrderTable.modifiedField(fieldNum(WPPWorkOrderTable, BOBObjectTableRecId));
        
            switch (common.TableId)
            {
                case tableNum(ProjTable):
                    projTable = common as ProjTable;
                    WPPWorkOrderTable.initFromProjTable(projTable);
                    WPPWorkOrderTable.CustVendAccountType = CustVendACType::Cust;
                    WPPWorkOrderTable.OrganizationParty   = projTable.CustAccount ? projTable.party() : 0;
                    break;
        
                case tableNum(CustTable):
                    custTable = common as CustTable;
                    WPPWorkOrderTable.initFromCustTable(custTable, true);
                    break;
        
                case tableNum(VendTable):
                    vendTable = common as VendTable;
                    WPPWorkOrderTable.initFromVendTable(vendTable, true);
                    break;
        
                case tableNum(RORRentalOrderLineView):
                    rentalOrderLineView = common as RORRentalOrderLineView;
                    
                    RORVenueTable venueTable;

                    select firstonly venueTable
                        join  salesTable
                        where salesTable.RORVenueCode == venueTable.VenueCode
                        &&    salesTable.SalesId == rentalOrderLineView.SalesId
                            join  salesLine
                            where salesLine.SalesId == salesTable.SalesId
                            &&    salesLine.RecId == rentalOrderLineView.SalesLineRecId
                                join  custTable
                                where custTable.AccountNum == salesLine.CustAccount;

                    WPPWorkOrderTable.initFromSalesPurchLine(salesLine);
                    WPPWorkOrderTable.initFromSalesTable(salesTable);
                    WPPWorkOrderTable.initFromCustTable(custTable, true);

                    switch(BOBRentalType::findFromItemId(salesLine.ItemId).Classification)
                    {
                        case BOBRentalTypeClassification::Serialized:
                            WPPWorkOrderTable.initFromBOBObjectTable(BOBObjectTable::findInventSerialId(rentalOrderLineView.inventSerialId));
                            break;

                        case BOBRentalTypeClassification::Bulk:
                            WPPWorkOrderTable.initFromBOBObjectTable(BOBObjectTable::findBulkObject(rentalOrderLineView.BOBRentalTypeIdRequested));
                            break;

                        case BOBRentalTypeClassification::Virtual:
                            // no business objects to default from
                            break;
                    }

                    WPPWorkOrderTable.initFromRORVenueTable(venueTable);
                    break;
        
                case tableNum(SalesLine):
                    salesLine = common as SalesLine;
                    WPPWorkOrderTable.initFromSalesPurchLine(salesLine);
                    WPPWorkOrderTable.initFromCustTable(CustTable::find(salesLine.CustAccount), true);
                    WPPWorkOrderTable.initFromBOBObjectTable(BOBObjectTable::findInventSerialId(salesLine.inventDim().inventSerialId));
                    break;

                case tableNum(SalesTable):
                    salesTable = common as SalesTable;
                    WPPWorkOrderTable.initFromSalesTable(salesTable);
                    
                    if (salesTable.ProjId)
                    {
                        WPPWorkOrderTable.initFromProjTable(salesTable.projTable());
                    }
                    break;
        
                case tableNum(BOBObjectView):
                    objectView = common as BOBObjectView;

                    WPPWorkOrderTable.initFromBOBObjectTable(objectView.objectTable());

                    if (objectView.Category != BOBObjectCategory::External)
                    {
                        WPPWorkOrderTable.LogisticsLocationRecId = objectView.PostalAddressRecId;
                    }
                    break;

                case tableNum(BOBObjectViewV2):
                    BOBObjectViewV2 objectViewV2 = common as BOBObjectViewV2;

                    WPPWorkOrderTable.initFromBOBObjectTable(objectViewV2.objectTable());

                    if (objectViewV2.Category != BOBObjectCategory::External)
                    {
                        WPPWorkOrderTable.LogisticsLocationRecId = objectViewV2.PostalAddressRecId;
                    }
                    break;
        
                case tableNum(BOBObjectMaintenancePlan):
                    objectMaintenancePlan = common as BOBObjectMaintenancePlan;
        
                    if (objectMaintenancePlan.WPPTemplateId)
                    {
                        select firstOnly workOrderTemplateTable
                        where workOrderTemplateTable.TemplateId == objectMaintenancePlan.WPPTemplateId
                            join projGroup
                            where projGroup.ProjGroupId == workOrderTemplateTable.ProjGroupId;
        
                        WPPWorkOrderTable.StartDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
                        WPPWorkOrderTable_ds.object(fieldNum(WPPWorkOrderTable, StartDate)).modified();
                        DNRAdditionalNote_InternalNote.text(DNRAdditionalNoteTable::find(objectMaintenancePlan.TableId, objectMaintenancePlan.RecId).InternalNote);
                        TemplateId.text(objectMaintenancePlan.WPPTemplateId);
                        WPPWorkOrderTable.initFromWorkOrderTemplateTable(workOrderTemplateTable);
                        WPPWorkOrderTable.initFromProjGroup(projGroup);
        
                        workOrderCreateForm.parmWorkOrderTemplateId(objectMaintenancePlan.WPPTemplateId);
        
                    }
                    break;
        
                case tableNum(BOBTmpObjectAvailability):
                    tmpObjectAvailability = common as BOBTmpObjectAvailability;
        
                    WPPWorkOrderTable.initFromBOBObjectTable(BOBObjectTable::findRecId(tmpObjectAvailability.ObjectTableRecId));
                    break;
        
                case tableNum(BOBTmpObjectAvailability_Graphical):
                    tmpObjectAvailability_Graphical = common as BOBTmpObjectAvailability_Graphical;
        
                    WPPWorkOrderTable.initFromBOBObjectTable(BOBObjectTable::findRecId(tmpObjectAvailability_Graphical.ObjectTableRecId));
                    WPPWorkOrderTable.StartDate = DateTimeUtil::date(workOrderTableForm.RORParmSelectionFromDateTime());
                    WPPWorkOrderTable.EndDate   = DateTimeUtil::date(workOrderTableForm.RORParmSelectionToDateTime());
                    break;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;
        
            ret = super();
        
            if (ret)
            {
                ret = workOrderCreateForm.formMethodDataSourceValidateWrite(element, WPPWorkOrderTable_ds);
            }
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            if (!WPPWorkOrderTable.WorkOrderId)
            {
                super(_append);
        
                workOrderCreateForm.formMethodDataSourceCreate(element, WPPWorkOrderTable_ds);
        
                WPPWorkOrderTable_ds.updateDesign();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (!element.closedOk() || WPPWorkOrderTable.RecId)
            {
                return;
            }
        
            try
            {
                ttsBegin;
        
                super();
        
                workOrderCreateForm.generateFromTemplate(WPPWorkOrderTable);
                WPPWorkOrderTable.data(workOrderCreateForm.parmWorkOrderTable());
        
                workOrderCreateForm.formMethodDataSourceWrite(element, WPPWorkOrderTable_ds);
        
                if (workOrderCreateForm.parmChangeObjectAvailability())
                {
                    BOBObjectManager::changeObjectAvailability(WPPWorkOrderTable.BOBObjectTable().ObjectId, dlgIsAvailable.selection(), dlgReasonCode.text(), WPPWorkOrderTable.WorkOrderId);
                }
        
                workOrderTableForm.parmWorkOrderTable(WPPWorkOrderTable);
                workOrderTableForm.DNRCreateAdditionalNote(DNRAdditionalNote_InternalNote.text());
        
                ttsCommit;
            }
            catch (Exception::Error)
            {
                WPPWorkOrderTable.RecId = 0;
                element.close();
                throw Exception::Error;
            }
        
            WPPWorkOrderTable_ds.reread();
            WPPWorkOrderTable_ds.refresh();
        
            CancelButton.enabled(false);
        }

]]></Source>
					</Method>
					<Method>
						<Name>updateDesign</Name>
						<Source><![CDATA[
        public void updateDesign()
        {
            boolean     mandatoryCustReq  = true;
            ProjGroup   projGroup         = WPPWorkOrderTable.projGroup();
            ProjType    projType          = projGroup.projType;
            boolean     objectIsAvailable = workOrderCreateForm.objectIsAvailable(WPPWorkOrderTable.BOBObjectTableRecId);
        
            if (WPPWorkOrderTable.CustVendAccountType == CustVendACType::Cust)
            {
                mandatoryCustReq = CustTable::DNRIsCustRequisitionMandatory(WPPWorkOrderTable.custVendAccount(), WPPWorkOrderTable.CustVendRef, 3);
            }
        
            WPPWorkOrderTable_ds.object(fieldNum(WPPWorkOrderTable, CustVendRef)).mandatory(mandatoryCustReq && projType != ProjType::Cost && projType != ProjType::Internal);
            WPPWorkOrderTable_ds.object(fieldNum(WPPWorkOrderTable, WorkOrderId)).allowEdit(workOrderCreateForm.editWorkOrderId());
            WPPWorkOrderTable_ds.object(fieldNum(WPPWorkOrderTable, OrganizationParty)).mandatory(projGroup && (projType == ProjType::TimeMaterial || projType == ProjType::FixedPrice));

            dlgChangeAvailability.allowEdit(WPPWorkOrderTable.BOBObjectTableRecId && workOrderCreateForm.allowObjectAvailabilityChange(TemplateId.text(), objectIsAvailable));
        
            if (dlgChangeAvailability.checked())
            {
                dlgIsAvailable.selection(WPPWorkOrderTable.BOBObjectTableRecId && !objectIsAvailable);
                dlgReasonCode.allowEdit(true);
                dlgReasonCode.mandatory(objectIsAvailable);
            }
            else
            {
                dlgReasonCode.allowEdit(false);
                dlgIsAvailable.selection(0);
                dlgReasonCode.mandatory(false);
            }
        
            switch (workOrderTableForm.parmCommon().TableId)
            {
                case tableNum(ProjTable):
                    WPPWorkOrderTable_ds.object(fieldNum(WPPWorkOrderTable, ProjGroupId)).allowEdit(false);
                    WPPWorkOrderTable_ds.object(fieldNum(WPPWorkOrderTable, CustVendAccountType)).allowEdit(false);
                    WPPWorkOrderTable_ds.object(fieldNum(WPPWorkOrderTable, OrganizationParty)).allowEdit(false);
                    break;
        
                case tableNum(CustTable):
                    WPPWorkOrderTable_ds.object(fieldNum(WPPWorkOrderTable, CustVendAccountType)).allowEdit(false);
                    WPPWorkOrderTable_ds.object(fieldNum(WPPWorkOrderTable, OrganizationParty)).allowEdit(false);
                    break;
        
                case tableNum(VendTable):
                    WPPWorkOrderTable_ds.object(fieldNum(WPPWorkOrderTable, CustVendAccountType)).allowEdit(false);
                    WPPWorkOrderTable_ds.object(fieldNum(WPPWorkOrderTable, OrganizationParty)).allowEdit(false);
                    break;
        
                case tableNum(BOBObjectView):
                    BOBObjectView objectView = workOrderTableForm.parmCommon() as BOBObjectView;
                    if (objectView.custTable())
                    {
                        WPPWorkOrderTable_ds.object(fieldNum(WPPWorkOrderTable, CustVendAccountType)).allowEdit(false);
                        WPPWorkOrderTable_ds.object(fieldNum(WPPWorkOrderTable, OrganizationParty)).allowEdit(false);
                    }
                    break;
            }
        
            WPPWorkOrderTable_ds.object(fieldNum(WPPWorkOrderTable, ObjectQty)).allowEdit(WPPWorkOrderTable.BOBObjectTableRecId
                && WPPWorkOrderTable.BOBObjectTable().rentalType().Classification == BOBRentalTypeClassification::Bulk);
        
            OKDelayedMaintenance.enabled(WPPWorkOrderTable.StartDate
                && workOrderCreateForm.delayedMaintenanceEnabled(WPPWorkOrderTable.BOBObjectTableRecId, WPPWorkOrderTable.ProjGroupId));
        }

]]></Source>
					</Method>
					<Method>
						<Name>updateWithActiveContract</Name>
						<Source><![CDATA[
        public void updateWithActiveContract()
        {
            BSAContractTable contractTable;
            ;
        
            //Recalculate cached value, as key parameters have most likely been cahnged
            WPPWorkOrderTable_ds.cacheCalculateMethod(tablemethodstr(WPPWorkOrderTable, BSADisplayActiveContractId));
        
            //Use value from display method, as this has already been cached
            contractTable = BSAContractTable::find(WPPWorkOrderTable.BSADisplayActiveContractId());
        
            //Active contract will always be highest contract, but we need to ensure that it is a customer type contract.
            if (contractTable.BusRelType == TableGroupAll::Table)
            {
                WPPWorkOrderTable.ProjInvoiceProjId = contractTable.ProjInvoiceProjId;
            }
        
            WPPWorkOrderTable.BSAResponsible = contractTable.Responsible;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>BOBObjectTableRecId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
            
                WPPWorkOrderTable.initFromBOBObjectTable(WPPWorkOrderTable.BOBObjectTable());
                WPPWorkOrderTable.setLogisticsLocationFromBusinessObject();

                WPPWorkOrderTable_ds.updateDueDate();
                WPPWorkOrderTable_ds.updateDesign();
                WPPWorkOrderTable_ds.reread();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>BOBReferenceType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                WPPWorkOrderTable_ds.BOBupdateDesign();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CustVendAccountType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                WPPWorkOrderTable_ds.updateDesign();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>EndDate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
            
                WPPWorkOrderTable_ds.updateWithActiveContract();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>LogisticsLocationRecId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
            
                WPPWorkOrderTable_ds.refresh();
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                Common ret;
            
                if (WPPWorkOrderTable.CustVendAccountType == CustVendACType::Cust)
                {
                    CustTable custTable = CustTable::findByPartyRecId(WPPWorkOrderTable.OrganizationParty);
                    ret = LogisticsLocationSelectionLookup::lookupAddressForm(_formReferenceControl, custTable,
                        [LogisticsLocationRoleType::Delivery], false,
                        [WPPWorkOrderTable.LogisticsLocationRecId]);
            
                }
                else
                if (WPPWorkOrderTable.CustVendAccountType == CustVendACType::Vend)
                {
                    VendTable vendTable = VendTable::findByPartyRecId(WPPWorkOrderTable.OrganizationParty);
                    ret = LogisticsLocationSelectionLookup::lookupAddressForm(_formReferenceControl, vendTable,
                        [LogisticsLocationRoleType::Delivery], false,
                        [WPPWorkOrderTable.LogisticsLocationRecId]);
                }
            
                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OrganizationParty</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
            
                WPPWorkOrderTable_ds.updateWithActiveContract();
            
                WPPWorkOrderTable_ds.updateDesign();
                WPPWorkOrderTable_ds.reread();
                WPPWorkOrderTable_ds.rereadReferenceDataSources();
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return WPPWorkOrderTable::lookupReferenceOrganizationParty(_formReferenceControl, WPPWorkOrderTable);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ProjGroupId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
            
                TemplateId.text('');
                WPPWorkOrderTable_ds.updateDesign();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>StartDate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
            
                if (WPPWorkOrderTable.StartDate && !WPPWorkOrderTable.EndDate)
                {
                    WPPWorkOrderTable.EndDate = WPPWorkOrderTable.StartDate;
                }
            
                WPPWorkOrderTable_ds.updateWithActiveContract();
                WPPWorkOrderTable_ds.updateDueDate();
            
                WPPWorkOrderTable_ds.updateDesign();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>BOBReferenceType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        public void enter()
        {
            super();

            this.delete(enum2Str(BOBReferenceType::None));

        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>dlgChangeAvailability</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
        
            workOrderCreateForm.parmChangeObjectAvailability(this.checked());
            WPPWorkOrderTable_ds.updateDesign();
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>dlgReasonCode</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            DNRReasonTable::lookupType(this, DNRReasonType::Availability);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
        
            workOrderCreateForm.DNRparmReasonCode(this.text());
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean     ret;
            DictEnum    dictEnum;
        
            ret = super();
        
            if (ret)
            {
                if (DNRReasonTable::find(this.text()).Type != DNRReasonType::Availability)
                {
                    dictEnum = new DictEnum(enumNum(DNRReasonType));
                    ret = checkFailed(strFmt("@SYS34253", dictEnum.value2Label(enum2int(DNRReasonType::Availability))));
                }
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TemplateId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            //super();
            WPPWorkOrderTemplateTable::lookupTemplateFromProjGroupId(this, WPPWorkOrderTable.ProjGroupId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean                     ret;
            WPPWorkOrderTemplateTable   workOrderTemplateTable;
        
            ret = super();
        
            workOrderTemplateTable = WPPWorkOrderTemplateTable::find(this.text());
        
            workOrderCreateForm.parmWorkOrderTemplateId(this.text());
            WPPWorkOrderTable.initFromWorkOrderTemplateTable(workOrderTemplateTable);
            WPPWorkOrderTable.ProjGroupId = workOrderTemplateTable.ProjGroupId;
            WPPWorkOrderTable.modifiedField(fieldNum(WPPWorkOrderTable, ProjGroupId));
            DNRAdditionalNote_InternalNote.text(DNRAdditionalNoteTable::find(workOrderTemplateTable.TableId, workOrderTemplateTable.RecId).InternalNote);
            WPPWorkOrderTable_ds.updateDesign();
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean                     ret;
            WPPWorkOrderTemplateId      templateIdSelected;
            WPPWorkOrderTemplateTable   workOrderTemplateTable;
        
            ret = super();
            templateIdSelected = this.text();
        
            if (ret
            &&  templateIdSelected)
            {
                workOrderTemplateTable = WPPWorkOrderTemplateTable::find(templateIdSelected);
        
                if (WPPWorkOrderTable.ProjGroupId
                &&  workOrderTemplateTable.ProjGroupId != WPPWorkOrderTable.ProjGroupId)
                {
                    ret = checkFailed(strFmt("@DNR6758", this.text(), WPPWorkOrderTable.ProjGroupId));
                }
        
                if (ret
                && !workOrderTemplateTable.Active)
                {
                    ret = checkFailed(strFmt("@DNR6882", templateIdSelected));
                }
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CustVend_M_editContactPersonName</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            CustVend_ContactPersonId.jumpRef();
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        void lookup()
        {
            ContactPerson::lookupDirContactPerson(CustVend_ContactPersonId, WPPWorkOrderTable.OrganizationParty, CustVend_M_editContactPersonName, WPPWorkOrderTable.ContactPersonId);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OKDelayedMaintenance</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            workOrderTableForm.parmShowDelayedMaintenance(true);
        
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>WPPWorkOrderTable</Name>
			<Table>WPPWorkOrderTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActualPostingDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BOBObjectTableRecId</DataField>
					<Mandatory>Yes</Mandatory>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BOBReferenceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BOBReferenceType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BSADueDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BSAResponsible</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContactPersonId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FINCreditCheckStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FINDefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LogisticsLocationRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MaintenanceDateExpected</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ObjectQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrderRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrderTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrganizationParty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjInvoiceProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RORReturnInventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RORVenueCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartDate</DataField>
					<Mandatory>Yes</Mandatory>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkOrderId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources>
				<AxFormReferencedDataSource>
					<Name>LogisticsPostalAddress</Name>
					<Table>LogisticsPostalAddress</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>Address</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Apartment_RU</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>BuildingCompliment</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Building_RU</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>City</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>CityKana_JP</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>CityRecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>CountryRegionId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>County</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DEL_AddressWithoutCountryRecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>District</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DistrictName</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>FlatId_RU</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>HouseId_RU</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>IsPrivate</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Latitude</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Location</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Longitude</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>modifiedBy</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>modifiedDateTime</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Partition</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>PostBox</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>PrivateForParty</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>State</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>SteadId_RU</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Street</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>StreetId_RU</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>StreetKana_JP</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>StreetNumber</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TimeZone</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>ValidFrom</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>ValidTo</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>ZipCode</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>ZipCodeRecId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<JoinSource>WPPWorkOrderTable</JoinSource>
					<LinkType>OuterJoin</LinkType>
					<JoinRelation>LogisticsPostalAddress</JoinRelation>
				</AxFormReferencedDataSource>
			</ReferencedDataSources>
			<AutoNotify>No</AutoNotify>
			<AutoSearch>No</AutoSearch>
			<DelayActive>No</DelayActive>
			<LinkType>Passive</LinkType>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Caption xmlns="">@DNR6702</Caption>
		<DataSource xmlns="">WPPWorkOrderTable</DataSource>
		<DialogSize xmlns="">Medium</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">DialogFastTabs</Pattern>
		<PatternVersion xmlns="">1.0</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<TitleDataSource xmlns="">WPPWorkOrderTable</TitleDataSource>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Identification</Name>
				<ElementPosition>613566756</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>Custom</Pattern>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Identification_WorkOrderId</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>WorkOrderId</DataField>
						<DataSource>WPPWorkOrderTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Identification_Name</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>Name</DataField>
						<DataSource>WPPWorkOrderTable</DataSource>
					</AxFormControl>
				</Controls>
				<DataGroup>Identification</DataGroup>
				<DataSource>WPPWorkOrderTable</DataSource>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>TabControl</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabBusinessObject</Name>
						<Pattern>Custom</Pattern>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BOBObject</Name>
								<ElementPosition>920350134</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>BOBReferenceType</Name>
										<AllowEdit>No</AllowEdit>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>BOBReferenceType</DataField>
										<DataSource>WPPWorkOrderTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>BOBReferenceId</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>BOBReferenceId</DataField>
										<DataSource>WPPWorkOrderTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>BOBObjectTableRecId</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>400</Width>
										<WidthMode>Manual</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>WPPWorkOrderTable</DataSource>
										<ReferenceField>BOBObjectTableRecId</ReferenceField>
										<ReplacementFieldGroup>ReferenceGroup</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>WPPWorkOrderTable_ObjectQty</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ObjectQty</DataField>
										<DataSource>WPPWorkOrderTable</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ChangeAvailability</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1227133512</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>dlgChangeAvailability</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@DNR6743</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@DNR5780</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Availability</Name>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>dlgIsAvailable</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@DNR5883</HelpText>
												<Skip>Yes</Skip>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<EnumType>NoYes</EnumType>
												<Label>@SYS30545</Label>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>dlgReasonCode</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>DNRReasonCode</ExtendedDataType>
											</AxFormControl>
										</Controls>
										<ArrangeMethod>HorizontalLeft</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<Caption>@DNR5889</Caption>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS53430</Caption>
						<FastTabExpanded>Yes</FastTabExpanded>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabGeneral</Name>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>WorkOrder</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>WorkOrder_ProjGroupId</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjGroupId</DataField>
										<DataSource>WPPWorkOrderTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TemplateId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>WPPWorkOrderTemplateId</ExtendedDataType>
										<Mandatory>Yes</Mandatory>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>WorkOrder_InventLocationId</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventLocationId</DataField>
										<DataSource>WPPWorkOrderTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>WorkOrder_RORVenueCode</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>RORVenueCode</DataField>
										<DataSource>WPPWorkOrderTable</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@DNR6492</Caption>
								<DataSource>WPPWorkOrderTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>WorkOrderDates</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>DateTime_StartDate</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>StartDate</DataField>
										<DataSource>WPPWorkOrderTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>DateTime_EndDate</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>EndDate</DataField>
										<DataSource>WPPWorkOrderTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>WorkOrderDate</DataGroup>
								<DataSource>WPPWorkOrderTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Notes</Name>
								<ElementPosition>1879048189</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DNRAdditionalNote_InternalNote</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>DNRAdditionalNote</ExtendedDataType>
										<Label>@SYS30501</Label>
										<MultiLine>Yes</MultiLine>
									</AxFormControl>
								</Controls>
								<Caption>@SYS40182</Caption>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS55776</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabDetails</Name>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CustVend</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>CustVend_CustVendAccountType</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustVendAccountType</DataField>
										<DataSource>WPPWorkOrderTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>CustVend_OrganizationParty</Name>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>WPPWorkOrderTable</DataSource>
										<ReferenceField>OrganizationParty</ReferenceField>
										<ReplacementFieldGroup>WPPOrgReference</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustVend_displayCustVendAccount</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<CacheDataMethod>No</CacheDataMethod>
										<DataMethod>displayCustVendAccount</DataMethod>
										<DataSource>WPPWorkOrderTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustVend_ContactPersonId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>ContactPersonId</DataField>
										<DataSource>WPPWorkOrderTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustVend_M_editContactPersonName</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1738439142</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editContactPersonName</DataMethod>
										<DataSource>WPPWorkOrderTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustVend_CustVendRef</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustVendRef</DataField>
										<DataSource>WPPWorkOrderTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>CustVendCreate</DataGroup>
								<DataSource>WPPWorkOrderTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BSAServiceAgreement</Name>
								<ElementPosition>1687308579</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>BSAServiceAgreement_M_BSADisplayActiveContractId</Name>
										<AllowEdit>No</AllowEdit>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>BSADisplayActiveContractId</DataMethod>
										<DataSource>WPPWorkOrderTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>BSAServiceAgreement_BSADueDateTime</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>DateTime</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BSADueDateTime</DataField>
										<DataSource>WPPWorkOrderTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>BSAServiceAgreement_BSAResponsible</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>WPPWorkOrderTable</DataSource>
										<ReferenceField>BSAResponsible</ReferenceField>
									</AxFormControl>
								</Controls>
								<DataGroup>BSAServiceAgreement</DataGroup>
								<DataSource>WPPWorkOrderTable</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS318405</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabAddress</Name>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DeliveryAddress</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>HeaderViewHeaderAddressGroup</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>WPPWorkOrderTable</DataSource>
										<Label>@SYS22058</Label>
										<ReferenceField>LogisticsLocationRecId</ReferenceField>
										<ReplacementFieldGroup>LocationReference</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LogisticsLocationSelect</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@SYS342026</HelpText>
										<Skip>Yes</Skip>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>ImageOnly</ButtonDisplay>
										<MenuItemName>LogisticsLocationSelect</MenuItemName>
										<NormalImage>Map</NormalImage>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<Columnspace>4</Columnspace>
								<ColumnspaceMode>Fixed</ColumnspaceMode>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>AddressDisplay</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LogisticsPostalAddress_CountryRegionId</Name>
										<ElementPosition>954437176</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>CountryRegionId</DataField>
										<DataSource>LogisticsPostalAddress</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LogisticsPostalAddress_Address</Name>
										<ElementPosition>1550960411</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Address</DataField>
										<DataSource>LogisticsPostalAddress</DataSource>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS22223</Caption>
					</AxFormControl>
				</Controls>
				<Style>FastTabs</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKDelayedMaintenance</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1717986916</ElementPosition>
						<Enabled>No</Enabled>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@DNR7012</HelpText>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<Text>@DNR7025</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<SizeWidth>No</SizeWidth>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>