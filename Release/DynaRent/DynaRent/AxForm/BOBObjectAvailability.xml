<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>BOBObjectAvailability</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class BOBObjectAvailability extends FormRun
{
    #TimeConstants

    BOBObjectAvailabilityForm       formClass;
    BOBObjectAvailabilityData       dataClass;
    BOBParameters                   parameters;
    BOBObjectAssignmentEngine       engine;
    BOBObjectAvailabilitySettings   settings;
    Timezone                        userTimeZone;

}
]]></Source>
			</Method>
			<Method>
				<Name>getFormClass</Name>
				<Source><![CDATA[
    public BOBObjectAvailabilityForm getFormClass()
    {
        return formClass;
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        super();

        settings = BOBObjectAvailabilitySettings::findOrCreate();
        ColumnWidth rowItemWidth = GraphicalAvailability.parmRowItemWidth();
        
        if (settings.RowItemWidth != rowItemWidth)
        {
            ttsbegin;
            settings.selectForUpdate(true);
            settings.RowItemWidth = rowItemWidth;
            settings.update();
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    [SuppressBPWarningAttribute("BPCheckInvalidInitFormMethodWarning", "Validation of caller must be performed before invoking super()")]
    public void init()
    {
        parameters  = BOBParameters::find();
        dataClass   = new BOBObjectAvailabilityData();
        userTimeZone = DateTimeUtil::getUserPreferredTimeZone();
 
        element.updateAvailabilitySettings();

       super();

        this.initPlanboard();
        element.updateDesign(WPPPlanboardDisplayMode::Grid);
        element.linkPhysicalTableInstance();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPlanboard</Name>
				<Source><![CDATA[
    private void initPlanboard()
    {
        settings    = BOBObjectAvailabilitySettings::findOrCreate();
        formClass   = new BOBObjectAvailabilityForm(this, GraphicalAvailability);

        FromDateTime.dateTimeValue(DateTimeUtil::applyTimeZoneOffset(settings.StartDateTime, userTimeZone));
        ToDateTime.dateTimeValue(DateTimeUtil::applyTimeZoneOffset(settings.EndDateTime, userTimeZone));
        this.setTimeUnit();

        GraphicalAvailability.parmRowItemWidth(settings.RowItemWidth);
        GraphicalAvailability.parmPeriodMinHeight(settings.CellHeight);
        GraphicalAvailability.parmStartDate(settings.StartDateTime);
        GraphicalAvailability.parmEndDate(settings.EndDateTime);
        GraphicalAvailability.parmTimeScale(TimeUnit.value());
    }

]]></Source>
			</Method>
			<Method>
				<Name>linkPhysicalTableInstance</Name>
				<Source><![CDATA[
    public void linkPhysicalTableInstance()
    {
        tmpObjectAvailability.linkPhysicalTableInstance(dataClass.parmTmpData());
        tmpObjectAvailability_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateBusinessObjectAttributes</Name>
				<Source><![CDATA[
    // Called from BOBObjectAvailabilitySettings dialog
    public DFMValueTrans populateBusinessObjectAttributes(BOBObjectAvailabilitySettings _settings)
    {
        return dataClass.populateBusinessObjectAttributes(_settings);
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();

        element.refreshData();
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshData</Name>
				<Source><![CDATA[
    public void refreshData(boolean _dateSelectionChanged = false, FormDataSource _businessObjectAttributes_ds = null)
    {
        settings = BOBObjectAvailabilitySettings::findOrCreate(curUserId());

        if (_businessObjectAttributes_ds)
        {
            this.setTimeUnit();
        }

        FromDateTime    startDateTime = DateTimeUtil::removeTimeZoneOffset(FromDateTime.dateTimeValue(), userTimeZone);
        ToDateTime      endDateTime   = DateTimeUtil::removeTimeZoneOffset(ToDateTime.dateTimeValue(), userTimeZone);
        
        if (settings.StartDateTime != startDateTime
        ||  settings.EndDateTime != endDateTime)
        {
            ttsbegin;
            settings.selectForUpdate(true);
            settings.StartDateTime  = startDateTime;
            settings.EndDateTime    = endDateTime;
            settings.update();
            ttscommit;
        }
        
        if (settings.WPPDisplayMode == WPPPlanboardDisplayMode::Grid)
        {
            // TransactionWarning.visible(false); // since the new query may not return any results, always hide the warning group here
            dataClass.populateTmpData_Grid(_businessObjectAttributes_ds);
            element.linkPhysicalTableInstance();
        }
        else
        {
            GraphicalAvailability.parmStartDate(settings.StartDateTime);
            GraphicalAvailability.parmEndDate(settings.EndDateTime);
            GraphicalAvailability.parmTimeScale(TimeUnit.value());
            GraphicalAvailability.parmPeriodMinHeight(settings.CellHeight);

            switch(settings.GraphicalAggregation)
            {
                case BOBGraphicalAggregation::BusinessObject:
                    dataClass.populateTmpData_BusinessObj(_businessObjectAttributes_ds);
                    break;

                case BOBGraphicalAggregation::RentalType:
                    dataClass.populateTmpData_RentalType();
                    break;
            }

            formClass.parmTmpData_Graphical(dataClass.parmTmpData_Graphical());
            formClass.populatePlanboard(settings);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTimeUnit</Name>
				<Source><![CDATA[
    private void setTimeUnit()
    {
        if (settings.TimeUnits)
        {
            TimeUnit.value(settings.TimeUnits);
        }
        else
        {
            TimeUnit.value(#MinutesPerHour);
            TimeUnit.modified();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateAvailabilitySettings</Name>
				<Source><![CDATA[
    private void updateAvailabilitySettings()
    {
        ttsBegin;
        settings = BOBObjectAvailabilitySettings::findOrCreate(curUserId(), true, true);

        if (!parameters.AssignmentFilterRentalTypeId)
        {
            settings.RentalTypeId = '';
        }

        if (!parameters.AssignmentFilterObjectGroupId)
        {
            settings.ObjectGroupId = '';
        }

        if (!parameters.AssignmentFilterObjectSubGroupId)
        {
            settings.ObjectSubGroupId = '';
        }

        if (parameters.AssignmentFilterCurrentDepotOnly)
        {
            settings.Depot = DNRWorkerDefaults::findByUserId().InventLocationId;
        }
        else
        {
            settings.Depot = '';
        }
        
        settings.Available      = parameters.AssignmentFilterBusObjAvailableOnly;
        settings.CurrentCompany = parameters.AssignmentFilterCurrentCompanyOnly;
        settings.CurrentObjects = parameters.AssignmentFilterCurrentObjectsOnly;
        
        settings.BusObjAttrs    = parameters.AssignmentFilterBusObjAttrs && element.args().caller() && element.args().callerName()  != formStr(BOBBusinessObjectProcessingWorkspace);

        if (!settings.StartDateTime || !settings.EndDateTime)
        {
            settings.StartDateTime  = DateTimeUtil::newDateTime((DateTimeUtil::getSystemDate(userTimeZone) - #daysPerWeek), 0, userTimeZone);
            settings.EndDateTime    = DateTimeUtil::newDateTime((DateTimeUtil::getSystemDate(userTimeZone) + #daysPerWeek), timeMax(), userTimeZone);
        }
        
        // Graphical availability options
        settings.RentalBusinessObject       = parameters.AssignmentFilterInclRentalBusObject;
        settings.SubRentalBusinessObject    = parameters.AssignmentFilterInclSubRentalBusObject;
        settings.ExternalBusinessObject     = parameters.AssignmentFilterInclExternalBusObject;
        settings.SerializedBusinessObject   = parameters.AssignmentFilterInclSerializedBusObj;
        settings.BulkBusinessObject         = parameters.AssignmentFilterInclBulkBusObject;

        settings.update();
        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    public void updateDesign(WPPPlanboardDisplayMode _displayMode)
    {
        boolean isGridMode = _displayMode == WPPPlanboardDisplayMode::Grid;

        BOBObjectAvailabilitySettings::setDisplayMode(_displayMode);

        WPPWorkOrderCreateFromBusinessObject.enabled(isGridMode);
        BOBObjectTable.enabled(isGridMode);
        BOBMaintenanceTask_Delayed.enabled(isGridMode);
        BOBMaintenanceTask_Future.enabled(isGridMode);
        BOBMaintenanceHistory.enabled(isGridMode);
        WPPWorkOrderLineResource.enabled(isGridMode);
        BOBRentalTrans.enabled(isGridMode);
        RORCreateRentalQuotation.enabled(isGridMode);
        RORCreateRentalOrder.enabled(isGridMode);
        RORCreateSubRentalOrder.enabled(false);
        GridAvailability.visible(isGridMode);
        GroupGraphicalPlanBoard.visible(!isGridMode);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>TmpObjectAvailability</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            QueryBuildDataSource qbdsTmpObjectAvailability = this.query().dataSourceTable(tableNum(BOBTmpObjectAvailability));
            qbdsTmpObjectAvailability.addSortField(fieldNum(BOBTmpObjectAvailability, RentalTypeSorting));
            qbdsTmpObjectAvailability.addSortField(fieldNum(BOBTmpObjectAvailability, Priority));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>ButtonGridView</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            element.updateDesign(WPPPlanboardDisplayMode::Grid);
            element.refreshData();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonGraphicalView</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            element.updateDesign(WPPPlanboardDisplayMode::Graphical);
            element.refreshData();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonRefresh</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            element.refreshData();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RORCreateRentalQuotation</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            formClass.createRentalQuotation(tableNum(BOBObjectTable), TmpObjectAvailability.ObjectTableRecId);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RORCreateRentalOrder</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            formClass.createRentalOrder(tableNum(BOBObjectTable), TmpObjectAvailability.ObjectTableRecId);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RORCreateSubRentalOrder</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        [SysObsolete("Control RORCreateSubRentalOrder is no longer supported. Please use the Create subrental order button in the Assign Business Object form", false)]
        public void clicked()
        {
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TimeUnit</Name>
				<Type>Integer</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            settings.TimeUnits = TimeUnit.value();
    
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>GraphicalAvailability</Name>
				<Type>Custom</Type>
				<Methods>
					<Method>
						<Name>onContextPeriod</Name>
						<Source><![CDATA[
        public void onContextPeriod(HiGHPlanBoardOnContextPeriodEventArgs _contextObject, List _contextMenuItems)
        {
            _contextMenuItems = formClass.getContextMenuContent(_contextObject);

            super(_contextObject, _contextMenuItems);
        }

]]></Source>
					</Method>
					<Method>
						<Name>onContextPlannedEvent</Name>
						<Source><![CDATA[
        public void onContextPlannedEvent(HiGHPlanBoardOnContextPlannedEventEventArgs _contextObject, List _contextMenuItems)
        {
            _contextMenuItems = formClass.getContextMenuContent(_contextObject);

            super(_contextObject, _contextMenuItems);
        }

]]></Source>
					</Method>
					<Method>
						<Name>onContextRowItem</Name>
						<Source><![CDATA[
        public void onContextRowItem(HiGHPlanBoardOnContextRowItemEventArgs _contextObject, List _contextMenuItems)
        {
            _contextMenuItems = formClass.getContextMenuContent(_contextObject);

            super(_contextObject, _contextMenuItems);
        }

]]></Source>
					</Method>
					<Method>
						<Name>onMenuItemClicked</Name>
						<Source><![CDATA[
        public void onMenuItemClicked(HiGHPlanBoardMenuItemClickedEventArgs _menuItemClickedEventArgs)
        {
            formClass.onMenuItemClicked(_menuItemClickedEventArgs.parmContextObject(),
                                        _menuItemClickedEventArgs.parmMenuItemId(),
                                        _menuItemClickedEventArgs.parmMenuItemValue());

            super(_menuItemClickedEventArgs);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TmpObjectAvailability</Name>
			<Table>BOBTmpObjectAvailability</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Address</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>City</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FleetNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSerialId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsAssignable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastOnRentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ObjectAvailability</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ObjectCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ObjectGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ObjectId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ObjectLocationPostalAddressRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ObjectSubGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ObjectTableRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PhysicalOwner</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Priority</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RentalTransRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RentalTypeDescription</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RentalTypeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RentalTypeSorting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RORExpectedOffRentDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ROROffRentDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ROROnRentDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatusIcon</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Street</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ZipCode</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@DNR5889</Caption>
		<HeightMode xmlns="">SizeToContent</HeightMode>
		<Pattern xmlns="">Custom</Pattern>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">SimpleList</Style>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<WidthMode xmlns="">SizeToAvailable</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroupView</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>Settings</Name>
								<Type>MenuFunctionButton</Type>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>BOBObjectAvailabilitySettings</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ButtonGridView</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<Text>@SYS95914</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ButtonGraphicalView</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<Text>Graphical view</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ButtonRefresh</Name>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<Text>@SYS67314</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>MenuButtonCreate</Name>
								<Type>MenuButton</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>RORCreateRentalQuotation</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HelpText>@DNR5971</HelpText>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>RORRentalCreateQuotationFromObjectAvail</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>RORCreateRentalOrder</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HelpText>@DNR6281</HelpText>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>RORRentalCreateOrderFromObjectAvail</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>RORCreateSubRentalOrder</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>DNRDeletedObjects72</ConfigurationKey>
										<Type>MenuFunctionButton</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataSource>TmpObjectAvailability</DataSource>
										<MenuItemName>PurchCreateFromSalesOrder_RORFromLine</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<Text>@DNR1715</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>WPPWorkOrderCreateFromBusinessObject</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<DataSource>TmpObjectAvailability</DataSource>
										<MenuItemName>WPPWorkOrderCreateFromBusinessObject</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
								</Controls>
								<Text>@SYS24320</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>MenuButtonNavigate</Name>
								<Type>MenuButton</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>BOBObjectTable</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<DataSource>TmpObjectAvailability</DataSource>
										<MenuItemName>BOBObjectTable</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>BOBMaintenanceTask_Delayed</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<DataSource>TmpObjectAvailability</DataSource>
										<MenuItemName>BOBMaintenanceTask_Delayed</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>BOBMaintenanceTask_Future</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<DataSource>TmpObjectAvailability</DataSource>
										<MenuItemName>BOBMaintenanceTask_Future</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>BOBMaintenanceHistory</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<DataSource>TmpObjectAvailability</DataSource>
										<MenuItemName>BOBMaintenanceHistory</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>WPPWorkOrderLineResource</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<DataSource>TmpObjectAvailability</DataSource>
										<MenuItemName>WPPWorkOrderLineResource</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>BOBRentalTrans</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<DataSource>TmpObjectAvailability</DataSource>
										<MenuItemName>BOBRentalTrans</MenuItemName>
									</AxFormControl>
								</Controls>
								<Text>@SYS322829</Text>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GrpDateTimeRange</Name>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormDateTimeControl">
						<Name>FromDateTime</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>DateTime</Type>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>StartDateTime</ExtendedDataType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateTimeControl">
						<Name>ToDateTime</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>DateTime</Type>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>EndDateTime</ExtendedDataType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormIntegerControl">
						<Name>TimeUnit</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Integer</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>@DNR:PeriodInMinutes</Label>
						<LabelPosition>Above</LabelPosition>
						<Mandatory>Yes</Mandatory>
						<RotateSign>No</RotateSign>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<Caption>@SYS41297</Caption>
				<FrameOptionButton>Hide</FrameOptionButton>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>GridAvailability</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<Type>Grid</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormImageControl">
						<Name>tmpObjectAvailability_StatusIcon</Name>
						<ExtendedStyle>image_gridIcon</ExtendedStyle>
						<Type>Image</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>StatusIcon</DataField>
						<DataSource>TmpObjectAvailability</DataSource>
						<ShowLabel>No</ShowLabel>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>tmpObjectAvailability_ObjectAvailability</Name>
						<Type>CheckBox</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>ObjectAvailability</DataField>
						<DataSource>TmpObjectAvailability</DataSource>
						<Label>@SYS5014</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>TmpObjectAvailability_IsAssignable</Name>
						<Type>CheckBox</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>IsAssignable</DataField>
						<DataSource>TmpObjectAvailability</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>tmpObjectAvailability_InventSerialId</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>InventSerialId</DataField>
						<DataSource>TmpObjectAvailability</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>tmpObjectAvailability_AssetId</Name>
						<ConfigurationKey>DNRDeletedObjects10</ConfigurationKey>
						<Type>String</Type>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
						<DataField>AssetId</DataField>
						<DataSource>TmpObjectAvailability</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>TmpObjectAvailability_FleetNumber</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>FleetNumber</DataField>
						<DataSource>TmpObjectAvailability</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>tmpObjectAvailability_RentalTypeId</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>RentalTypeId</DataField>
						<DataSource>TmpObjectAvailability</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>tmpObjectAvailability_ItemId</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>ItemId</DataField>
						<DataSource>TmpObjectAvailability</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>tmpObjectAvailability_Street</Name>
						<Height>20</Height>
						<HeightMode>Manual</HeightMode>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>Street</DataField>
						<DataSource>TmpObjectAvailability</DataSource>
						<DisplayHeight>1</DisplayHeight>
						<DisplayHeightMode>Fixed</DisplayHeightMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>tmpObjectAvailability_City</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>City</DataField>
						<DataSource>TmpObjectAvailability</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateTimeControl">
						<Name>tmpObjectAvailability_ROROnRentDateTime</Name>
						<Type>DateTime</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>ROROnRentDateTime</DataField>
						<DataSource>TmpObjectAvailability</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateTimeControl">
						<Name>tmpObjectAvailability_RORExpectedOffRentDateTime</Name>
						<Type>DateTime</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>RORExpectedOffRentDateTime</DataField>
						<DataSource>TmpObjectAvailability</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateTimeControl">
						<Name>tmpObjectAvailability_ROROffRentDateTime</Name>
						<Type>DateTime</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>ROROffRentDateTime</DataField>
						<DataSource>TmpObjectAvailability</DataSource>
					</AxFormControl>
				</Controls>
				<DataSource>TmpObjectAvailability</DataSource>
				<MultiSelect>No</MultiSelect>
				<ShowRowLabels>No</ShowRowLabels>
				<Style>Tabular</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GroupGraphicalPlanBoard</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>GraphicalAvailability</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Height>700</Height>
						<HeightMode>Auto</HeightMode>
						<Width>1800</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>HiGHPlanBoard</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>parmTimeScale</Name>
									<Type>Int32</Type>
									<Value>60</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmPeriodMinHeight</Name>
									<Type>Int32</Type>
									<Value>30</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmRowItemWidth</Name>
									<Type>Int32</Type>
									<Value>100</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmShowIcons</Name>
									<Type>Enum</Type>
									<TypeName>boolean</TypeName>
									<Value>False</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmSecondaryTimeScale</Name>
									<Type>Enum</Type>
									<TypeName>HiGHPlanBoardSecondaryTimeScaleType</TypeName>
									<Value>Auto</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmAllowMultiSelectPE</Name>
									<Type>Enum</Type>
									<TypeName>boolean</TypeName>
									<Value>False</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmMode</Name>
									<Type>Enum</Type>
									<TypeName>HiGHPlanBoardMode</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmDateOnlyColumns</Name>
									<Type>Int32</Type>
									<Value>0</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmPeriodMinWidth</Name>
									<Type>Int32</Type>
									<Value>0</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmRowItemMinWidth</Name>
									<Type>Int32</Type>
									<Value>0</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmEnforceAvailability</Name>
									<Type>Enum</Type>
									<TypeName>boolean</TypeName>
									<Value>False</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmAllowResize</Name>
									<Type>Enum</Type>
									<TypeName>boolean</TypeName>
									<Value>False</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmAllowDragDrop</Name>
									<Type>Enum</Type>
									<TypeName>boolean</TypeName>
									<Value>False</Value>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
				</Controls>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>