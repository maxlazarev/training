<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WPPWorkOrderView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WPPWorkOrderView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>displayContactPersonName</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    display ContactPersonName displayContactPersonName()
    {
        ContactPersonName   name;
    
        if (hasFieldAccess(tableNum(DirPartyTable), fieldNum(DirPartyTable, Name)))
        {
            name =  ContactPerson::name(this.ContactPersonId);
        }
    
        return name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayCreatedDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the creation date of the current record.
    /// </summary>
    /// <returns>
    /// The creation date of the current record.
    /// </returns>
    /// <remarks>
    /// Retrieves the date only. Used in fact boxes.
    /// </remarks>
    [SysClientCacheDataMethodAttribute(true)]
    display CreationDate displayCreatedDate()
    {
        return DateTimeUtil::date(WPPWorkOrderTable::find(this.WorkOrderId).createdDateTime);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayCustVendAccount</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    display WPPCustVendAccount displayCustVendAccount()
    {
        CustVendAC ret;

        if (this.OrganizationParty)
        {
            if (this.CustVendAccountType == CustVendACType::Cust)
            {
                CustTable custTable;

                select firstonly AccountNum from custTable
                where custTable.Party == this.OrganizationParty;

                ret = custTable.AccountNum;
            }
            else
            {
                VendTable vendTable;

                select firstonly AccountNum from vendTable
                where vendTable.Party == this.OrganizationParty;

                ret = vendTable.AccountNum;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayPreviewPaneTitle</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gives the title on top of the preview pane.
    /// </summary>
    /// <returns>
    /// Title field of the preview pane.
    /// </returns>
    [SysClientCacheDataMethodAttribute(true)]
    display Caption displayPreviewPaneTitle()
    {
        return strFmt("@SYS330566", this.WorkOrderId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayWorkOrderLineStatus</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    display WPPWorkOrderLineStatus displayWorkOrderLineStatus()
    {
        WPPWorkOrderLineStatus  workOrderLineStatus;
    
        if (hasFieldAccess(tableNum(WPPWorkOrderLine), fieldNum(WPPWorkOrderLine, Status)))
        {
            workOrderLineStatus = WPPWorkOrderLine::getLowestStatus(this.WorkOrderId);
        }
    
        return workOrderLineStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editContactPersonName</Name>
				<Source><![CDATA[
    client server edit ContactPersonName editContactPersonName(boolean _set, ContactPersonName _name)
    {
        ContactPersonName   name = _name;
        ContactPerson       contactPerson;
        DirPartyTable       partyTable;
        ContactPersonId     contactPersonId;
        VendTable           vendTable;
    
        if (_set)
        {
            if (name)
            {
                contactPersonId      = this.ContactPersonId;
                contactPerson        = ContactPerson::find(_name);
                this.ContactPersonId = contactPerson.ContactPersonId;
    
                if (this.ContactPersonId)
                {
                    name = contactPerson.personName();
                }
                else
                {
                    select firstOnly contactPerson
                    where contactPerson.Party == this.OrganizationParty
                        join Name from partyTable
                        where partyTable.RecId == contactPerson.Party
                        &&    partyTable.Name  like name;
    
                    if (contactPerson)
                    {
                        this.ContactPersonId = contactPerson.ContactPersonId;
                        name                 = partyTable.Name;
                    }
                }
            }
            else
            {
                this.ContactPersonId = '';
            }
        }
        else
        {
            name = this.displayContactPersonName();
        }
    
        return name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dueDateOverdue</Name>
				<Source><![CDATA[
    public static server str dueDateOverdue()
    {
        str viewName                    = identifierStr(WPPWorkOrderView);
        str dataSourceWorkOrderTable    = 'WorkOrderTable';
        str greaterThanOperator         = ' > ';
        str lessThanOperator            = ' < ';
        str dateTimeNull                = SysComputedColumn::returnLiteral(1900-01-02T00:00:00);
        str currentDate                 = SysComputedColumn::getCurrentDate();
        str fieldDueDateTime            = SysComputedColumn::comparisonField(viewName,
                                                                             dataSourceWorkOrderTable,
                                                                             fieldStr(WPPWorkOrderTable, BSADueDateTime));
    
        str comparison  = SysComputedColumn::compareExpressions(currentDate, greaterThanOperator, fieldDueDateTime);
        str result      = SysComputedColumn::if(comparison, SysComputedColumn::returnLiteral(792), SysComputedColumn::returnLiteral(0));
    
        return SysComputedColumn::if(SysComputedColumn::compareExpressions(fieldDueDateTime, lessThanOperator, dateTimeNull), SysComputedColumn::returnLiteral(0), result);
    }

]]></Source>
			</Method>
			<Method>
				<Name>workOrderTableId</Name>
				<Source><![CDATA[
    //This method is needed to get TableId of WorkOrderTable on view to be used on Relations
    private static server str workOrderTableId()
    {
        TableId id = tableNum(WPPWorkOrderTable);
        return SysComputedColumn::returnLiteral(id);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@DNR7571</DeveloperDocumentation>
	<FormRef>WPPWorkOrderTable</FormRef>
	<Label>@DNR6464</Label>
	<TitleField1>WorkOrderId</TitleField1>
	<TitleField2>Name</TitleField2>
	<Query>WPPWorkOrderView</Query>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ActualPostingDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BOBObjectTableRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CompanyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContactPersonId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>displayCustVendAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustVendAccountType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustVendRef</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FINCreditCheckStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LogisticsLocationRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaintenanceDateExpected</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjInvoiceProjId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkOrderTableRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RORVenueCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkOrderId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventSerialId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>WorkOrderTableRecId</Name>
			<DataField>RecId</DataField>
			<DataSource>WorkOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Status</Name>
			<DataField>MinOfStatus</DataField>
			<DataSource>WorkOrderStatusView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ActualPostingDate</Name>
			<DataField>ActualPostingDate</DataField>
			<DataSource>WorkOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>BOBObjectTableRecId</Name>
			<DataField>BOBObjectTableRecId</DataField>
			<DataSource>WorkOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CompanyId</Name>
			<DataField>CompanyId</DataField>
			<DataSource>WorkOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ContactPersonId</Name>
			<DataField>ContactPersonId</DataField>
			<DataSource>WorkOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CustVendAccountType</Name>
			<DataField>CustVendAccountType</DataField>
			<DataSource>WorkOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CustVendRef</Name>
			<DataField>CustVendRef</DataField>
			<DataSource>WorkOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>EndDate</Name>
			<DataField>EndDate</DataField>
			<DataSource>WorkOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>FINCreditCheckStatus</Name>
			<DataField>FINCreditCheckStatus</DataField>
			<DataSource>WorkOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InventLocationId</Name>
			<DataField>InventLocationId</DataField>
			<DataSource>WorkOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>LogisticsLocationRecId</Name>
			<DataField>LogisticsLocationRecId</DataField>
			<DataSource>WorkOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>MaintenanceDateExpected</Name>
			<DataField>MaintenanceDateExpected</DataField>
			<DataSource>WorkOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Name</Name>
			<DataField>Name</DataField>
			<DataSource>WorkOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>OrderRecId</Name>
			<DataField>OrderRecId</DataField>
			<DataSource>WorkOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>OrderTableId</Name>
			<DataField>OrderTableId</DataField>
			<DataSource>WorkOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ProjGroupId</Name>
			<DataField>ProjGroupId</DataField>
			<DataSource>WorkOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ProjInvoiceProjId</Name>
			<DataField>ProjInvoiceProjId</DataField>
			<DataSource>WorkOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>RORVenueCode</Name>
			<DataField>RORVenueCode</DataField>
			<DataSource>WorkOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>StartDate</Name>
			<DataField>StartDate</DataField>
			<DataSource>WorkOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>WorkOrderId</Name>
			<DataField>WorkOrderId</DataField>
			<DataSource>WorkOrderTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InvoiceStatus</Name>
			<DataField>InvoiceStatus</DataField>
			<DataSource>WorkOrderStatusView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InventSerialId</Name>
			<DataField>InventSerialId</DataField>
			<DataSource>BOBObjectTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt">
			<Name>BSADueDateOverdue</Name>
			<ViewMethod>dueDateOverdue</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt">
			<Name>WorkOrderTableId</Name>
			<ViewMethod>workOrderTableId</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>BOBFleetNumber</Name>
			<DataField>FleetNumber</DataField>
			<DataSource>BOBObjectTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>OrganizationParty</Name>
			<DataField>OrganizationParty</DataField>
			<DataSource>WorkOrderTable</DataSource>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources />
	</ViewMetadata>
</AxView>